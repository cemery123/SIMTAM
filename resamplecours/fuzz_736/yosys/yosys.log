
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2019  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9 (git sha1 1979e0b)


-- Running command `read_verilog rtl.v; synth; write_verilog -noattr syn_yosys.v' --

1. Executing Verilog-2005 frontend: rtl.v
Parsing Verilog input from `rtl.v' to AST representation.
Generating RTLIL representation for module `\top'.
Generating RTLIL representation for module `\module13'.
Generating RTLIL representation for module `\module207'.
Generating RTLIL representation for module `\module106'.
Generating RTLIL representation for module `\module73'.
Generating RTLIL representation for module `\module30'.
Successfully finished Verilog frontend.

2. Executing SYNTH pass.

2.1. Executing HIERARCHY pass (managing design hierarchy).
Mapping positional arguments of cell module13.modinst195 (module106).
Mapping positional arguments of cell module13.modinst71 (module30).
Warning: Resizing cell port module13.modinst282.y from 9 bits to 843 bits.
Warning: Resizing cell port module13.modinst282.wire209 from 22 bits to 19 bits.
Warning: Resizing cell port module13.modinst282.wire210 from 16 bits to 3 bits.
Warning: Resizing cell port module13.modinst282.wire211 from 8 bits to 6 bits.
Warning: Resizing cell port module13.modinst195.y from 4 bits to 806 bits.
Warning: Resizing cell port module13.modinst195.wire111 from 22 bits to 13 bits.
Warning: Resizing cell port module13.modinst195.wire110 from 13 bits to 9 bits.
Warning: Resizing cell port module13.modinst195.wire108 from 12 bits to 7 bits.
Warning: Resizing cell port module13.modinst195.wire107 from 18 bits to 16 bits.
Warning: Resizing cell port module13.modinst105.y from 9 bits to 301 bits.
Warning: Resizing cell port module13.modinst105.wire76 from 12 bits to 9 bits.
Warning: Resizing cell port module13.modinst105.wire77 from 18 bits to 5 bits.
Warning: Resizing cell port module13.modinst71.y from 5 bits to 357 bits.
Warning: Resizing cell port module13.modinst71.wire34 from 8 bits to 5 bits.
Warning: Resizing cell port module13.modinst71.wire32 from 11 bits to 9 bits.
Warning: Resizing cell port module13.modinst71.wire31 from 16 bits to 9 bits.
Warning: Resizing cell port top.modinst287.y from 20 bits to 351 bits.

2.2. Executing PROC pass (convert processes to netlists).

2.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\module207.$proc$rtl.v:413$284'.
Found and cleaned up 1 empty switch in `\module13.$proc$rtl.v:128$57'.
Cleaned up 2 empty switches.

2.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 3 switch rules as full_case in process $proc$rtl.v:1453$1426 in module module30.
Marked 3 switch rules as full_case in process $proc$rtl.v:1271$1253 in module module73.
Marked 1 switch rules as full_case in process $proc$rtl.v:1180$1150 in module module106.
Marked 2 switch rules as full_case in process $proc$rtl.v:1110$1026 in module module106.
Marked 3 switch rules as full_case in process $proc$rtl.v:1036$914 in module module106.
Marked 3 switch rules as full_case in process $proc$rtl.v:978$843 in module module106.
Marked 2 switch rules as full_case in process $proc$rtl.v:944$818 in module module106.
Marked 2 switch rules as full_case in process $proc$rtl.v:904$777 in module module106.
Marked 2 switch rules as full_case in process $proc$rtl.v:851$676 in module module106.
Marked 2 switch rules as full_case in process $proc$rtl.v:624$539 in module module207.
Marked 4 switch rules as full_case in process $proc$rtl.v:552$453 in module module207.
Marked 2 switch rules as full_case in process $proc$rtl.v:494$379 in module module207.
Marked 2 switch rules as full_case in process $proc$rtl.v:413$284 in module module207.
Marked 3 switch rules as full_case in process $proc$rtl.v:128$57 in module module13.
Removed a total of 0 dead cases.

2.2.3. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\module30.$proc$rtl.v:1395$1555'.
  Set init value: \reg47 = 13'0000000000000
Found init rule in `\module30.$proc$rtl.v:1394$1554'.
  Set init value: \reg48 = 11'00000000000
Found init rule in `\module30.$proc$rtl.v:1393$1553'.
  Set init value: \reg49 = 20'00000000000000000000
Found init rule in `\module30.$proc$rtl.v:1392$1552'.
  Set init value: \reg50 = 7'0000000
Found init rule in `\module30.$proc$rtl.v:1391$1551'.
  Set init value: \reg51 = 18'000000000000000000
Found init rule in `\module30.$proc$rtl.v:1390$1550'.
  Set init value: \reg52 = 15'000000000000000
Found init rule in `\module30.$proc$rtl.v:1389$1549'.
  Set init value: \reg53 = 20'00000000000000000000
Found init rule in `\module30.$proc$rtl.v:1388$1548'.
  Set init value: \reg54 = 3'000
Found init rule in `\module30.$proc$rtl.v:1387$1547'.
  Set init value: \reg55 = 3'000
Found init rule in `\module30.$proc$rtl.v:1381$1546'.
  Set init value: \reg61 = 4'0000
Found init rule in `\module30.$proc$rtl.v:1380$1545'.
  Set init value: \reg62 = 18'000000000000000000
Found init rule in `\module30.$proc$rtl.v:1379$1544'.
  Set init value: \reg63 = 21'000000000000000000000
Found init rule in `\module30.$proc$rtl.v:1378$1543'.
  Set init value: \reg64 = 7'0000000
Found init rule in `\module30.$proc$rtl.v:1377$1542'.
  Set init value: \reg65 = 16'0000000000000000
Found init rule in `\module30.$proc$rtl.v:1376$1541'.
  Set init value: \reg66 = 21'000000000000000000000
Found init rule in `\module30.$proc$rtl.v:1375$1540'.
  Set init value: \reg67 = 17'00000000000000000
Found init rule in `\module73.$proc$rtl.v:1243$1409'.
  Set init value: \reg78 = 6'000000
Found init rule in `\module73.$proc$rtl.v:1242$1408'.
  Set init value: \reg79 = 13'0000000000000
Found init rule in `\module73.$proc$rtl.v:1241$1407'.
  Set init value: \reg80 = 9'000000000
Found init rule in `\module73.$proc$rtl.v:1240$1406'.
  Set init value: \reg81 = 21'000000000000000000000
Found init rule in `\module73.$proc$rtl.v:1239$1405'.
  Set init value: \reg82 = 4'0000
Found init rule in `\module73.$proc$rtl.v:1238$1404'.
  Set init value: \reg83 = 5'00000
Found init rule in `\module73.$proc$rtl.v:1237$1403'.
  Set init value: \reg84 = 7'0000000
Found init rule in `\module73.$proc$rtl.v:1236$1402'.
  Set init value: \reg85 = 21'000000000000000000000
Found init rule in `\module73.$proc$rtl.v:1235$1401'.
  Set init value: \reg86 = 14'00000000000000
Found init rule in `\module73.$proc$rtl.v:1234$1400'.
  Set init value: \reg87 = 5'00000
Found init rule in `\module73.$proc$rtl.v:1228$1399'.
  Set init value: \reg93 = 5'00000
Found init rule in `\module73.$proc$rtl.v:1227$1398'.
  Set init value: \reg94 = 9'000000000
Found init rule in `\module73.$proc$rtl.v:1226$1397'.
  Set init value: \reg95 = 7'0000000
Found init rule in `\module73.$proc$rtl.v:1225$1396'.
  Set init value: \reg96 = 16'0000000000000000
Found init rule in `\module73.$proc$rtl.v:1224$1395'.
  Set init value: \reg97 = 12'000000000000
Found init rule in `\module106.$proc$rtl.v:768$1252'.
  Set init value: \reg112 = 15'000000000000000
Found init rule in `\module106.$proc$rtl.v:767$1251'.
  Set init value: \reg113 = 11'00000000000
Found init rule in `\module106.$proc$rtl.v:766$1250'.
  Set init value: \reg114 = 16'0000000000000000
Found init rule in `\module106.$proc$rtl.v:765$1249'.
  Set init value: \reg115 = 17'00000000000000000
Found init rule in `\module106.$proc$rtl.v:764$1248'.
  Set init value: \reg116 = 7'0000000
Found init rule in `\module106.$proc$rtl.v:763$1247'.
  Set init value: \reg117 = 5'00000
Found init rule in `\module106.$proc$rtl.v:762$1246'.
  Set init value: \reg118 = 13'0000000000000
Found init rule in `\module106.$proc$rtl.v:761$1245'.
  Set init value: \reg119 = 7'0000000
Found init rule in `\module106.$proc$rtl.v:760$1244'.
  Set init value: \reg120 = 4'0000
Found init rule in `\module106.$proc$rtl.v:759$1243'.
  Set init value: \reg121 = 9'000000000
Found init rule in `\module106.$proc$rtl.v:757$1242'.
  Set init value: \reg123 = 17'00000000000000000
Found init rule in `\module106.$proc$rtl.v:756$1241'.
  Set init value: \reg124 = 4'0000
Found init rule in `\module106.$proc$rtl.v:755$1240'.
  Set init value: \reg125 = 19'0000000000000000000
Found init rule in `\module106.$proc$rtl.v:754$1239'.
  Set init value: \reg126 = 11'00000000000
Found init rule in `\module106.$proc$rtl.v:753$1238'.
  Set init value: \reg127 = 21'000000000000000000000
Found init rule in `\module106.$proc$rtl.v:752$1237'.
  Set init value: \reg128 = 15'000000000000000
Found init rule in `\module106.$proc$rtl.v:751$1236'.
  Set init value: \reg129 = 17'00000000000000000
Found init rule in `\module106.$proc$rtl.v:750$1235'.
  Set init value: \reg130 = 16'0000000000000000
Found init rule in `\module106.$proc$rtl.v:749$1234'.
  Set init value: \reg131 = 3'000
Found init rule in `\module106.$proc$rtl.v:748$1233'.
  Set init value: \reg132 = 3'000
Found init rule in `\module106.$proc$rtl.v:747$1232'.
  Set init value: \reg133 = 18'000000000000000000
Found init rule in `\module106.$proc$rtl.v:746$1231'.
  Set init value: \reg134 = 17'00000000000000000
Found init rule in `\module106.$proc$rtl.v:745$1230'.
  Set init value: \reg135 = 21'000000000000000000000
Found init rule in `\module106.$proc$rtl.v:744$1229'.
  Set init value: \reg136 = 10'0000000000
Found init rule in `\module106.$proc$rtl.v:743$1228'.
  Set init value: \reg137 = 3'000
Found init rule in `\module106.$proc$rtl.v:742$1227'.
  Set init value: \reg138 = 8'00000000
Found init rule in `\module106.$proc$rtl.v:741$1226'.
  Set init value: \reg139 = 13'0000000000000
Found init rule in `\module106.$proc$rtl.v:740$1225'.
  Set init value: \reg140 = 8'00000000
Found init rule in `\module106.$proc$rtl.v:739$1224'.
  Set init value: \reg141 = 10'0000000000
Found init rule in `\module106.$proc$rtl.v:736$1223'.
  Set init value: \reg144 = 18'000000000000000000
Found init rule in `\module106.$proc$rtl.v:735$1222'.
  Set init value: \reg145 = 8'00000000
Found init rule in `\module106.$proc$rtl.v:734$1221'.
  Set init value: \reg146 = 22'0000000000000000000000
Found init rule in `\module106.$proc$rtl.v:733$1220'.
  Set init value: \reg147 = 11'00000000000
Found init rule in `\module106.$proc$rtl.v:732$1219'.
  Set init value: \reg148 = 3'000
Found init rule in `\module106.$proc$rtl.v:731$1218'.
  Set init value: \reg149 = 5'00000
Found init rule in `\module106.$proc$rtl.v:730$1217'.
  Set init value: \reg150 = 21'000000000000000000000
Found init rule in `\module106.$proc$rtl.v:729$1216'.
  Set init value: \reg151 = 18'000000000000000000
Found init rule in `\module106.$proc$rtl.v:728$1215'.
  Set init value: \reg152 = 3'000
Found init rule in `\module106.$proc$rtl.v:727$1214'.
  Set init value: \reg153 = 4'0000
Found init rule in `\module106.$proc$rtl.v:726$1213'.
  Set init value: \reg154 = 11'00000000000
Found init rule in `\module106.$proc$rtl.v:725$1212'.
  Set init value: \reg155 = 15'000000000000000
Found init rule in `\module106.$proc$rtl.v:724$1211'.
  Set init value: \reg156 = 3'000
Found init rule in `\module106.$proc$rtl.v:723$1210'.
  Set init value: \reg157 = 10'0000000000
Found init rule in `\module106.$proc$rtl.v:722$1209'.
  Set init value: \reg158 = 8'00000000
Found init rule in `\module106.$proc$rtl.v:721$1208'.
  Set init value: \reg159 = 13'0000000000000
Found init rule in `\module106.$proc$rtl.v:720$1207'.
  Set init value: \reg160 = 12'000000000000
Found init rule in `\module106.$proc$rtl.v:719$1206'.
  Set init value: \reg161 = 15'000000000000000
Found init rule in `\module106.$proc$rtl.v:718$1205'.
  Set init value: \reg162 = 6'000000
Found init rule in `\module106.$proc$rtl.v:717$1204'.
  Set init value: \reg163 = 7'0000000
Found init rule in `\module106.$proc$rtl.v:716$1203'.
  Set init value: \reg164 = 6'000000
Found init rule in `\module106.$proc$rtl.v:715$1202'.
  Set init value: \reg165 = 18'000000000000000000
Found init rule in `\module106.$proc$rtl.v:714$1201'.
  Set init value: \reg166 = 11'00000000000
Found init rule in `\module106.$proc$rtl.v:713$1200'.
  Set init value: \reg167 = 11'00000000000
Found init rule in `\module106.$proc$rtl.v:712$1199'.
  Set init value: \reg168 = 4'0000
Found init rule in `\module106.$proc$rtl.v:711$1198'.
  Set init value: \reg169 = 14'00000000000000
Found init rule in `\module106.$proc$rtl.v:710$1197'.
  Set init value: \reg170 = 19'0000000000000000000
Found init rule in `\module106.$proc$rtl.v:709$1196'.
  Set init value: \reg171 = 14'00000000000000
Found init rule in `\module106.$proc$rtl.v:708$1195'.
  Set init value: \reg172 = 20'00000000000000000000
Found init rule in `\module106.$proc$rtl.v:707$1194'.
  Set init value: \reg173 = 10'0000000000
Found init rule in `\module106.$proc$rtl.v:706$1193'.
  Set init value: \reg174 = 4'0000
Found init rule in `\module106.$proc$rtl.v:705$1192'.
  Set init value: \reg175 = 10'0000000000
Found init rule in `\module106.$proc$rtl.v:704$1191'.
  Set init value: \reg176 = 3'000
Found init rule in `\module106.$proc$rtl.v:702$1190'.
  Set init value: \reg178 = 8'00000000
Found init rule in `\module106.$proc$rtl.v:701$1189'.
  Set init value: \reg179 = 3'000
Found init rule in `\module106.$proc$rtl.v:697$1188'.
  Set init value: \reg183 = 16'0000000000000000
Found init rule in `\module106.$proc$rtl.v:696$1187'.
  Set init value: \reg184 = 5'00000
Found init rule in `\module106.$proc$rtl.v:695$1186'.
  Set init value: \reg185 = 7'0000000
Found init rule in `\module106.$proc$rtl.v:694$1185'.
  Set init value: \reg186 = 14'00000000000000
Found init rule in `\module106.$proc$rtl.v:693$1184'.
  Set init value: \reg187 = 7'0000000
Found init rule in `\module207.$proc$rtl.v:311$675'.
  Set init value: \reg220 = 17'00000000000000000
Found init rule in `\module207.$proc$rtl.v:310$674'.
  Set init value: \reg221 = 16'0000000000000000
Found init rule in `\module207.$proc$rtl.v:309$673'.
  Set init value: \reg222 = 21'000000000000000000000
Found init rule in `\module207.$proc$rtl.v:308$672'.
  Set init value: \reg223 = 7'0000000
Found init rule in `\module207.$proc$rtl.v:307$671'.
  Set init value: \reg224 = 17'00000000000000000
Found init rule in `\module207.$proc$rtl.v:305$670'.
  Set init value: \reg226 = 8'00000000
Found init rule in `\module207.$proc$rtl.v:300$665'.
  Set init value: \reg231 = 10'0000000000
Found init rule in `\module207.$proc$rtl.v:299$664'.
  Set init value: \reg232 = 18'000000000000000000
Found init rule in `\module207.$proc$rtl.v:298$663'.
  Set init value: \reg233 = 15'000000000000000
Found init rule in `\module207.$proc$rtl.v:297$662'.
  Set init value: \reg234 = 11'00000000000
Found init rule in `\module207.$proc$rtl.v:296$661'.
  Set init value: \reg235 = 15'000000000000000
Found init rule in `\module207.$proc$rtl.v:295$660'.
  Set init value: \reg236 = 8'00000000
Found init rule in `\module207.$proc$rtl.v:294$659'.
  Set init value: \reg237 = 15'000000000000000
Found init rule in `\module207.$proc$rtl.v:292$658'.
  Set init value: \reg239 = 6'000000
Found init rule in `\module207.$proc$rtl.v:291$657'.
  Set init value: \reg240 = 9'000000000
Found init rule in `\module207.$proc$rtl.v:290$656'.
  Set init value: \reg241 = 11'00000000000
Found init rule in `\module207.$proc$rtl.v:289$655'.
  Set init value: \reg242 = 22'0000000000000000000000
Found init rule in `\module207.$proc$rtl.v:288$654'.
  Set init value: \reg243 = 14'00000000000000
Found init rule in `\module207.$proc$rtl.v:287$653'.
  Set init value: \reg244 = 20'00000000000000000000
Found init rule in `\module207.$proc$rtl.v:286$652'.
  Set init value: \reg245 = 21'000000000000000000000
Found init rule in `\module207.$proc$rtl.v:285$651'.
  Set init value: \reg246 = 8'00000000
Found init rule in `\module207.$proc$rtl.v:284$650'.
  Set init value: \reg247 = 11'00000000000
Found init rule in `\module207.$proc$rtl.v:283$649'.
  Set init value: \reg248 = 4'0000
Found init rule in `\module207.$proc$rtl.v:282$648'.
  Set init value: \reg249 = 12'000000000000
Found init rule in `\module207.$proc$rtl.v:281$647'.
  Set init value: \reg250 = 4'0000
Found init rule in `\module207.$proc$rtl.v:280$646'.
  Set init value: \reg251 = 13'0000000000000
Found init rule in `\module207.$proc$rtl.v:279$645'.
  Set init value: \reg252 = 8'00000000
Found init rule in `\module207.$proc$rtl.v:277$644'.
  Set init value: \reg254 = 21'000000000000000000000
Found init rule in `\module207.$proc$rtl.v:276$643'.
  Set init value: \reg255 = 5'00000
Found init rule in `\module207.$proc$rtl.v:275$642'.
  Set init value: \reg256 = 19'0000000000000000000
Found init rule in `\module207.$proc$rtl.v:274$641'.
  Set init value: \reg257 = 15'000000000000000
Found init rule in `\module207.$proc$rtl.v:273$640'.
  Set init value: \reg258 = 15'000000000000000
Found init rule in `\module207.$proc$rtl.v:272$639'.
  Set init value: \reg259 = 19'0000000000000000000
Found init rule in `\module207.$proc$rtl.v:271$638'.
  Set init value: \reg260 = 3'000
Found init rule in `\module207.$proc$rtl.v:270$637'.
  Set init value: \reg261 = 13'0000000000000
Found init rule in `\module207.$proc$rtl.v:269$636'.
  Set init value: \reg262 = 19'0000000000000000000
Found init rule in `\module207.$proc$rtl.v:268$635'.
  Set init value: \reg263 = 7'0000000
Found init rule in `\module207.$proc$rtl.v:267$634'.
  Set init value: \reg264 = 8'00000000
Found init rule in `\module207.$proc$rtl.v:266$633'.
  Set init value: \reg265 = 9'000000000
Found init rule in `\module207.$proc$rtl.v:265$632'.
  Set init value: \reg266 = 11'00000000000
Found init rule in `\module207.$proc$rtl.v:264$631'.
  Set init value: \reg267 = 8'00000000
Found init rule in `\module207.$proc$rtl.v:263$630'.
  Set init value: \reg268 = 21'000000000000000000000
Found init rule in `\module207.$proc$rtl.v:262$629'.
  Set init value: \reg269 = 13'0000000000000
Found init rule in `\module207.$proc$rtl.v:261$628'.
  Set init value: \reg270 = 20'00000000000000000000
Found init rule in `\module207.$proc$rtl.v:260$627'.
  Set init value: \reg271 = 18'000000000000000000
Found init rule in `\module207.$proc$rtl.v:259$626'.
  Set init value: \reg272 = 7'0000000
Found init rule in `\module207.$proc$rtl.v:258$625'.
  Set init value: \reg273 = 9'000000000
Found init rule in `\module207.$proc$rtl.v:257$624'.
  Set init value: \reg274 = 17'00000000000000000
Found init rule in `\module207.$proc$rtl.v:256$623'.
  Set init value: \reg275 = 21'000000000000000000000
Found init rule in `\module207.$proc$rtl.v:255$622'.
  Set init value: \reg276 = 18'000000000000000000
Found init rule in `\module207.$proc$rtl.v:254$621'.
  Set init value: \reg277 = 19'0000000000000000000
Found init rule in `\module13.$proc$rtl.v:93$248'.
  Set init value: \reg18 = 11'00000000000
Found init rule in `\module13.$proc$rtl.v:92$247'.
  Set init value: \reg19 = 8'00000000
Found init rule in `\module13.$proc$rtl.v:90$245'.
  Set init value: \reg21 = 10'0000000000
Found init rule in `\module13.$proc$rtl.v:89$244'.
  Set init value: \reg22 = 22'0000000000000000000000
Found init rule in `\module13.$proc$rtl.v:88$243'.
  Set init value: \reg23 = 22'0000000000000000000000
Found init rule in `\module13.$proc$rtl.v:87$242'.
  Set init value: \reg24 = 18'000000000000000000
Found init rule in `\module13.$proc$rtl.v:86$241'.
  Set init value: \reg25 = 22'0000000000000000000000
Found init rule in `\module13.$proc$rtl.v:85$240'.
  Set init value: \reg26 = 20'00000000000000000000
Found init rule in `\module13.$proc$rtl.v:84$239'.
  Set init value: \reg27 = 3'000
Found init rule in `\module13.$proc$rtl.v:80$238'.
  Set init value: \reg196 = 7'0000000
Found init rule in `\module13.$proc$rtl.v:79$237'.
  Set init value: \reg197 = 14'00000000000000
Found init rule in `\module13.$proc$rtl.v:78$236'.
  Set init value: \reg198 = 15'000000000000000
Found init rule in `\module13.$proc$rtl.v:77$235'.
  Set init value: \reg199 = 3'000

2.2.4. Executing PROC_ARST pass (detect async resets in processes).

2.2.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\module30.$proc$rtl.v:1395$1555'.
     1/1: $1\reg47[12:0]
Creating decoders for process `\module30.$proc$rtl.v:1394$1554'.
     1/1: $1\reg48[10:0]
Creating decoders for process `\module30.$proc$rtl.v:1393$1553'.
     1/1: $1\reg49[19:0]
Creating decoders for process `\module30.$proc$rtl.v:1392$1552'.
     1/1: $1\reg50[6:0]
Creating decoders for process `\module30.$proc$rtl.v:1391$1551'.
     1/1: $1\reg51[17:0]
Creating decoders for process `\module30.$proc$rtl.v:1390$1550'.
     1/1: $1\reg52[14:0]
Creating decoders for process `\module30.$proc$rtl.v:1389$1549'.
     1/1: $1\reg53[19:0]
Creating decoders for process `\module30.$proc$rtl.v:1388$1548'.
     1/1: $1\reg54[2:0]
Creating decoders for process `\module30.$proc$rtl.v:1387$1547'.
     1/1: $1\reg55[2:0]
Creating decoders for process `\module30.$proc$rtl.v:1381$1546'.
     1/1: $1\reg61[3:0]
Creating decoders for process `\module30.$proc$rtl.v:1380$1545'.
     1/1: $1\reg62[17:0]
Creating decoders for process `\module30.$proc$rtl.v:1379$1544'.
     1/1: $1\reg63[20:0]
Creating decoders for process `\module30.$proc$rtl.v:1378$1543'.
     1/1: $1\reg64[6:0]
Creating decoders for process `\module30.$proc$rtl.v:1377$1542'.
     1/1: $1\reg65[15:0]
Creating decoders for process `\module30.$proc$rtl.v:1376$1541'.
     1/1: $1\reg66[20:0]
Creating decoders for process `\module30.$proc$rtl.v:1375$1540'.
     1/1: $1\reg67[16:0]
Creating decoders for process `\module30.$proc$rtl.v:1528$1536'.
     1/2: $0\reg67[16:0]
     2/2: $0\reg66[20:0]
Creating decoders for process `\module30.$proc$rtl.v:1517$1517'.
     1/5: $0\reg65[15:0]
     2/5: $0\reg64[6:0]
     3/5: $0\reg63[20:0]
     4/5: $0\reg62[17:0]
     5/5: $0\reg61[3:0]
Creating decoders for process `\module30.$proc$rtl.v:1453$1426'.
     1/9: $0\reg55[2:0]
     2/9: $0\reg48[10:0]
     3/9: $0\reg47[12:0]
     4/9: $0\reg49[19:0]
     5/9: $0\reg50[6:0]
     6/9: $0\reg51[17:0]
     7/9: $0\reg52[14:0]
     8/9: $0\reg53[19:0]
     9/9: $0\reg54[2:0]
Creating decoders for process `\module73.$proc$rtl.v:1243$1409'.
     1/1: $1\reg78[5:0]
Creating decoders for process `\module73.$proc$rtl.v:1242$1408'.
     1/1: $1\reg79[12:0]
Creating decoders for process `\module73.$proc$rtl.v:1241$1407'.
     1/1: $1\reg80[8:0]
Creating decoders for process `\module73.$proc$rtl.v:1240$1406'.
     1/1: $1\reg81[20:0]
Creating decoders for process `\module73.$proc$rtl.v:1239$1405'.
     1/1: $1\reg82[3:0]
Creating decoders for process `\module73.$proc$rtl.v:1238$1404'.
     1/1: $1\reg83[4:0]
Creating decoders for process `\module73.$proc$rtl.v:1237$1403'.
     1/1: $1\reg84[6:0]
Creating decoders for process `\module73.$proc$rtl.v:1236$1402'.
     1/1: $1\reg85[20:0]
Creating decoders for process `\module73.$proc$rtl.v:1235$1401'.
     1/1: $1\reg86[13:0]
Creating decoders for process `\module73.$proc$rtl.v:1234$1400'.
     1/1: $1\reg87[4:0]
Creating decoders for process `\module73.$proc$rtl.v:1228$1399'.
     1/1: $1\reg93[4:0]
Creating decoders for process `\module73.$proc$rtl.v:1227$1398'.
     1/1: $1\reg94[8:0]
Creating decoders for process `\module73.$proc$rtl.v:1226$1397'.
     1/1: $1\reg95[6:0]
Creating decoders for process `\module73.$proc$rtl.v:1225$1396'.
     1/1: $1\reg96[15:0]
Creating decoders for process `\module73.$proc$rtl.v:1224$1395'.
     1/1: $1\reg97[11:0]
Creating decoders for process `\module73.$proc$rtl.v:1341$1346'.
     1/5: $0\reg97[11:0]
     2/5: $0\reg96[15:0]
     3/5: $0\reg95[6:0]
     4/5: $0\reg94[8:0]
     5/5: $0\reg93[4:0]
Creating decoders for process `\module73.$proc$rtl.v:1271$1253'.
     1/10: $0\reg87[4:0]
     2/10: $0\reg86[13:0]
     3/10: $0\reg85[20:0]
     4/10: $0\reg78[5:0]
     5/10: $0\reg79[12:0]
     6/10: $0\reg80[8:0]
     7/10: $0\reg81[20:0]
     8/10: $0\reg82[3:0]
     9/10: $0\reg83[4:0]
    10/10: $0\reg84[6:0]
Creating decoders for process `\module106.$proc$rtl.v:768$1252'.
     1/1: $1\reg112[14:0]
Creating decoders for process `\module106.$proc$rtl.v:767$1251'.
     1/1: $1\reg113[10:0]
Creating decoders for process `\module106.$proc$rtl.v:766$1250'.
     1/1: $1\reg114[15:0]
Creating decoders for process `\module106.$proc$rtl.v:765$1249'.
     1/1: $1\reg115[16:0]
Creating decoders for process `\module106.$proc$rtl.v:764$1248'.
     1/1: $1\reg116[6:0]
Creating decoders for process `\module106.$proc$rtl.v:763$1247'.
     1/1: $1\reg117[4:0]
Creating decoders for process `\module106.$proc$rtl.v:762$1246'.
     1/1: $1\reg118[12:0]
Creating decoders for process `\module106.$proc$rtl.v:761$1245'.
     1/1: $1\reg119[6:0]
Creating decoders for process `\module106.$proc$rtl.v:760$1244'.
     1/1: $1\reg120[3:0]
Creating decoders for process `\module106.$proc$rtl.v:759$1243'.
     1/1: $1\reg121[8:0]
Creating decoders for process `\module106.$proc$rtl.v:757$1242'.
     1/1: $1\reg123[16:0]
Creating decoders for process `\module106.$proc$rtl.v:756$1241'.
     1/1: $1\reg124[3:0]
Creating decoders for process `\module106.$proc$rtl.v:755$1240'.
     1/1: $1\reg125[18:0]
Creating decoders for process `\module106.$proc$rtl.v:754$1239'.
     1/1: $1\reg126[10:0]
Creating decoders for process `\module106.$proc$rtl.v:753$1238'.
     1/1: $1\reg127[20:0]
Creating decoders for process `\module106.$proc$rtl.v:752$1237'.
     1/1: $1\reg128[14:0]
Creating decoders for process `\module106.$proc$rtl.v:751$1236'.
     1/1: $1\reg129[16:0]
Creating decoders for process `\module106.$proc$rtl.v:750$1235'.
     1/1: $1\reg130[15:0]
Creating decoders for process `\module106.$proc$rtl.v:749$1234'.
     1/1: $1\reg131[2:0]
Creating decoders for process `\module106.$proc$rtl.v:748$1233'.
     1/1: $1\reg132[2:0]
Creating decoders for process `\module106.$proc$rtl.v:747$1232'.
     1/1: $1\reg133[17:0]
Creating decoders for process `\module106.$proc$rtl.v:746$1231'.
     1/1: $1\reg134[16:0]
Creating decoders for process `\module106.$proc$rtl.v:745$1230'.
     1/1: $1\reg135[20:0]
Creating decoders for process `\module106.$proc$rtl.v:744$1229'.
     1/1: $1\reg136[9:0]
Creating decoders for process `\module106.$proc$rtl.v:743$1228'.
     1/1: $1\reg137[2:0]
Creating decoders for process `\module106.$proc$rtl.v:742$1227'.
     1/1: $1\reg138[7:0]
Creating decoders for process `\module106.$proc$rtl.v:741$1226'.
     1/1: $1\reg139[12:0]
Creating decoders for process `\module106.$proc$rtl.v:740$1225'.
     1/1: $1\reg140[7:0]
Creating decoders for process `\module106.$proc$rtl.v:739$1224'.
     1/1: $1\reg141[9:0]
Creating decoders for process `\module106.$proc$rtl.v:736$1223'.
     1/1: $1\reg144[17:0]
Creating decoders for process `\module106.$proc$rtl.v:735$1222'.
     1/1: $1\reg145[7:0]
Creating decoders for process `\module106.$proc$rtl.v:734$1221'.
     1/1: $1\reg146[21:0]
Creating decoders for process `\module106.$proc$rtl.v:733$1220'.
     1/1: $1\reg147[10:0]
Creating decoders for process `\module106.$proc$rtl.v:732$1219'.
     1/1: $1\reg148[2:0]
Creating decoders for process `\module106.$proc$rtl.v:731$1218'.
     1/1: $1\reg149[4:0]
Creating decoders for process `\module106.$proc$rtl.v:730$1217'.
     1/1: $1\reg150[20:0]
Creating decoders for process `\module106.$proc$rtl.v:729$1216'.
     1/1: $1\reg151[17:0]
Creating decoders for process `\module106.$proc$rtl.v:728$1215'.
     1/1: $1\reg152[2:0]
Creating decoders for process `\module106.$proc$rtl.v:727$1214'.
     1/1: $1\reg153[3:0]
Creating decoders for process `\module106.$proc$rtl.v:726$1213'.
     1/1: $1\reg154[10:0]
Creating decoders for process `\module106.$proc$rtl.v:725$1212'.
     1/1: $1\reg155[14:0]
Creating decoders for process `\module106.$proc$rtl.v:724$1211'.
     1/1: $1\reg156[2:0]
Creating decoders for process `\module106.$proc$rtl.v:723$1210'.
     1/1: $1\reg157[9:0]
Creating decoders for process `\module106.$proc$rtl.v:722$1209'.
     1/1: $1\reg158[7:0]
Creating decoders for process `\module106.$proc$rtl.v:721$1208'.
     1/1: $1\reg159[12:0]
Creating decoders for process `\module106.$proc$rtl.v:720$1207'.
     1/1: $1\reg160[11:0]
Creating decoders for process `\module106.$proc$rtl.v:719$1206'.
     1/1: $1\reg161[14:0]
Creating decoders for process `\module106.$proc$rtl.v:718$1205'.
     1/1: $1\reg162[5:0]
Creating decoders for process `\module106.$proc$rtl.v:717$1204'.
     1/1: $1\reg163[6:0]
Creating decoders for process `\module106.$proc$rtl.v:716$1203'.
     1/1: $1\reg164[5:0]
Creating decoders for process `\module106.$proc$rtl.v:715$1202'.
     1/1: $1\reg165[17:0]
Creating decoders for process `\module106.$proc$rtl.v:714$1201'.
     1/1: $1\reg166[10:0]
Creating decoders for process `\module106.$proc$rtl.v:713$1200'.
     1/1: $1\reg167[10:0]
Creating decoders for process `\module106.$proc$rtl.v:712$1199'.
     1/1: $1\reg168[3:0]
Creating decoders for process `\module106.$proc$rtl.v:711$1198'.
     1/1: $1\reg169[13:0]
Creating decoders for process `\module106.$proc$rtl.v:710$1197'.
     1/1: $1\reg170[18:0]
Creating decoders for process `\module106.$proc$rtl.v:709$1196'.
     1/1: $1\reg171[13:0]
Creating decoders for process `\module106.$proc$rtl.v:708$1195'.
     1/1: $1\reg172[19:0]
Creating decoders for process `\module106.$proc$rtl.v:707$1194'.
     1/1: $1\reg173[9:0]
Creating decoders for process `\module106.$proc$rtl.v:706$1193'.
     1/1: $1\reg174[3:0]
Creating decoders for process `\module106.$proc$rtl.v:705$1192'.
     1/1: $1\reg175[9:0]
Creating decoders for process `\module106.$proc$rtl.v:704$1191'.
     1/1: $1\reg176[2:0]
Creating decoders for process `\module106.$proc$rtl.v:702$1190'.
     1/1: $1\reg178[7:0]
Creating decoders for process `\module106.$proc$rtl.v:701$1189'.
     1/1: $1\reg179[2:0]
Creating decoders for process `\module106.$proc$rtl.v:697$1188'.
     1/1: $1\reg183[15:0]
Creating decoders for process `\module106.$proc$rtl.v:696$1187'.
     1/1: $1\reg184[4:0]
Creating decoders for process `\module106.$proc$rtl.v:695$1186'.
     1/1: $1\reg185[6:0]
Creating decoders for process `\module106.$proc$rtl.v:694$1185'.
     1/1: $1\reg186[13:0]
Creating decoders for process `\module106.$proc$rtl.v:693$1184'.
     1/1: $1\reg187[6:0]
Creating decoders for process `\module106.$proc$rtl.v:1180$1150'.
     1/5: $0\reg183[15:0]
     2/5: $0\reg184[4:0]
     3/5: $0\reg185[6:0]
     4/5: $0\reg186[13:0]
     5/5: $0\reg187[6:0]
Creating decoders for process `\module106.$proc$rtl.v:1167$1127'.
     1/2: $0\reg179[2:0]
     2/2: $0\reg178[7:0]
Creating decoders for process `\module106.$proc$rtl.v:1110$1026'.
     1/11: $0\reg176[2:0]
     2/11: $0\reg175[9:0]
     3/11: $0\reg166[10:0]
     4/11: $0\reg167[10:0]
     5/11: $0\reg168[3:0]
     6/11: $0\reg169[13:0]
     7/11: $0\reg170[18:0]
     8/11: $0\reg171[13:0]
     9/11: $0\reg172[19:0]
    10/11: $0\reg173[9:0]
    11/11: $0\reg174[3:0]
Creating decoders for process `\module106.$proc$rtl.v:1036$914'.
     1/14: $0\reg165[17:0]
     2/14: $0\reg164[5:0]
     3/14: $0\reg163[6:0]
     4/14: $0\reg152[2:0]
     5/14: $0\reg153[3:0]
     6/14: $0\reg154[10:0]
     7/14: $0\reg155[14:0]
     8/14: $0\reg156[2:0]
     9/14: $0\reg157[9:0]
    10/14: $0\reg158[7:0]
    11/14: $0\reg159[12:0]
    12/14: $0\reg160[11:0]
    13/14: $0\reg161[14:0]
    14/14: $0\reg162[5:0]
Creating decoders for process `\module106.$proc$rtl.v:978$843'.
     1/8: $0\reg144[17:0]
     2/8: $0\reg145[7:0]
     3/8: $0\reg146[21:0]
     4/8: $0\reg147[10:0]
     5/8: $0\reg148[2:0]
     6/8: $0\reg149[4:0]
     7/8: $0\reg150[20:0]
     8/8: $0\reg151[17:0]
Creating decoders for process `\module106.$proc$rtl.v:944$818'.
     1/8: $0\reg141[9:0]
     2/8: $0\reg134[16:0]
     3/8: $0\reg135[20:0]
     4/8: $0\reg136[9:0]
     5/8: $0\reg137[2:0]
     6/8: $0\reg138[7:0]
     7/8: $0\reg139[12:0]
     8/8: $0\reg140[7:0]
Creating decoders for process `\module106.$proc$rtl.v:904$777'.
     1/11: $0\reg133[17:0]
     2/11: $0\reg132[2:0]
     3/11: $0\reg123[16:0]
     4/11: $0\reg124[3:0]
     5/11: $0\reg125[18:0]
     6/11: $0\reg126[10:0]
     7/11: $0\reg127[20:0]
     8/11: $0\reg128[14:0]
     9/11: $0\reg129[16:0]
    10/11: $0\reg130[15:0]
    11/11: $0\reg131[2:0]
Creating decoders for process `\module106.$proc$rtl.v:851$676'.
     1/10: $0\reg114[15:0]
     2/10: $0\reg113[10:0]
     3/10: $0\reg112[14:0]
     4/10: $0\reg115[16:0]
     5/10: $0\reg116[6:0]
     6/10: $0\reg117[4:0]
     7/10: $0\reg118[12:0]
     8/10: $0\reg119[6:0]
     9/10: $0\reg120[3:0]
    10/10: $0\reg121[8:0]
Creating decoders for process `\module207.$proc$rtl.v:311$675'.
     1/1: $1\reg220[16:0]
Creating decoders for process `\module207.$proc$rtl.v:310$674'.
     1/1: $1\reg221[15:0]
Creating decoders for process `\module207.$proc$rtl.v:309$673'.
     1/1: $1\reg222[20:0]
Creating decoders for process `\module207.$proc$rtl.v:308$672'.
     1/1: $1\reg223[6:0]
Creating decoders for process `\module207.$proc$rtl.v:307$671'.
     1/1: $1\reg224[16:0]
Creating decoders for process `\module207.$proc$rtl.v:305$670'.
     1/1: $1\reg226[7:0]
Creating decoders for process `\module207.$proc$rtl.v:304$669'.
     1/1: $0\reg227[18:0]
Creating decoders for process `\module207.$proc$rtl.v:303$668'.
     1/1: $0\reg228[2:0]
Creating decoders for process `\module207.$proc$rtl.v:302$667'.
     1/1: $0\reg229[13:0]
Creating decoders for process `\module207.$proc$rtl.v:301$666'.
     1/1: $0\reg230[11:0]
Creating decoders for process `\module207.$proc$rtl.v:300$665'.
     1/1: $1\reg231[9:0]
Creating decoders for process `\module207.$proc$rtl.v:299$664'.
     1/1: $1\reg232[17:0]
Creating decoders for process `\module207.$proc$rtl.v:298$663'.
     1/1: $1\reg233[14:0]
Creating decoders for process `\module207.$proc$rtl.v:297$662'.
     1/1: $1\reg234[10:0]
Creating decoders for process `\module207.$proc$rtl.v:296$661'.
     1/1: $1\reg235[14:0]
Creating decoders for process `\module207.$proc$rtl.v:295$660'.
     1/1: $1\reg236[7:0]
Creating decoders for process `\module207.$proc$rtl.v:294$659'.
     1/1: $1\reg237[14:0]
Creating decoders for process `\module207.$proc$rtl.v:292$658'.
     1/1: $1\reg239[5:0]
Creating decoders for process `\module207.$proc$rtl.v:291$657'.
     1/1: $1\reg240[8:0]
Creating decoders for process `\module207.$proc$rtl.v:290$656'.
     1/1: $1\reg241[10:0]
Creating decoders for process `\module207.$proc$rtl.v:289$655'.
     1/1: $1\reg242[21:0]
Creating decoders for process `\module207.$proc$rtl.v:288$654'.
     1/1: $1\reg243[13:0]
Creating decoders for process `\module207.$proc$rtl.v:287$653'.
     1/1: $1\reg244[19:0]
Creating decoders for process `\module207.$proc$rtl.v:286$652'.
     1/1: $1\reg245[20:0]
Creating decoders for process `\module207.$proc$rtl.v:285$651'.
     1/1: $1\reg246[7:0]
Creating decoders for process `\module207.$proc$rtl.v:284$650'.
     1/1: $1\reg247[10:0]
Creating decoders for process `\module207.$proc$rtl.v:283$649'.
     1/1: $1\reg248[3:0]
Creating decoders for process `\module207.$proc$rtl.v:282$648'.
     1/1: $1\reg249[11:0]
Creating decoders for process `\module207.$proc$rtl.v:281$647'.
     1/1: $1\reg250[3:0]
Creating decoders for process `\module207.$proc$rtl.v:280$646'.
     1/1: $1\reg251[12:0]
Creating decoders for process `\module207.$proc$rtl.v:279$645'.
     1/1: $1\reg252[7:0]
Creating decoders for process `\module207.$proc$rtl.v:277$644'.
     1/1: $1\reg254[20:0]
Creating decoders for process `\module207.$proc$rtl.v:276$643'.
     1/1: $1\reg255[4:0]
Creating decoders for process `\module207.$proc$rtl.v:275$642'.
     1/1: $1\reg256[18:0]
Creating decoders for process `\module207.$proc$rtl.v:274$641'.
     1/1: $1\reg257[14:0]
Creating decoders for process `\module207.$proc$rtl.v:273$640'.
     1/1: $1\reg258[14:0]
Creating decoders for process `\module207.$proc$rtl.v:272$639'.
     1/1: $1\reg259[18:0]
Creating decoders for process `\module207.$proc$rtl.v:271$638'.
     1/1: $1\reg260[2:0]
Creating decoders for process `\module207.$proc$rtl.v:270$637'.
     1/1: $1\reg261[12:0]
Creating decoders for process `\module207.$proc$rtl.v:269$636'.
     1/1: $1\reg262[18:0]
Creating decoders for process `\module207.$proc$rtl.v:268$635'.
     1/1: $1\reg263[6:0]
Creating decoders for process `\module207.$proc$rtl.v:267$634'.
     1/1: $1\reg264[7:0]
Creating decoders for process `\module207.$proc$rtl.v:266$633'.
     1/1: $1\reg265[8:0]
Creating decoders for process `\module207.$proc$rtl.v:265$632'.
     1/1: $1\reg266[10:0]
Creating decoders for process `\module207.$proc$rtl.v:264$631'.
     1/1: $1\reg267[7:0]
Creating decoders for process `\module207.$proc$rtl.v:263$630'.
     1/1: $1\reg268[20:0]
Creating decoders for process `\module207.$proc$rtl.v:262$629'.
     1/1: $1\reg269[12:0]
Creating decoders for process `\module207.$proc$rtl.v:261$628'.
     1/1: $1\reg270[19:0]
Creating decoders for process `\module207.$proc$rtl.v:260$627'.
     1/1: $1\reg271[17:0]
Creating decoders for process `\module207.$proc$rtl.v:259$626'.
     1/1: $1\reg272[6:0]
Creating decoders for process `\module207.$proc$rtl.v:258$625'.
     1/1: $1\reg273[8:0]
Creating decoders for process `\module207.$proc$rtl.v:257$624'.
     1/1: $1\reg274[16:0]
Creating decoders for process `\module207.$proc$rtl.v:256$623'.
     1/1: $1\reg275[20:0]
Creating decoders for process `\module207.$proc$rtl.v:255$622'.
     1/1: $1\reg276[17:0]
Creating decoders for process `\module207.$proc$rtl.v:254$621'.
     1/1: $1\reg277[18:0]
Creating decoders for process `\module207.$proc$rtl.v:624$539'.
     1/9: $0\reg277[18:0]
     2/9: $0\reg276[17:0]
     3/9: $0\reg269[12:0]
     4/9: $0\reg270[19:0]
     5/9: $0\reg271[17:0]
     6/9: $0\reg272[6:0]
     7/9: $0\reg275[20:0]
     8/9: $0\reg274[16:0]
     9/9: $0\reg273[8:0]
Creating decoders for process `\module207.$proc$rtl.v:552$453'.
     1/15: $0\reg264[7:0]
     2/15: $0\reg263[6:0]
     3/15: $0\reg262[18:0]
     4/15: $0\reg254[20:0]
     5/15: $0\reg255[4:0]
     6/15: $0\reg256[18:0]
     7/15: $0\reg257[14:0]
     8/15: $0\reg258[14:0]
     9/15: $0\reg259[18:0]
    10/15: $0\reg260[2:0]
    11/15: $0\reg261[12:0]
    12/15: $0\reg265[8:0]
    13/15: $0\reg266[10:0]
    14/15: $0\reg267[7:0]
    15/15: $0\reg268[20:0]
Creating decoders for process `\module207.$proc$rtl.v:538$433'.
     1/5: $0\reg252[7:0]
     2/5: $0\reg251[12:0]
     3/5: $0\reg250[3:0]
     4/5: $0\reg249[11:0]
     5/5: $0\reg248[3:0]
Creating decoders for process `\module207.$proc$rtl.v:494$379'.
     1/9: $0\reg247[10:0]
     2/9: $0\reg239[5:0]
     3/9: $0\reg240[8:0]
     4/9: $0\reg241[10:0]
     5/9: $0\reg242[21:0]
     6/9: $0\reg243[13:0]
     7/9: $0\reg244[19:0]
     8/9: $0\reg245[20:0]
     9/9: $0\reg246[7:0]
Creating decoders for process `\module207.$proc$rtl.v:413$284'.
     1/8: $0\reg226[7:0]
     2/8: $0\reg231[9:0]
     3/8: $0\reg232[17:0]
     4/8: $0\reg233[14:0]
     5/8: $0\reg234[10:0]
     6/8: $0\reg235[14:0]
     7/8: $0\reg236[7:0]
     8/8: $0\reg237[14:0]
Creating decoders for process `\module207.$proc$rtl.v:402$275'.
     1/5: $0\reg224[16:0]
     2/5: $0\reg223[6:0]
     3/5: $0\reg222[20:0]
     4/5: $0\reg221[15:0]
     5/5: $0\reg220[16:0]
Creating decoders for process `\module13.$proc$rtl.v:93$248'.
     1/1: $1\reg18[10:0]
Creating decoders for process `\module13.$proc$rtl.v:92$247'.
     1/1: $1\reg19[7:0]
Creating decoders for process `\module13.$proc$rtl.v:91$246'.
     1/1: $0\reg20[17:0]
Creating decoders for process `\module13.$proc$rtl.v:90$245'.
     1/1: $1\reg21[9:0]
Creating decoders for process `\module13.$proc$rtl.v:89$244'.
     1/1: $1\reg22[21:0]
Creating decoders for process `\module13.$proc$rtl.v:88$243'.
     1/1: $1\reg23[21:0]
Creating decoders for process `\module13.$proc$rtl.v:87$242'.
     1/1: $1\reg24[17:0]
Creating decoders for process `\module13.$proc$rtl.v:86$241'.
     1/1: $1\reg25[21:0]
Creating decoders for process `\module13.$proc$rtl.v:85$240'.
     1/1: $1\reg26[19:0]
Creating decoders for process `\module13.$proc$rtl.v:84$239'.
     1/1: $1\reg27[2:0]
Creating decoders for process `\module13.$proc$rtl.v:80$238'.
     1/1: $1\reg196[6:0]
Creating decoders for process `\module13.$proc$rtl.v:79$237'.
     1/1: $1\reg197[13:0]
Creating decoders for process `\module13.$proc$rtl.v:78$236'.
     1/1: $1\reg198[14:0]
Creating decoders for process `\module13.$proc$rtl.v:77$235'.
     1/1: $1\reg199[2:0]
Creating decoders for process `\module13.$proc$rtl.v:214$190'.
     1/4: $0\reg199[2:0]
     2/4: $0\reg198[14:0]
     3/4: $0\reg197[13:0]
     4/4: $0\reg196[6:0]
Creating decoders for process `\module13.$proc$rtl.v:128$57'.
     1/9: $0\reg27[2:0]
     2/9: $0\reg18[10:0]
     3/9: $0\reg19[7:0]
     4/9: $0\reg21[9:0]
     5/9: $0\reg22[21:0]
     6/9: $0\reg23[21:0]
     7/9: $0\reg24[17:0]
     8/9: $0\reg25[21:0]
     9/9: $0\reg26[19:0]

2.2.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\module207.\reg227' from process `\module207.$proc$rtl.v:304$669'.
No latch inferred for signal `\module207.\reg228' from process `\module207.$proc$rtl.v:303$668'.
No latch inferred for signal `\module207.\reg229' from process `\module207.$proc$rtl.v:302$667'.
No latch inferred for signal `\module207.\reg230' from process `\module207.$proc$rtl.v:301$666'.
No latch inferred for signal `\module13.\reg20' from process `\module13.$proc$rtl.v:91$246'.

2.2.7. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\module30.\reg67' using process `\module30.$proc$rtl.v:1528$1536'.
  created $dff cell `$procdff$2113' with positive edge clock.
Creating register for signal `\module30.\reg66' using process `\module30.$proc$rtl.v:1528$1536'.
  created $dff cell `$procdff$2114' with positive edge clock.
Creating register for signal `\module30.\reg65' using process `\module30.$proc$rtl.v:1517$1517'.
  created $dff cell `$procdff$2115' with positive edge clock.
Creating register for signal `\module30.\reg64' using process `\module30.$proc$rtl.v:1517$1517'.
  created $dff cell `$procdff$2116' with positive edge clock.
Creating register for signal `\module30.\reg63' using process `\module30.$proc$rtl.v:1517$1517'.
  created $dff cell `$procdff$2117' with positive edge clock.
Creating register for signal `\module30.\reg62' using process `\module30.$proc$rtl.v:1517$1517'.
  created $dff cell `$procdff$2118' with positive edge clock.
Creating register for signal `\module30.\reg61' using process `\module30.$proc$rtl.v:1517$1517'.
  created $dff cell `$procdff$2119' with positive edge clock.
Creating register for signal `\module30.\reg55' using process `\module30.$proc$rtl.v:1453$1426'.
  created $dff cell `$procdff$2120' with positive edge clock.
Creating register for signal `\module30.\reg54' using process `\module30.$proc$rtl.v:1453$1426'.
  created $dff cell `$procdff$2121' with positive edge clock.
Creating register for signal `\module30.\reg53' using process `\module30.$proc$rtl.v:1453$1426'.
  created $dff cell `$procdff$2122' with positive edge clock.
Creating register for signal `\module30.\reg52' using process `\module30.$proc$rtl.v:1453$1426'.
  created $dff cell `$procdff$2123' with positive edge clock.
Creating register for signal `\module30.\reg51' using process `\module30.$proc$rtl.v:1453$1426'.
  created $dff cell `$procdff$2124' with positive edge clock.
Creating register for signal `\module30.\reg50' using process `\module30.$proc$rtl.v:1453$1426'.
  created $dff cell `$procdff$2125' with positive edge clock.
Creating register for signal `\module30.\reg49' using process `\module30.$proc$rtl.v:1453$1426'.
  created $dff cell `$procdff$2126' with positive edge clock.
Creating register for signal `\module30.\reg48' using process `\module30.$proc$rtl.v:1453$1426'.
  created $dff cell `$procdff$2127' with positive edge clock.
Creating register for signal `\module30.\reg47' using process `\module30.$proc$rtl.v:1453$1426'.
  created $dff cell `$procdff$2128' with positive edge clock.
Creating register for signal `\module73.\reg97' using process `\module73.$proc$rtl.v:1341$1346'.
  created $dff cell `$procdff$2129' with positive edge clock.
Creating register for signal `\module73.\reg96' using process `\module73.$proc$rtl.v:1341$1346'.
  created $dff cell `$procdff$2130' with positive edge clock.
Creating register for signal `\module73.\reg95' using process `\module73.$proc$rtl.v:1341$1346'.
  created $dff cell `$procdff$2131' with positive edge clock.
Creating register for signal `\module73.\reg94' using process `\module73.$proc$rtl.v:1341$1346'.
  created $dff cell `$procdff$2132' with positive edge clock.
Creating register for signal `\module73.\reg93' using process `\module73.$proc$rtl.v:1341$1346'.
  created $dff cell `$procdff$2133' with positive edge clock.
Creating register for signal `\module73.\reg87' using process `\module73.$proc$rtl.v:1271$1253'.
  created $dff cell `$procdff$2134' with positive edge clock.
Creating register for signal `\module73.\reg86' using process `\module73.$proc$rtl.v:1271$1253'.
  created $dff cell `$procdff$2135' with positive edge clock.
Creating register for signal `\module73.\reg85' using process `\module73.$proc$rtl.v:1271$1253'.
  created $dff cell `$procdff$2136' with positive edge clock.
Creating register for signal `\module73.\reg84' using process `\module73.$proc$rtl.v:1271$1253'.
  created $dff cell `$procdff$2137' with positive edge clock.
Creating register for signal `\module73.\reg83' using process `\module73.$proc$rtl.v:1271$1253'.
  created $dff cell `$procdff$2138' with positive edge clock.
Creating register for signal `\module73.\reg82' using process `\module73.$proc$rtl.v:1271$1253'.
  created $dff cell `$procdff$2139' with positive edge clock.
Creating register for signal `\module73.\reg81' using process `\module73.$proc$rtl.v:1271$1253'.
  created $dff cell `$procdff$2140' with positive edge clock.
Creating register for signal `\module73.\reg80' using process `\module73.$proc$rtl.v:1271$1253'.
  created $dff cell `$procdff$2141' with positive edge clock.
Creating register for signal `\module73.\reg79' using process `\module73.$proc$rtl.v:1271$1253'.
  created $dff cell `$procdff$2142' with positive edge clock.
Creating register for signal `\module73.\reg78' using process `\module73.$proc$rtl.v:1271$1253'.
  created $dff cell `$procdff$2143' with positive edge clock.
Creating register for signal `\module106.\reg187' using process `\module106.$proc$rtl.v:1180$1150'.
  created $dff cell `$procdff$2144' with positive edge clock.
Creating register for signal `\module106.\reg186' using process `\module106.$proc$rtl.v:1180$1150'.
  created $dff cell `$procdff$2145' with positive edge clock.
Creating register for signal `\module106.\reg185' using process `\module106.$proc$rtl.v:1180$1150'.
  created $dff cell `$procdff$2146' with positive edge clock.
Creating register for signal `\module106.\reg184' using process `\module106.$proc$rtl.v:1180$1150'.
  created $dff cell `$procdff$2147' with positive edge clock.
Creating register for signal `\module106.\reg183' using process `\module106.$proc$rtl.v:1180$1150'.
  created $dff cell `$procdff$2148' with positive edge clock.
Creating register for signal `\module106.\reg179' using process `\module106.$proc$rtl.v:1167$1127'.
  created $dff cell `$procdff$2149' with positive edge clock.
Creating register for signal `\module106.\reg178' using process `\module106.$proc$rtl.v:1167$1127'.
  created $dff cell `$procdff$2150' with positive edge clock.
Creating register for signal `\module106.\reg176' using process `\module106.$proc$rtl.v:1110$1026'.
  created $dff cell `$procdff$2151' with positive edge clock.
Creating register for signal `\module106.\reg175' using process `\module106.$proc$rtl.v:1110$1026'.
  created $dff cell `$procdff$2152' with positive edge clock.
Creating register for signal `\module106.\reg174' using process `\module106.$proc$rtl.v:1110$1026'.
  created $dff cell `$procdff$2153' with positive edge clock.
Creating register for signal `\module106.\reg173' using process `\module106.$proc$rtl.v:1110$1026'.
  created $dff cell `$procdff$2154' with positive edge clock.
Creating register for signal `\module106.\reg172' using process `\module106.$proc$rtl.v:1110$1026'.
  created $dff cell `$procdff$2155' with positive edge clock.
Creating register for signal `\module106.\reg171' using process `\module106.$proc$rtl.v:1110$1026'.
  created $dff cell `$procdff$2156' with positive edge clock.
Creating register for signal `\module106.\reg170' using process `\module106.$proc$rtl.v:1110$1026'.
  created $dff cell `$procdff$2157' with positive edge clock.
Creating register for signal `\module106.\reg169' using process `\module106.$proc$rtl.v:1110$1026'.
  created $dff cell `$procdff$2158' with positive edge clock.
Creating register for signal `\module106.\reg168' using process `\module106.$proc$rtl.v:1110$1026'.
  created $dff cell `$procdff$2159' with positive edge clock.
Creating register for signal `\module106.\reg167' using process `\module106.$proc$rtl.v:1110$1026'.
  created $dff cell `$procdff$2160' with positive edge clock.
Creating register for signal `\module106.\reg166' using process `\module106.$proc$rtl.v:1110$1026'.
  created $dff cell `$procdff$2161' with positive edge clock.
Creating register for signal `\module106.\reg165' using process `\module106.$proc$rtl.v:1036$914'.
  created $dff cell `$procdff$2162' with positive edge clock.
Creating register for signal `\module106.\reg164' using process `\module106.$proc$rtl.v:1036$914'.
  created $dff cell `$procdff$2163' with positive edge clock.
Creating register for signal `\module106.\reg163' using process `\module106.$proc$rtl.v:1036$914'.
  created $dff cell `$procdff$2164' with positive edge clock.
Creating register for signal `\module106.\reg162' using process `\module106.$proc$rtl.v:1036$914'.
  created $dff cell `$procdff$2165' with positive edge clock.
Creating register for signal `\module106.\reg161' using process `\module106.$proc$rtl.v:1036$914'.
  created $dff cell `$procdff$2166' with positive edge clock.
Creating register for signal `\module106.\reg160' using process `\module106.$proc$rtl.v:1036$914'.
  created $dff cell `$procdff$2167' with positive edge clock.
Creating register for signal `\module106.\reg159' using process `\module106.$proc$rtl.v:1036$914'.
  created $dff cell `$procdff$2168' with positive edge clock.
Creating register for signal `\module106.\reg158' using process `\module106.$proc$rtl.v:1036$914'.
  created $dff cell `$procdff$2169' with positive edge clock.
Creating register for signal `\module106.\reg157' using process `\module106.$proc$rtl.v:1036$914'.
  created $dff cell `$procdff$2170' with positive edge clock.
Creating register for signal `\module106.\reg156' using process `\module106.$proc$rtl.v:1036$914'.
  created $dff cell `$procdff$2171' with positive edge clock.
Creating register for signal `\module106.\reg155' using process `\module106.$proc$rtl.v:1036$914'.
  created $dff cell `$procdff$2172' with positive edge clock.
Creating register for signal `\module106.\reg154' using process `\module106.$proc$rtl.v:1036$914'.
  created $dff cell `$procdff$2173' with positive edge clock.
Creating register for signal `\module106.\reg153' using process `\module106.$proc$rtl.v:1036$914'.
  created $dff cell `$procdff$2174' with positive edge clock.
Creating register for signal `\module106.\reg152' using process `\module106.$proc$rtl.v:1036$914'.
  created $dff cell `$procdff$2175' with positive edge clock.
Creating register for signal `\module106.\reg151' using process `\module106.$proc$rtl.v:978$843'.
  created $dff cell `$procdff$2176' with positive edge clock.
Creating register for signal `\module106.\reg150' using process `\module106.$proc$rtl.v:978$843'.
  created $dff cell `$procdff$2177' with positive edge clock.
Creating register for signal `\module106.\reg149' using process `\module106.$proc$rtl.v:978$843'.
  created $dff cell `$procdff$2178' with positive edge clock.
Creating register for signal `\module106.\reg148' using process `\module106.$proc$rtl.v:978$843'.
  created $dff cell `$procdff$2179' with positive edge clock.
Creating register for signal `\module106.\reg147' using process `\module106.$proc$rtl.v:978$843'.
  created $dff cell `$procdff$2180' with positive edge clock.
Creating register for signal `\module106.\reg146' using process `\module106.$proc$rtl.v:978$843'.
  created $dff cell `$procdff$2181' with positive edge clock.
Creating register for signal `\module106.\reg145' using process `\module106.$proc$rtl.v:978$843'.
  created $dff cell `$procdff$2182' with positive edge clock.
Creating register for signal `\module106.\reg144' using process `\module106.$proc$rtl.v:978$843'.
  created $dff cell `$procdff$2183' with positive edge clock.
Creating register for signal `\module106.\reg141' using process `\module106.$proc$rtl.v:944$818'.
  created $dff cell `$procdff$2184' with positive edge clock.
Creating register for signal `\module106.\reg140' using process `\module106.$proc$rtl.v:944$818'.
  created $dff cell `$procdff$2185' with positive edge clock.
Creating register for signal `\module106.\reg139' using process `\module106.$proc$rtl.v:944$818'.
  created $dff cell `$procdff$2186' with positive edge clock.
Creating register for signal `\module106.\reg138' using process `\module106.$proc$rtl.v:944$818'.
  created $dff cell `$procdff$2187' with positive edge clock.
Creating register for signal `\module106.\reg137' using process `\module106.$proc$rtl.v:944$818'.
  created $dff cell `$procdff$2188' with positive edge clock.
Creating register for signal `\module106.\reg136' using process `\module106.$proc$rtl.v:944$818'.
  created $dff cell `$procdff$2189' with positive edge clock.
Creating register for signal `\module106.\reg135' using process `\module106.$proc$rtl.v:944$818'.
  created $dff cell `$procdff$2190' with positive edge clock.
Creating register for signal `\module106.\reg134' using process `\module106.$proc$rtl.v:944$818'.
  created $dff cell `$procdff$2191' with positive edge clock.
Creating register for signal `\module106.\reg133' using process `\module106.$proc$rtl.v:904$777'.
  created $dff cell `$procdff$2192' with positive edge clock.
Creating register for signal `\module106.\reg132' using process `\module106.$proc$rtl.v:904$777'.
  created $dff cell `$procdff$2193' with positive edge clock.
Creating register for signal `\module106.\reg131' using process `\module106.$proc$rtl.v:904$777'.
  created $dff cell `$procdff$2194' with positive edge clock.
Creating register for signal `\module106.\reg130' using process `\module106.$proc$rtl.v:904$777'.
  created $dff cell `$procdff$2195' with positive edge clock.
Creating register for signal `\module106.\reg129' using process `\module106.$proc$rtl.v:904$777'.
  created $dff cell `$procdff$2196' with positive edge clock.
Creating register for signal `\module106.\reg128' using process `\module106.$proc$rtl.v:904$777'.
  created $dff cell `$procdff$2197' with positive edge clock.
Creating register for signal `\module106.\reg127' using process `\module106.$proc$rtl.v:904$777'.
  created $dff cell `$procdff$2198' with positive edge clock.
Creating register for signal `\module106.\reg126' using process `\module106.$proc$rtl.v:904$777'.
  created $dff cell `$procdff$2199' with positive edge clock.
Creating register for signal `\module106.\reg125' using process `\module106.$proc$rtl.v:904$777'.
  created $dff cell `$procdff$2200' with positive edge clock.
Creating register for signal `\module106.\reg124' using process `\module106.$proc$rtl.v:904$777'.
  created $dff cell `$procdff$2201' with positive edge clock.
Creating register for signal `\module106.\reg123' using process `\module106.$proc$rtl.v:904$777'.
  created $dff cell `$procdff$2202' with positive edge clock.
Creating register for signal `\module106.\reg121' using process `\module106.$proc$rtl.v:851$676'.
  created $dff cell `$procdff$2203' with positive edge clock.
Creating register for signal `\module106.\reg120' using process `\module106.$proc$rtl.v:851$676'.
  created $dff cell `$procdff$2204' with positive edge clock.
Creating register for signal `\module106.\reg119' using process `\module106.$proc$rtl.v:851$676'.
  created $dff cell `$procdff$2205' with positive edge clock.
Creating register for signal `\module106.\reg118' using process `\module106.$proc$rtl.v:851$676'.
  created $dff cell `$procdff$2206' with positive edge clock.
Creating register for signal `\module106.\reg117' using process `\module106.$proc$rtl.v:851$676'.
  created $dff cell `$procdff$2207' with positive edge clock.
Creating register for signal `\module106.\reg116' using process `\module106.$proc$rtl.v:851$676'.
  created $dff cell `$procdff$2208' with positive edge clock.
Creating register for signal `\module106.\reg115' using process `\module106.$proc$rtl.v:851$676'.
  created $dff cell `$procdff$2209' with positive edge clock.
Creating register for signal `\module106.\reg114' using process `\module106.$proc$rtl.v:851$676'.
  created $dff cell `$procdff$2210' with positive edge clock.
Creating register for signal `\module106.\reg113' using process `\module106.$proc$rtl.v:851$676'.
  created $dff cell `$procdff$2211' with positive edge clock.
Creating register for signal `\module106.\reg112' using process `\module106.$proc$rtl.v:851$676'.
  created $dff cell `$procdff$2212' with positive edge clock.
Creating register for signal `\module207.\reg273' using process `\module207.$proc$rtl.v:624$539'.
  created $dff cell `$procdff$2213' with positive edge clock.
Creating register for signal `\module207.\reg274' using process `\module207.$proc$rtl.v:624$539'.
  created $dff cell `$procdff$2214' with positive edge clock.
Creating register for signal `\module207.\reg276' using process `\module207.$proc$rtl.v:624$539'.
  created $dff cell `$procdff$2215' with positive edge clock.
Creating register for signal `\module207.\reg275' using process `\module207.$proc$rtl.v:624$539'.
  created $dff cell `$procdff$2216' with positive edge clock.
Creating register for signal `\module207.\reg272' using process `\module207.$proc$rtl.v:624$539'.
  created $dff cell `$procdff$2217' with positive edge clock.
Creating register for signal `\module207.\reg277' using process `\module207.$proc$rtl.v:624$539'.
  created $dff cell `$procdff$2218' with positive edge clock.
Creating register for signal `\module207.\reg271' using process `\module207.$proc$rtl.v:624$539'.
  created $dff cell `$procdff$2219' with positive edge clock.
Creating register for signal `\module207.\reg270' using process `\module207.$proc$rtl.v:624$539'.
  created $dff cell `$procdff$2220' with positive edge clock.
Creating register for signal `\module207.\reg269' using process `\module207.$proc$rtl.v:624$539'.
  created $dff cell `$procdff$2221' with positive edge clock.
Creating register for signal `\module207.\reg268' using process `\module207.$proc$rtl.v:552$453'.
  created $dff cell `$procdff$2222' with positive edge clock.
Creating register for signal `\module207.\reg267' using process `\module207.$proc$rtl.v:552$453'.
  created $dff cell `$procdff$2223' with positive edge clock.
Creating register for signal `\module207.\reg266' using process `\module207.$proc$rtl.v:552$453'.
  created $dff cell `$procdff$2224' with positive edge clock.
Creating register for signal `\module207.\reg265' using process `\module207.$proc$rtl.v:552$453'.
  created $dff cell `$procdff$2225' with positive edge clock.
Creating register for signal `\module207.\reg264' using process `\module207.$proc$rtl.v:552$453'.
  created $dff cell `$procdff$2226' with positive edge clock.
Creating register for signal `\module207.\reg263' using process `\module207.$proc$rtl.v:552$453'.
  created $dff cell `$procdff$2227' with positive edge clock.
Creating register for signal `\module207.\reg262' using process `\module207.$proc$rtl.v:552$453'.
  created $dff cell `$procdff$2228' with positive edge clock.
Creating register for signal `\module207.\reg261' using process `\module207.$proc$rtl.v:552$453'.
  created $dff cell `$procdff$2229' with positive edge clock.
Creating register for signal `\module207.\reg260' using process `\module207.$proc$rtl.v:552$453'.
  created $dff cell `$procdff$2230' with positive edge clock.
Creating register for signal `\module207.\reg259' using process `\module207.$proc$rtl.v:552$453'.
  created $dff cell `$procdff$2231' with positive edge clock.
Creating register for signal `\module207.\reg258' using process `\module207.$proc$rtl.v:552$453'.
  created $dff cell `$procdff$2232' with positive edge clock.
Creating register for signal `\module207.\reg257' using process `\module207.$proc$rtl.v:552$453'.
  created $dff cell `$procdff$2233' with positive edge clock.
Creating register for signal `\module207.\reg256' using process `\module207.$proc$rtl.v:552$453'.
  created $dff cell `$procdff$2234' with positive edge clock.
Creating register for signal `\module207.\reg255' using process `\module207.$proc$rtl.v:552$453'.
  created $dff cell `$procdff$2235' with positive edge clock.
Creating register for signal `\module207.\reg254' using process `\module207.$proc$rtl.v:552$453'.
  created $dff cell `$procdff$2236' with positive edge clock.
Creating register for signal `\module207.\reg252' using process `\module207.$proc$rtl.v:538$433'.
  created $dff cell `$procdff$2237' with positive edge clock.
Creating register for signal `\module207.\reg251' using process `\module207.$proc$rtl.v:538$433'.
  created $dff cell `$procdff$2238' with positive edge clock.
Creating register for signal `\module207.\reg250' using process `\module207.$proc$rtl.v:538$433'.
  created $dff cell `$procdff$2239' with positive edge clock.
Creating register for signal `\module207.\reg249' using process `\module207.$proc$rtl.v:538$433'.
  created $dff cell `$procdff$2240' with positive edge clock.
Creating register for signal `\module207.\reg248' using process `\module207.$proc$rtl.v:538$433'.
  created $dff cell `$procdff$2241' with positive edge clock.
Creating register for signal `\module207.\reg247' using process `\module207.$proc$rtl.v:494$379'.
  created $dff cell `$procdff$2242' with positive edge clock.
Creating register for signal `\module207.\reg246' using process `\module207.$proc$rtl.v:494$379'.
  created $dff cell `$procdff$2243' with positive edge clock.
Creating register for signal `\module207.\reg245' using process `\module207.$proc$rtl.v:494$379'.
  created $dff cell `$procdff$2244' with positive edge clock.
Creating register for signal `\module207.\reg244' using process `\module207.$proc$rtl.v:494$379'.
  created $dff cell `$procdff$2245' with positive edge clock.
Creating register for signal `\module207.\reg243' using process `\module207.$proc$rtl.v:494$379'.
  created $dff cell `$procdff$2246' with positive edge clock.
Creating register for signal `\module207.\reg242' using process `\module207.$proc$rtl.v:494$379'.
  created $dff cell `$procdff$2247' with positive edge clock.
Creating register for signal `\module207.\reg241' using process `\module207.$proc$rtl.v:494$379'.
  created $dff cell `$procdff$2248' with positive edge clock.
Creating register for signal `\module207.\reg240' using process `\module207.$proc$rtl.v:494$379'.
  created $dff cell `$procdff$2249' with positive edge clock.
Creating register for signal `\module207.\reg239' using process `\module207.$proc$rtl.v:494$379'.
  created $dff cell `$procdff$2250' with positive edge clock.
Creating register for signal `\module207.\reg237' using process `\module207.$proc$rtl.v:413$284'.
  created $dff cell `$procdff$2251' with positive edge clock.
Creating register for signal `\module207.\reg236' using process `\module207.$proc$rtl.v:413$284'.
  created $dff cell `$procdff$2252' with positive edge clock.
Creating register for signal `\module207.\reg235' using process `\module207.$proc$rtl.v:413$284'.
  created $dff cell `$procdff$2253' with positive edge clock.
Creating register for signal `\module207.\reg234' using process `\module207.$proc$rtl.v:413$284'.
  created $dff cell `$procdff$2254' with positive edge clock.
Creating register for signal `\module207.\reg233' using process `\module207.$proc$rtl.v:413$284'.
  created $dff cell `$procdff$2255' with positive edge clock.
Creating register for signal `\module207.\reg232' using process `\module207.$proc$rtl.v:413$284'.
  created $dff cell `$procdff$2256' with positive edge clock.
Creating register for signal `\module207.\reg231' using process `\module207.$proc$rtl.v:413$284'.
  created $dff cell `$procdff$2257' with positive edge clock.
Creating register for signal `\module207.\reg226' using process `\module207.$proc$rtl.v:413$284'.
  created $dff cell `$procdff$2258' with positive edge clock.
Creating register for signal `\module207.\reg224' using process `\module207.$proc$rtl.v:402$275'.
  created $dff cell `$procdff$2259' with positive edge clock.
Creating register for signal `\module207.\reg223' using process `\module207.$proc$rtl.v:402$275'.
  created $dff cell `$procdff$2260' with positive edge clock.
Creating register for signal `\module207.\reg222' using process `\module207.$proc$rtl.v:402$275'.
  created $dff cell `$procdff$2261' with positive edge clock.
Creating register for signal `\module207.\reg221' using process `\module207.$proc$rtl.v:402$275'.
  created $dff cell `$procdff$2262' with positive edge clock.
Creating register for signal `\module207.\reg220' using process `\module207.$proc$rtl.v:402$275'.
  created $dff cell `$procdff$2263' with positive edge clock.
Creating register for signal `\module13.\reg199' using process `\module13.$proc$rtl.v:214$190'.
  created $dff cell `$procdff$2264' with positive edge clock.
Creating register for signal `\module13.\reg198' using process `\module13.$proc$rtl.v:214$190'.
  created $dff cell `$procdff$2265' with positive edge clock.
Creating register for signal `\module13.\reg197' using process `\module13.$proc$rtl.v:214$190'.
  created $dff cell `$procdff$2266' with positive edge clock.
Creating register for signal `\module13.\reg196' using process `\module13.$proc$rtl.v:214$190'.
  created $dff cell `$procdff$2267' with positive edge clock.
Creating register for signal `\module13.\reg27' using process `\module13.$proc$rtl.v:128$57'.
  created $dff cell `$procdff$2268' with positive edge clock.
Creating register for signal `\module13.\reg26' using process `\module13.$proc$rtl.v:128$57'.
  created $dff cell `$procdff$2269' with positive edge clock.
Creating register for signal `\module13.\reg25' using process `\module13.$proc$rtl.v:128$57'.
  created $dff cell `$procdff$2270' with positive edge clock.
Creating register for signal `\module13.\reg24' using process `\module13.$proc$rtl.v:128$57'.
  created $dff cell `$procdff$2271' with positive edge clock.
Creating register for signal `\module13.\reg23' using process `\module13.$proc$rtl.v:128$57'.
  created $dff cell `$procdff$2272' with positive edge clock.
Creating register for signal `\module13.\reg22' using process `\module13.$proc$rtl.v:128$57'.
  created $dff cell `$procdff$2273' with positive edge clock.
Creating register for signal `\module13.\reg21' using process `\module13.$proc$rtl.v:128$57'.
  created $dff cell `$procdff$2274' with positive edge clock.
Creating register for signal `\module13.\reg19' using process `\module13.$proc$rtl.v:128$57'.
  created $dff cell `$procdff$2275' with positive edge clock.
Creating register for signal `\module13.\reg18' using process `\module13.$proc$rtl.v:128$57'.
  created $dff cell `$procdff$2276' with positive edge clock.

2.2.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `module30.$proc$rtl.v:1395$1555'.
Removing empty process `module30.$proc$rtl.v:1394$1554'.
Removing empty process `module30.$proc$rtl.v:1393$1553'.
Removing empty process `module30.$proc$rtl.v:1392$1552'.
Removing empty process `module30.$proc$rtl.v:1391$1551'.
Removing empty process `module30.$proc$rtl.v:1390$1550'.
Removing empty process `module30.$proc$rtl.v:1389$1549'.
Removing empty process `module30.$proc$rtl.v:1388$1548'.
Removing empty process `module30.$proc$rtl.v:1387$1547'.
Removing empty process `module30.$proc$rtl.v:1381$1546'.
Removing empty process `module30.$proc$rtl.v:1380$1545'.
Removing empty process `module30.$proc$rtl.v:1379$1544'.
Removing empty process `module30.$proc$rtl.v:1378$1543'.
Removing empty process `module30.$proc$rtl.v:1377$1542'.
Removing empty process `module30.$proc$rtl.v:1376$1541'.
Removing empty process `module30.$proc$rtl.v:1375$1540'.
Removing empty process `module30.$proc$rtl.v:1528$1536'.
Removing empty process `module30.$proc$rtl.v:1517$1517'.
Found and cleaned up 3 empty switches in `\module30.$proc$rtl.v:1453$1426'.
Removing empty process `module30.$proc$rtl.v:1453$1426'.
Removing empty process `module73.$proc$rtl.v:1243$1409'.
Removing empty process `module73.$proc$rtl.v:1242$1408'.
Removing empty process `module73.$proc$rtl.v:1241$1407'.
Removing empty process `module73.$proc$rtl.v:1240$1406'.
Removing empty process `module73.$proc$rtl.v:1239$1405'.
Removing empty process `module73.$proc$rtl.v:1238$1404'.
Removing empty process `module73.$proc$rtl.v:1237$1403'.
Removing empty process `module73.$proc$rtl.v:1236$1402'.
Removing empty process `module73.$proc$rtl.v:1235$1401'.
Removing empty process `module73.$proc$rtl.v:1234$1400'.
Removing empty process `module73.$proc$rtl.v:1228$1399'.
Removing empty process `module73.$proc$rtl.v:1227$1398'.
Removing empty process `module73.$proc$rtl.v:1226$1397'.
Removing empty process `module73.$proc$rtl.v:1225$1396'.
Removing empty process `module73.$proc$rtl.v:1224$1395'.
Removing empty process `module73.$proc$rtl.v:1341$1346'.
Found and cleaned up 3 empty switches in `\module73.$proc$rtl.v:1271$1253'.
Removing empty process `module73.$proc$rtl.v:1271$1253'.
Removing empty process `module106.$proc$rtl.v:768$1252'.
Removing empty process `module106.$proc$rtl.v:767$1251'.
Removing empty process `module106.$proc$rtl.v:766$1250'.
Removing empty process `module106.$proc$rtl.v:765$1249'.
Removing empty process `module106.$proc$rtl.v:764$1248'.
Removing empty process `module106.$proc$rtl.v:763$1247'.
Removing empty process `module106.$proc$rtl.v:762$1246'.
Removing empty process `module106.$proc$rtl.v:761$1245'.
Removing empty process `module106.$proc$rtl.v:760$1244'.
Removing empty process `module106.$proc$rtl.v:759$1243'.
Removing empty process `module106.$proc$rtl.v:757$1242'.
Removing empty process `module106.$proc$rtl.v:756$1241'.
Removing empty process `module106.$proc$rtl.v:755$1240'.
Removing empty process `module106.$proc$rtl.v:754$1239'.
Removing empty process `module106.$proc$rtl.v:753$1238'.
Removing empty process `module106.$proc$rtl.v:752$1237'.
Removing empty process `module106.$proc$rtl.v:751$1236'.
Removing empty process `module106.$proc$rtl.v:750$1235'.
Removing empty process `module106.$proc$rtl.v:749$1234'.
Removing empty process `module106.$proc$rtl.v:748$1233'.
Removing empty process `module106.$proc$rtl.v:747$1232'.
Removing empty process `module106.$proc$rtl.v:746$1231'.
Removing empty process `module106.$proc$rtl.v:745$1230'.
Removing empty process `module106.$proc$rtl.v:744$1229'.
Removing empty process `module106.$proc$rtl.v:743$1228'.
Removing empty process `module106.$proc$rtl.v:742$1227'.
Removing empty process `module106.$proc$rtl.v:741$1226'.
Removing empty process `module106.$proc$rtl.v:740$1225'.
Removing empty process `module106.$proc$rtl.v:739$1224'.
Removing empty process `module106.$proc$rtl.v:736$1223'.
Removing empty process `module106.$proc$rtl.v:735$1222'.
Removing empty process `module106.$proc$rtl.v:734$1221'.
Removing empty process `module106.$proc$rtl.v:733$1220'.
Removing empty process `module106.$proc$rtl.v:732$1219'.
Removing empty process `module106.$proc$rtl.v:731$1218'.
Removing empty process `module106.$proc$rtl.v:730$1217'.
Removing empty process `module106.$proc$rtl.v:729$1216'.
Removing empty process `module106.$proc$rtl.v:728$1215'.
Removing empty process `module106.$proc$rtl.v:727$1214'.
Removing empty process `module106.$proc$rtl.v:726$1213'.
Removing empty process `module106.$proc$rtl.v:725$1212'.
Removing empty process `module106.$proc$rtl.v:724$1211'.
Removing empty process `module106.$proc$rtl.v:723$1210'.
Removing empty process `module106.$proc$rtl.v:722$1209'.
Removing empty process `module106.$proc$rtl.v:721$1208'.
Removing empty process `module106.$proc$rtl.v:720$1207'.
Removing empty process `module106.$proc$rtl.v:719$1206'.
Removing empty process `module106.$proc$rtl.v:718$1205'.
Removing empty process `module106.$proc$rtl.v:717$1204'.
Removing empty process `module106.$proc$rtl.v:716$1203'.
Removing empty process `module106.$proc$rtl.v:715$1202'.
Removing empty process `module106.$proc$rtl.v:714$1201'.
Removing empty process `module106.$proc$rtl.v:713$1200'.
Removing empty process `module106.$proc$rtl.v:712$1199'.
Removing empty process `module106.$proc$rtl.v:711$1198'.
Removing empty process `module106.$proc$rtl.v:710$1197'.
Removing empty process `module106.$proc$rtl.v:709$1196'.
Removing empty process `module106.$proc$rtl.v:708$1195'.
Removing empty process `module106.$proc$rtl.v:707$1194'.
Removing empty process `module106.$proc$rtl.v:706$1193'.
Removing empty process `module106.$proc$rtl.v:705$1192'.
Removing empty process `module106.$proc$rtl.v:704$1191'.
Removing empty process `module106.$proc$rtl.v:702$1190'.
Removing empty process `module106.$proc$rtl.v:701$1189'.
Removing empty process `module106.$proc$rtl.v:697$1188'.
Removing empty process `module106.$proc$rtl.v:696$1187'.
Removing empty process `module106.$proc$rtl.v:695$1186'.
Removing empty process `module106.$proc$rtl.v:694$1185'.
Removing empty process `module106.$proc$rtl.v:693$1184'.
Found and cleaned up 1 empty switch in `\module106.$proc$rtl.v:1180$1150'.
Removing empty process `module106.$proc$rtl.v:1180$1150'.
Removing empty process `module106.$proc$rtl.v:1167$1127'.
Found and cleaned up 2 empty switches in `\module106.$proc$rtl.v:1110$1026'.
Removing empty process `module106.$proc$rtl.v:1110$1026'.
Found and cleaned up 3 empty switches in `\module106.$proc$rtl.v:1036$914'.
Removing empty process `module106.$proc$rtl.v:1036$914'.
Found and cleaned up 3 empty switches in `\module106.$proc$rtl.v:978$843'.
Removing empty process `module106.$proc$rtl.v:978$843'.
Found and cleaned up 2 empty switches in `\module106.$proc$rtl.v:944$818'.
Removing empty process `module106.$proc$rtl.v:944$818'.
Found and cleaned up 2 empty switches in `\module106.$proc$rtl.v:904$777'.
Removing empty process `module106.$proc$rtl.v:904$777'.
Found and cleaned up 2 empty switches in `\module106.$proc$rtl.v:851$676'.
Removing empty process `module106.$proc$rtl.v:851$676'.
Removing empty process `module207.$proc$rtl.v:311$675'.
Removing empty process `module207.$proc$rtl.v:310$674'.
Removing empty process `module207.$proc$rtl.v:309$673'.
Removing empty process `module207.$proc$rtl.v:308$672'.
Removing empty process `module207.$proc$rtl.v:307$671'.
Removing empty process `module207.$proc$rtl.v:305$670'.
Removing empty process `module207.$proc$rtl.v:304$669'.
Removing empty process `module207.$proc$rtl.v:303$668'.
Removing empty process `module207.$proc$rtl.v:302$667'.
Removing empty process `module207.$proc$rtl.v:301$666'.
Removing empty process `module207.$proc$rtl.v:300$665'.
Removing empty process `module207.$proc$rtl.v:299$664'.
Removing empty process `module207.$proc$rtl.v:298$663'.
Removing empty process `module207.$proc$rtl.v:297$662'.
Removing empty process `module207.$proc$rtl.v:296$661'.
Removing empty process `module207.$proc$rtl.v:295$660'.
Removing empty process `module207.$proc$rtl.v:294$659'.
Removing empty process `module207.$proc$rtl.v:292$658'.
Removing empty process `module207.$proc$rtl.v:291$657'.
Removing empty process `module207.$proc$rtl.v:290$656'.
Removing empty process `module207.$proc$rtl.v:289$655'.
Removing empty process `module207.$proc$rtl.v:288$654'.
Removing empty process `module207.$proc$rtl.v:287$653'.
Removing empty process `module207.$proc$rtl.v:286$652'.
Removing empty process `module207.$proc$rtl.v:285$651'.
Removing empty process `module207.$proc$rtl.v:284$650'.
Removing empty process `module207.$proc$rtl.v:283$649'.
Removing empty process `module207.$proc$rtl.v:282$648'.
Removing empty process `module207.$proc$rtl.v:281$647'.
Removing empty process `module207.$proc$rtl.v:280$646'.
Removing empty process `module207.$proc$rtl.v:279$645'.
Removing empty process `module207.$proc$rtl.v:277$644'.
Removing empty process `module207.$proc$rtl.v:276$643'.
Removing empty process `module207.$proc$rtl.v:275$642'.
Removing empty process `module207.$proc$rtl.v:274$641'.
Removing empty process `module207.$proc$rtl.v:273$640'.
Removing empty process `module207.$proc$rtl.v:272$639'.
Removing empty process `module207.$proc$rtl.v:271$638'.
Removing empty process `module207.$proc$rtl.v:270$637'.
Removing empty process `module207.$proc$rtl.v:269$636'.
Removing empty process `module207.$proc$rtl.v:268$635'.
Removing empty process `module207.$proc$rtl.v:267$634'.
Removing empty process `module207.$proc$rtl.v:266$633'.
Removing empty process `module207.$proc$rtl.v:265$632'.
Removing empty process `module207.$proc$rtl.v:264$631'.
Removing empty process `module207.$proc$rtl.v:263$630'.
Removing empty process `module207.$proc$rtl.v:262$629'.
Removing empty process `module207.$proc$rtl.v:261$628'.
Removing empty process `module207.$proc$rtl.v:260$627'.
Removing empty process `module207.$proc$rtl.v:259$626'.
Removing empty process `module207.$proc$rtl.v:258$625'.
Removing empty process `module207.$proc$rtl.v:257$624'.
Removing empty process `module207.$proc$rtl.v:256$623'.
Removing empty process `module207.$proc$rtl.v:255$622'.
Removing empty process `module207.$proc$rtl.v:254$621'.
Found and cleaned up 2 empty switches in `\module207.$proc$rtl.v:624$539'.
Removing empty process `module207.$proc$rtl.v:624$539'.
Found and cleaned up 4 empty switches in `\module207.$proc$rtl.v:552$453'.
Removing empty process `module207.$proc$rtl.v:552$453'.
Removing empty process `module207.$proc$rtl.v:538$433'.
Found and cleaned up 2 empty switches in `\module207.$proc$rtl.v:494$379'.
Removing empty process `module207.$proc$rtl.v:494$379'.
Found and cleaned up 2 empty switches in `\module207.$proc$rtl.v:413$284'.
Removing empty process `module207.$proc$rtl.v:413$284'.
Removing empty process `module207.$proc$rtl.v:402$275'.
Removing empty process `module13.$proc$rtl.v:93$248'.
Removing empty process `module13.$proc$rtl.v:92$247'.
Removing empty process `module13.$proc$rtl.v:91$246'.
Removing empty process `module13.$proc$rtl.v:90$245'.
Removing empty process `module13.$proc$rtl.v:89$244'.
Removing empty process `module13.$proc$rtl.v:88$243'.
Removing empty process `module13.$proc$rtl.v:87$242'.
Removing empty process `module13.$proc$rtl.v:86$241'.
Removing empty process `module13.$proc$rtl.v:85$240'.
Removing empty process `module13.$proc$rtl.v:84$239'.
Removing empty process `module13.$proc$rtl.v:80$238'.
Removing empty process `module13.$proc$rtl.v:79$237'.
Removing empty process `module13.$proc$rtl.v:78$236'.
Removing empty process `module13.$proc$rtl.v:77$235'.
Removing empty process `module13.$proc$rtl.v:214$190'.
Found and cleaned up 3 empty switches in `\module13.$proc$rtl.v:128$57'.
Removing empty process `module13.$proc$rtl.v:128$57'.
Cleaned up 34 empty switches.

2.3. Executing OPT_EXPR pass (perform const folding).
Optimizing module module30.
<suppressed ~21 debug messages>
Optimizing module module73.
<suppressed ~11 debug messages>
Optimizing module module106.
<suppressed ~50 debug messages>
Optimizing module module207.
<suppressed ~95 debug messages>
Optimizing module module13.
<suppressed ~43 debug messages>
Optimizing module top.
<suppressed ~5 debug messages>

2.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module30..
Finding unused cells or wires in module \module73..
Finding unused cells or wires in module \module106..
Finding unused cells or wires in module \module207..
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \top..
Removed 129 unused cells and 994 unused wires.
<suppressed ~283 debug messages>

2.5. Executing CHECK pass (checking for obvious problems).
checking module module106..
checking module module13..
checking module module207..
checking module module30..
checking module module73..
checking module top..
found and reported 0 problems.

2.6. Executing OPT pass (performing simple optimizations).

2.6.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module module106.
Optimizing module module13.
Optimizing module module207.
<suppressed ~3 debug messages>
Optimizing module module30.
Optimizing module module73.
Optimizing module top.
<suppressed ~1 debug messages>

2.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module106'.
<suppressed ~66 debug messages>
Finding identical cells in module `\module13'.
<suppressed ~9 debug messages>
Finding identical cells in module `\module207'.
<suppressed ~18 debug messages>
Finding identical cells in module `\module30'.
Finding identical cells in module `\module73'.
<suppressed ~18 debug messages>
Finding identical cells in module `\top'.
<suppressed ~3 debug messages>
Removed a total of 38 cells.

2.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module106..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module13..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module207..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $ternary$rtl.v:530$422: { \reg239 [0] \reg237 } -> { \reg239 [0] \reg237 [14:5] 1'1 \reg237 [3:0] }
  Analyzing evaluation results.
    dead port 1/2 on $mux $ternary$rtl.v:583$485.
Running muxtree optimizer on module \module30..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module73..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 1 multiplexer ports.
<suppressed ~239 debug messages>

2.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module106.
    New input vector for $reduce_or cell $reduce_or$rtl.v:936$810: { $sub$rtl.v:936$809_Y [0] $sub$rtl.v:936$809_Y [1] $sub$rtl.v:936$809_Y [2] $sub$rtl.v:936$809_Y [3] $sub$rtl.v:936$809_Y [4] $sub$rtl.v:936$809_Y [5] $sub$rtl.v:936$809_Y [6] $sub$rtl.v:936$809_Y [7] $sub$rtl.v:936$809_Y [8] $sub$rtl.v:936$809_Y [9] $sub$rtl.v:936$809_Y [10] $sub$rtl.v:936$809_Y [11] $sub$rtl.v:936$809_Y [12] $sub$rtl.v:936$809_Y [13] $sub$rtl.v:936$809_Y [14] $sub$rtl.v:936$809_Y [15] $sub$rtl.v:936$809_Y [16] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:918$798: { $xor$rtl.v:918$797_Y [0] $xor$rtl.v:918$797_Y [1] $xor$rtl.v:918$797_Y [2] $xor$rtl.v:918$797_Y [3] $xor$rtl.v:918$797_Y [4] $xor$rtl.v:918$797_Y [5] $xor$rtl.v:918$797_Y [6] $xor$rtl.v:918$797_Y [7] $xor$rtl.v:918$797_Y [8] $xor$rtl.v:918$797_Y [9] $xor$rtl.v:918$797_Y [10] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:882$734: { \reg115 [0] \reg115 [1] \reg115 [2] \reg115 [3] \reg115 [4] \reg115 [5] \reg115 [6] \reg115 [7] \reg115 [8] \reg115 [9] \reg115 [10] \reg115 [11] \reg115 [12] \reg115 [13] \reg115 [14] \reg115 [15] \reg115 [16] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:878$718: { \reg113 [0] \reg113 [1] \reg113 [2] \reg113 [3] \reg113 [4] \reg113 [5] \reg113 [6] \reg113 [7] \reg113 [8] \reg113 [9] \reg113 [10] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:871$713: { \reg112 [0] \reg112 [1] \reg112 [2] \reg112 [3] \reg112 [4] \reg112 [5] \reg112 [6] \reg112 [7] \reg112 [8] \reg112 [9] \reg112 [10] \reg112 [11] \reg112 [12] \reg112 [13] \reg112 [14] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:857$687: { $ternary$rtl.v:857$686_Y [0] $ternary$rtl.v:857$686_Y [1] $ternary$rtl.v:857$686_Y [2] $ternary$rtl.v:857$686_Y [3] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1178$1141: { \reg176 [0] \reg176 [1] \reg176 [2] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1131$1066: { $ternary$rtl.v:1131$1065_Y [0] $ternary$rtl.v:1131$1065_Y [1] $ternary$rtl.v:1131$1065_Y [2] $ternary$rtl.v:1131$1065_Y [3] $ternary$rtl.v:1131$1065_Y [4] $ternary$rtl.v:1131$1065_Y [5] $ternary$rtl.v:1131$1065_Y [6] $ternary$rtl.v:1131$1065_Y [7] $ternary$rtl.v:1131$1065_Y [8] $ternary$rtl.v:1131$1065_Y [9] $ternary$rtl.v:1131$1065_Y [10] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1103$1009: { \reg159 [0] \reg159 [1] \reg159 [2] \reg159 [3] \reg159 [4] \reg159 [5] \reg159 [6] \reg159 [7] \reg159 [8] \reg159 [9] \reg159 [10] \reg159 [11] \reg159 [12] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1087$991: { \reg157 [0] \reg157 [1] \reg157 [2] \reg157 [3] \reg157 [4] \reg157 [5] \reg157 [6] \reg157 [7] \reg157 [8] \reg157 [9] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1010$885: { \reg129 [0] \reg129 [1] \reg129 [2] \reg129 [3] \reg129 [4] \reg129 [5] \reg129 [6] \reg129 [7] \reg129 [8] \reg129 [9] \reg129 [10] \reg129 [11] \reg129 [12] \reg129 [13] \reg129 [14] \reg129 [15] \reg129 [16] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:941$816: { \reg121 [0] \reg121 [1] \reg121 [2] \reg121 [3] \reg121 [4] \reg121 [5] \reg121 [6] \reg121 [7] \reg121 [8] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:933$806: { \reg114 [8] \reg114 [9] \reg114 [10] \reg114 [11] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:906$778: { \reg118 [0] \reg118 [1] \reg118 [2] \reg118 [3] \reg118 [4] \reg118 [5] \reg118 [6] \reg118 [7] \reg118 [8] \reg118 [9] \reg118 [10] \reg118 [11] \reg118 [12] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1185$1152: { \reg150 [0] \reg150 [1] \reg150 [2] \reg150 [3] \reg150 [4] \reg150 [5] \reg150 [6] \reg150 [7] \reg150 [8] \reg150 [9] \reg150 [10] \reg150 [11] \reg150 [12] \reg150 [13] \reg150 [14] \reg150 [15] \reg150 [16] \reg150 [17] \reg150 [18] \reg150 [19] \reg150 [20] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1164$1124: { $ternary$rtl.v:1164$1123_Y [0] $ternary$rtl.v:1164$1123_Y [1] $ternary$rtl.v:1164$1123_Y [2] $ternary$rtl.v:1164$1123_Y [3] $ternary$rtl.v:1164$1123_Y [4] $ternary$rtl.v:1164$1123_Y [5] $ternary$rtl.v:1164$1123_Y [6] $ternary$rtl.v:1164$1123_Y [7] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1081$975: { \reg121 [1] \reg121 [2] \reg121 [3] \reg121 [4] \reg121 [5] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1060$949: { $sshl$rtl.v:1060$948_Y [0] $sshl$rtl.v:1060$948_Y [1] $sshl$rtl.v:1060$948_Y [2] $sshl$rtl.v:1060$948_Y [3] $sshl$rtl.v:1060$948_Y [4] $sshl$rtl.v:1060$948_Y [5] $sshl$rtl.v:1060$948_Y [6] $sshl$rtl.v:1060$948_Y [7] $sshl$rtl.v:1060$948_Y [8] $sshl$rtl.v:1060$948_Y [9] $sshl$rtl.v:1060$948_Y [10] $sshl$rtl.v:1060$948_Y [11] $sshl$rtl.v:1060$948_Y [12] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1016$899: { \reg127 [7] \reg127 [8] \reg127 [9] \reg127 [10] \reg127 [11] \reg127 [12] }
  Optimizing cells in module \module106.
  Optimizing cells in module \module13.
    New input vector for $reduce_or cell $reduce_or$rtl.v:204$177: { \reg21 [0] \reg21 [1] \reg21 [2] \reg21 [3] \reg21 [4] \reg21 [5] \reg21 [6] \reg21 [7] \reg21 [8] \reg21 [9] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:202$174: { $ternary$rtl.v:202$173_Y [0] $ternary$rtl.v:202$173_Y [1] $ternary$rtl.v:202$173_Y [2] $ternary$rtl.v:202$173_Y [3] $ternary$rtl.v:202$173_Y [4] $ternary$rtl.v:202$173_Y [5] $ternary$rtl.v:202$173_Y [6] $ternary$rtl.v:202$173_Y [7] $ternary$rtl.v:202$173_Y [8] $ternary$rtl.v:202$173_Y [9] $ternary$rtl.v:202$173_Y [10] $ternary$rtl.v:202$173_Y [11] $ternary$rtl.v:202$173_Y [12] $ternary$rtl.v:202$173_Y [13] $ternary$rtl.v:202$173_Y [14] $ternary$rtl.v:202$173_Y [15] $ternary$rtl.v:202$173_Y [16] $ternary$rtl.v:202$173_Y [17] $ternary$rtl.v:202$173_Y [18] $ternary$rtl.v:202$173_Y [19] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:130$58: { \wire16 [0] \wire16 [1] \wire16 [2] \wire16 [3] \wire16 [4] \wire16 [5] \wire16 [6] \wire16 [7] \wire16 [8] \wire16 [9] \wire16 [10] \wire16 [11] \wire16 [12] \wire16 [13] \wire16 [14] \wire16 [15] \wire16 [16] \wire16 [17] \wire16 [18] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:222$196: { \reg21 [0] \reg21 [1] \reg21 [2] \reg21 [3] \reg21 [4] \reg21 [5] \reg21 [6] \reg21 [7] \reg21 [8] \reg21 [9] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:194$162: { \reg22 [0] \reg22 [1] \reg22 [2] \reg22 [3] \reg22 [4] \reg22 [5] \reg22 [6] \reg22 [7] \reg22 [8] \reg22 [9] \reg22 [10] \reg22 [11] \reg22 [12] \reg22 [13] \reg22 [14] \reg22 [15] \reg22 [16] \reg22 [17] \reg22 [18] \reg22 [19] \reg22 [20] \reg22 [21] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:188$143: { \reg23 [0] \reg23 [1] \reg23 [2] \reg23 [3] \reg23 [4] \reg23 [5] \reg23 [6] \reg23 [7] \reg23 [8] \reg23 [9] \reg23 [10] \reg23 [11] \reg23 [12] \reg23 [13] \reg23 [14] \reg23 [15] \reg23 [16] \reg23 [17] \reg23 [18] \reg23 [19] \reg23 [20] \reg23 [21] }
  Optimizing cells in module \module13.
  Optimizing cells in module \module207.
    New input vector for $reduce_or cell $reduce_or$rtl.v:665$610: { \reg245 [0] \reg245 [1] \reg245 [2] \reg245 [3] \reg245 [4] \reg245 [5] \reg245 [6] \reg245 [7] \reg245 [8] \reg245 [9] \reg245 [10] \reg245 [11] \reg245 [12] \reg245 [13] \reg245 [14] \reg245 [15] \reg245 [16] \reg245 [17] \reg245 [18] \reg245 [19] \reg245 [20] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:620$537: { \wire208 [0] \wire208 [1] \wire208 [2] \wire208 [3] \wire208 [4] \wire208 [5] \wire208 [6] \wire208 [7] \wire208 [8] \wire208 [9] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:599$523: { $ternary$rtl.v:599$522_Y [0] $ternary$rtl.v:599$522_Y [1] $ternary$rtl.v:599$522_Y [2] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:516$412: { \reg240 [0] \reg240 [1] \reg240 [2] \reg240 [3] \reg240 [4] \reg240 [5] \reg240 [6] \reg240 [7] \reg240 [8] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:496$380: { \reg222 [7] \reg222 [8] \reg222 [9] \reg222 [10] \reg222 [11] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:463$343: { \wire212 [0] \wire212 [1] \wire212 [2] \wire212 [3] \wire212 [4] \wire212 [5] \wire212 [6] \wire212 [7] \wire212 [8] \wire212 [9] \wire212 [10] \wire212 [11] \wire212 [12] \wire212 [13] \wire212 [14] \wire212 [15] \wire212 [16] \wire212 [17] \wire212 [18] \wire212 [19] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:448$295: { \wire208 [0] \wire208 [1] \wire208 [2] \wire208 [3] \wire208 [4] \wire208 [5] \wire208 [6] \wire208 [7] \wire208 [8] \wire208 [9] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:648$585: { \reg250 [0] \reg250 [1] \reg250 [2] \reg250 [3] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:627$550: { \reg259 [0] \reg259 [1] \reg259 [2] \reg259 [3] \reg259 [4] \reg259 [5] \reg259 [6] \reg259 [7] \reg259 [8] \reg259 [9] \reg259 [10] \reg259 [11] \reg259 [12] \reg259 [13] \reg259 [14] \reg259 [15] \reg259 [16] \reg259 [17] \reg259 [18] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:599$519: { \reg222 [0] \reg222 [1] \reg222 [2] \reg222 [3] \reg222 [4] \reg222 [5] \reg222 [6] \reg222 [7] \reg222 [8] \reg222 [9] \reg222 [10] \reg222 [11] \reg222 [12] \reg222 [13] \reg222 [14] \reg222 [15] \reg222 [16] \reg222 [17] \reg222 [18] \reg222 [19] \reg222 [20] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:546$442: { \reg224 [0] \reg224 [1] \reg224 [2] \reg224 [3] \reg224 [4] \reg224 [5] \reg224 [6] \reg224 [7] \reg224 [8] \reg224 [9] \reg224 [10] \reg224 [11] \reg224 [12] \reg224 [13] \reg224 [14] \reg224 [15] \reg224 [16] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:485$369: { $not$rtl.v:485$368_Y [0] $not$rtl.v:485$368_Y [1] $not$rtl.v:485$368_Y [2] $not$rtl.v:485$368_Y [3] $not$rtl.v:485$368_Y [4] $not$rtl.v:485$368_Y [5] $not$rtl.v:485$368_Y [6] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:464$348: { $ternary$rtl.v:464$347_Y [0] $ternary$rtl.v:464$347_Y [1] $ternary$rtl.v:464$347_Y [2] $ternary$rtl.v:464$347_Y [3] $ternary$rtl.v:464$347_Y [4] $ternary$rtl.v:464$347_Y [5] $ternary$rtl.v:464$347_Y [6] $ternary$rtl.v:464$347_Y [7] $ternary$rtl.v:464$347_Y [8] $ternary$rtl.v:464$347_Y [9] $ternary$rtl.v:464$347_Y [10] $ternary$rtl.v:464$347_Y [11] $ternary$rtl.v:464$347_Y [12] $ternary$rtl.v:464$347_Y [13] $ternary$rtl.v:464$347_Y [14] $ternary$rtl.v:464$347_Y [15] $ternary$rtl.v:464$347_Y [16] $ternary$rtl.v:464$347_Y [17] $ternary$rtl.v:464$347_Y [18] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:459$327: { \wire212 [0] \wire212 [1] \wire212 [2] \wire212 [3] \wire212 [4] \wire212 [5] \wire212 [6] \wire212 [7] \wire212 [8] \wire212 [9] \wire212 [10] \wire212 [11] \wire212 [12] \wire212 [13] \wire212 [14] \wire212 [15] \wire212 [16] \wire212 [17] \wire212 [18] \wire212 [19] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:456$319: { $neg$rtl.v:456$318_Y [0] $neg$rtl.v:456$318_Y [1] $neg$rtl.v:456$318_Y [2] $neg$rtl.v:456$318_Y [3] $neg$rtl.v:456$318_Y [4] $neg$rtl.v:456$318_Y [5] $neg$rtl.v:456$318_Y [6] $neg$rtl.v:456$318_Y [7] $neg$rtl.v:456$318_Y [8] $neg$rtl.v:456$318_Y [9] $neg$rtl.v:456$318_Y [10] $neg$rtl.v:456$318_Y [11] $neg$rtl.v:456$318_Y [12] $neg$rtl.v:456$318_Y [13] $neg$rtl.v:456$318_Y [14] $neg$rtl.v:456$318_Y [15] $neg$rtl.v:456$318_Y [16] $neg$rtl.v:456$318_Y [17] $neg$rtl.v:456$318_Y [18] $neg$rtl.v:456$318_Y [19] $neg$rtl.v:456$318_Y [20] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:404$276: { \wire208 [0] \wire208 [1] \wire208 [2] \wire208 [3] \wire208 [4] \wire208 [5] \wire208 [6] \wire208 [7] \wire208 [8] \wire208 [9] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:393$260: { \wire211 [1] \wire211 [2] \wire211 [3] \wire211 [4] \wire211 [5] }
  Optimizing cells in module \module207.
  Optimizing cells in module \module30.
    New input vector for $reduce_or cell $reduce_or$rtl.v:1498$1490: { \wire33 [0] \wire33 [1] \wire33 [2] \wire33 [3] \wire33 [4] \wire33 [5] \wire33 [6] \wire33 [7] \wire33 [8] \wire33 [9] \wire33 [10] \wire33 [11] \wire33 [12] \wire33 [13] \wire33 [14] \wire33 [15] \wire33 [16] \wire33 [17] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1466$1457: { \reg47 [0] \reg47 [1] \reg47 [2] \reg47 [3] \reg47 [4] \reg47 [5] \reg47 [6] \reg47 [7] \reg47 [8] \reg47 [9] \reg47 [10] \reg47 [11] \reg47 [12] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1472$1463: { \wire35 [0] \wire35 [1] \wire35 [2] \wire35 [3] \wire35 [4] \wire35 [5] \wire35 [6] \wire35 [7] \wire35 [8] \wire35 [9] \wire35 [10] \wire35 [11] \wire35 [12] \wire35 [13] \wire35 [14] \wire35 [15] \wire35 [16] \wire35 [17] \wire35 [18] \wire35 [19] \wire35 [20] \wire35 [21] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1461$1441: { $neg$rtl.v:1461$1440_Y [0] $neg$rtl.v:1461$1440_Y [1] $neg$rtl.v:1461$1440_Y [2] $neg$rtl.v:1461$1440_Y [3] $neg$rtl.v:1461$1440_Y [4] $neg$rtl.v:1461$1440_Y [5] $neg$rtl.v:1461$1440_Y [6] $neg$rtl.v:1461$1440_Y [7] $neg$rtl.v:1461$1440_Y [8] $neg$rtl.v:1461$1440_Y [9] $neg$rtl.v:1461$1440_Y [10] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1457$1428: { \wire32 [0] \wire32 [1] }
  Optimizing cells in module \module30.
  Optimizing cells in module \module73.
    New input vector for $reduce_or cell $reduce_or$rtl.v:1359$1391: { \wire75 [0] \wire75 [1] \wire75 [2] \wire75 [3] \wire75 [4] \wire75 [5] \wire75 [6] \wire75 [7] \wire75 [8] \wire75 [9] \wire75 [10] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1322$1316: { \reg84 [0] \reg84 [1] $not$rtl.v:1322$1315_Y [0] $not$rtl.v:1322$1315_Y [1] $not$rtl.v:1322$1315_Y [2] $not$rtl.v:1322$1315_Y [3] $not$rtl.v:1322$1315_Y [4] $not$rtl.v:1322$1315_Y [5] $not$rtl.v:1322$1315_Y [6] $not$rtl.v:1322$1315_Y [7] $not$rtl.v:1322$1315_Y [8] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1281$1264: { \wire75 [0] \wire75 [1] \wire75 [2] \wire75 [3] \wire75 [4] \wire75 [5] \wire75 [6] \wire75 [7] \wire75 [8] \wire75 [9] \wire75 [10] \wire75 [11] \wire75 [12] \wire75 [13] \wire75 [14] \wire75 [15] \wire75 [16] \wire75 [17] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1331$1326: { \reg79 [0] \reg79 [1] \reg79 [2] \reg79 [3] \reg79 [4] \reg79 [5] \reg79 [6] \reg79 [7] \reg79 [8] \reg79 [9] \reg79 [10] \reg79 [11] \reg79 [12] \reg78 [0] \reg78 [1] \reg78 [2] \reg78 [3] \reg78 [4] \reg78 [5] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1295$1288: { \reg79 [0] \reg79 [1] \reg79 [2] \reg79 [3] \reg79 [4] \reg79 [5] \reg79 [6] \reg79 [7] \reg79 [8] \reg79 [9] \reg79 [10] \reg79 [11] \reg79 [12] }
  Optimizing cells in module \module73.
  Optimizing cells in module \top.
    New input vector for $reduce_or cell $reduce_or$rtl.v:54$50: { \wire11 [0] \wire11 [1] \wire11 [2] \wire11 [3] \wire11 [4] \wire11 [5] \wire11 [6] \wire11 [7] \wire11 [8] \wire11 [9] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:51$46: { \wire1 [0] \wire1 [1] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:33$1: { \wire3 [0] \wire3 [1] \wire3 [2] \wire3 [3] \wire3 [4] \wire3 [5] \wire3 [6] \wire3 [7] \wire3 [8] \wire3 [9] \wire3 [10] \wire3 [11] \wire3 [12] \wire3 [13] \wire3 [14] \wire3 [15] \wire3 [16] \wire3 [17] \wire3 [18] }
  Optimizing cells in module \top.
Performed a total of 55 changes.

2.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module106'.
Finding identical cells in module `\module13'.
Finding identical cells in module `\module207'.
Finding identical cells in module `\module30'.
Finding identical cells in module `\module73'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.6.6. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $procdff$2196 ($dff) from module module106.
Promoting init spec \reg187 = 7'0000000 to constant driver in module module106.
Removing $procdff$2222 ($dff) from module module207.
Removing $procdff$2258 ($dff) from module module207.
Promoting init spec \reg276 = 18'000000000000000000 to constant driver in module module207.
Promoting init spec \reg277 = 19'0000000000000000000 to constant driver in module module207.
Promoting init spec \reg67 = 17'00000000000000000 to constant driver in module module30.
Promoted 4 init specs to constant drivers.
Replaced 3 DFF cells.

2.6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module106..
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module207..
Finding unused cells or wires in module \module30..
Finding unused cells or wires in module \module73..
Finding unused cells or wires in module \top..
Removed 5 unused cells and 47 unused wires.
<suppressed ~10 debug messages>

2.6.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module module106.
<suppressed ~6 debug messages>
Optimizing module module13.
Optimizing module module207.
<suppressed ~4 debug messages>
Optimizing module module30.
Optimizing module module73.
Optimizing module top.

2.6.9. Rerunning OPT passes. (Maybe there is more to do..)

2.6.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module106..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $ternary$rtl.v:1017$901.
    dead port 2/2 on $mux $ternary$rtl.v:1017$901.
Running muxtree optimizer on module \module13..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module207..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module30..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module73..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 2 multiplexer ports.
<suppressed ~236 debug messages>

2.6.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module106.
  Optimizing cells in module \module13.
  Optimizing cells in module \module207.
  Optimizing cells in module \module30.
  Optimizing cells in module \module73.
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.6.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module106'.
Finding identical cells in module `\module13'.
Finding identical cells in module `\module207'.
Finding identical cells in module `\module30'.
Finding identical cells in module `\module73'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.6.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.6.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module106..
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module207..
Finding unused cells or wires in module \module30..
Finding unused cells or wires in module \module73..
Finding unused cells or wires in module \top..
Removed 2 unused cells and 11 unused wires.
<suppressed ~4 debug messages>

2.6.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module module106.
Optimizing module module13.
Optimizing module module207.
Optimizing module module30.
Optimizing module module73.
Optimizing module top.

2.6.16. Rerunning OPT passes. (Maybe there is more to do..)

2.6.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module106..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module13..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module207..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module30..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module73..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~236 debug messages>

2.6.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module106.
  Optimizing cells in module \module13.
  Optimizing cells in module \module207.
  Optimizing cells in module \module30.
  Optimizing cells in module \module73.
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.6.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module106'.
Finding identical cells in module `\module13'.
Finding identical cells in module `\module207'.
Finding identical cells in module `\module30'.
Finding identical cells in module `\module73'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.6.20. Executing OPT_RMDFF pass (remove dff with constant values).

2.6.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module106..
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module207..
Finding unused cells or wires in module \module30..
Finding unused cells or wires in module \module73..
Finding unused cells or wires in module \top..

2.6.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module module106.
Optimizing module module13.
Optimizing module module207.
Optimizing module module30.
Optimizing module module73.
Optimizing module top.

2.6.23. Finished OPT passes. (There is nothing left to do.)

2.7. Executing WREDUCE pass (reducing word size of cells).
Removed top 15 bits (of 16) from port A of cell module106.$mul$rtl.v:856$682 ($mul).
Removed top 4 bits (of 20) from port B of cell module106.$le$rtl.v:860$691 ($le).
Removed top 9 bits (of 20) from port A of cell module106.$gt$rtl.v:871$707 ($gt).
Removed top 16 bits (of 17) from port A of cell module106.$sub$rtl.v:872$715 ($sub).
Removed top 10 bits (of 17) from port Y of cell module106.$sub$rtl.v:872$715 ($sub).
Removed top 10 bits (of 17) from port B of cell module106.$sub$rtl.v:872$715 ($sub).
Removed top 9 bits (of 16) from port Y of cell module106.$sshr$rtl.v:872$712 ($sshr).
Removed top 7 bits (of 15) from port A of cell module106.$sub$rtl.v:873$717 ($sub).
Removed top 11 bits (of 15) from port Y of cell module106.$sub$rtl.v:873$717 ($sub).
Removed top 4 bits (of 8) from port A of cell module106.$sub$rtl.v:873$717 ($sub).
Removed top 11 bits (of 15) from port B of cell module106.$sub$rtl.v:873$717 ($sub).
Removed top 5 bits (of 20) from port Y of cell module106.$xor$rtl.v:878$720 ($xor).
Removed top 5 bits (of 20) from mux cell module106.$ternary$rtl.v:878$722 ($mux).
Removed top 7 bits (of 15) from mux cell module106.$ternary$rtl.v:885$748 ($mux).
Removed top 10 bits (of 15) from port A of cell module106.$not$rtl.v:885$752 ($not).
Removed top 15 bits (of 16) from port A of cell module106.$add$rtl.v:900$775 ($add).
Removed top 5 bits (of 16) from port B of cell module106.$add$rtl.v:900$775 ($add).
Removed top 11 bits (of 16) from port Y of cell module106.$add$rtl.v:900$775 ($add).
Removed top 6 bits (of 11) from port B of cell module106.$add$rtl.v:900$775 ($add).
Removed top 1 bits (of 2) from port B of cell module106.$xnor$rtl.v:909$782 ($xnor).
Removed top 4 bits (of 11) from port B of cell module106.$mul$rtl.v:918$795 ($mul).
Removed top 3 bits (of 11) from mux cell module106.$ternary$rtl.v:918$799 ($mux).
Removed top 5 bits (of 16) from mux cell module106.$ternary$rtl.v:931$804 ($mux).
Removed top 12 bits (of 13) from port A of cell module106.$gt$rtl.v:933$808 ($gt).
Removed top 14 bits (of 17) from mux cell module106.$ternary$rtl.v:941$817 ($mux).
Removed top 4 bits (of 17) from port B of cell module106.$ne$rtl.v:940$813 ($ne).
Removed top 17 bits (of 18) from port B of cell module106.$eq$rtl.v:940$814 ($eq).
Removed top 14 bits (of 17) from port Y of cell module106.$xnor$rtl.v:941$815 ($xnor).
Removed top 8 bits (of 21) from port B of cell module106.$ge$rtl.v:962$832 ($ge).
Removed top 9 bits (of 10) from port A of cell module106.$shl$rtl.v:962$833 ($shl).
Removed top 9 bits (of 10) from port B of cell module106.$gt$rtl.v:962$835 ($gt).
Removed top 7 bits (of 8) from port B of cell module106.$mul$rtl.v:970$840 ($mul).
Removed top 2 bits (of 8) from mux cell module106.$ternary$rtl.v:970$837 ($mux).
Removed top 3 bits (of 11) from mux cell module106.$ternary$rtl.v:972$842 ($mux).
Removed top 17 bits (of 18) from port A of cell module106.$xnor$rtl.v:985$855 ($xnor).
Removed top 16 bits (of 17) from port B of cell module106.$xor$rtl.v:992$862 ($xor).
Removed top 7 bits (of 18) from mux cell module106.$ternary$rtl.v:993$869 ($mux).
Removed top 10 bits (of 25) from port A of cell module106.$add$rtl.v:998$877 ($add).
Removed top 23 bits (of 24) from port A of cell module106.$gt$rtl.v:999$882 ($gt).
Removed top 24 bits (of 25) from port B of cell module106.$add$rtl.v:999$883 ($add).
Removed top 22 bits (of 25) from port Y of cell module106.$add$rtl.v:999$883 ($add).
Removed top 22 bits (of 25) from port A of cell module106.$add$rtl.v:999$883 ($add).
Removed top 16 bits (of 17) from port A of cell module106.$sshl$rtl.v:1015$896 ($sshl).
Removed top 10 bits (of 11) from port B of cell module106.$eq$rtl.v:1021$906 ($eq).
Removed top 14 bits (of 22) from mux cell module106.$ternary$rtl.v:1029$913 ($mux).
Removed top 20 bits (of 21) from port A of cell module106.$xor$rtl.v:1044$925 ($xor).
Removed top 17 bits (of 21) from port Y of cell module106.$xor$rtl.v:1044$925 ($xor).
Removed top 17 bits (of 21) from port B of cell module106.$xor$rtl.v:1044$925 ($xor).
Removed top 18 bits (of 21) from mux cell module106.$ternary$rtl.v:1056$940 ($mux).
Removed top 2 bits (of 10) from port B of cell module106.$ge$rtl.v:1058$941 ($ge).
Removed top 3 bits (of 4) from port A of cell module106.$sub$rtl.v:1059$944 ($sub).
Removed top 3 bits (of 4) from port B of cell module106.$sub$rtl.v:1059$944 ($sub).
Removed top 4 bits (of 20) from port B of cell module106.$xor$rtl.v:1077$971 ($xor).
Removed top 9 bits (of 17) from mux cell module106.$ternary$rtl.v:1085$986 ($mux).
Removed top 7 bits (of 17) from mux cell module106.$ternary$rtl.v:1085$990 ($mux).
Removed top 5 bits (of 12) from mux cell module106.$ternary$rtl.v:1099$1001 ($mux).
Removed top 6 bits (of 17) from mux cell module106.$ternary$rtl.v:1102$1007 ($mux).
Removed top 6 bits (of 17) from port B of cell module106.$sshr$rtl.v:1102$1008 ($sshr).
Removed top 9 bits (of 15) from mux cell module106.$ternary$rtl.v:1103$1011 ($mux).
Removed top 7 bits (of 11) from port A of cell module106.$lt$rtl.v:1108$1021 ($lt).
Removed top 12 bits (of 18) from mux cell module106.$ternary$rtl.v:1108$1024 ($mux).
Removed top 7 bits (of 18) from port A of cell module106.$gt$rtl.v:1108$1025 ($gt).
Removed top 12 bits (of 18) from port B of cell module106.$gt$rtl.v:1108$1025 ($gt).
Removed top 6 bits (of 7) from port B of cell module106.$and$rtl.v:1126$1058 ($and).
Removed top 3 bits (of 7) from port Y of cell module106.$and$rtl.v:1126$1058 ($and).
Removed top 3 bits (of 7) from port B of cell module106.$ne$rtl.v:1126$1059 ($ne).
Removed top 18 bits (of 19) from mux cell module106.$ternary$rtl.v:1132$1071 ($mux).
Removed top 19 bits (of 33) from mux cell module106.$ternary$rtl.v:1138$1083 ($mux).
Removed top 5 bits (of 14) from mux cell module106.$ternary$rtl.v:1150$1101 ($mux).
Removed top 16 bits (of 22) from port A of cell module106.$xor$rtl.v:1145$1089 ($xor).
Removed top 4 bits (of 5) from port A of cell module106.$not$rtl.v:1146$1094 ($not).
Removed top 1 bits (of 5) from mux cell module106.$ternary$rtl.v:1146$1096 ($mux).
Removed top 1 bits (of 20) from mux cell module106.$ternary$rtl.v:1153$1104 ($mux).
Removed top 10 bits (of 13) from port A of cell module106.$eq$rtl.v:1159$1108 ($eq).
Removed top 8 bits (of 10) from mux cell module106.$ternary$rtl.v:1159$1111 ($mux).
Removed top 3 bits (of 9) from port B of cell module106.$le$rtl.v:1162$1113 ($le).
Removed top 10 bits (of 11) from port B of cell module106.$sub$rtl.v:1164$1125 ($sub).
Removed top 8 bits (of 11) from port Y of cell module106.$sub$rtl.v:1164$1125 ($sub).
Removed top 8 bits (of 11) from port A of cell module106.$sub$rtl.v:1164$1125 ($sub).
Removed top 10 bits (of 11) from port B of cell module106.$mul$rtl.v:1170$1129 ($mul).
Removed top 5 bits (of 12) from port Y of cell module106.$sshr$rtl.v:1179$1149 ($sshr).
Removed top 3 bits (of 8) from port Y of cell module106.$sshl$rtl.v:1187$1158 ($sshl).
Removed top 4 bits (of 11) from mux cell module106.$ternary$rtl.v:1197$1172 ($mux).
Removed top 3 bits (of 11) from mux cell module106.$procmux$1661 ($mux).
Removed top 12 bits (of 17) from mux cell module106.$procmux$1805 ($mux).
Removed top 15 bits (of 17) from mux cell module106.$procmux$1874 ($mux).
Removed top 6 bits (of 7) from mux cell module106.$procmux$1878 ($mux).
Removed top 6 bits (of 7) from mux cell module106.$procmux$1880 ($mux).
Removed top 5 bits (of 16) from FF cell module106.$procdff$2148 ($dff).
Removed top 8 bits (of 10) from FF cell module106.$procdff$2152 ($dff).
Removed top 3 bits (of 11) from FF cell module106.$procdff$2160 ($dff).
Removed top 17 bits (of 18) from FF cell module106.$procdff$2162 ($dff).
Removed top 3 bits (of 10) from FF cell module106.$procdff$2184 ($dff).
Removed top 12 bits (of 17) from FF cell module106.$procdff$2191 ($dff).
Removed top 2 bits (of 18) from FF cell module106.$procdff$2192 ($dff).
Removed top 13 bits (of 17) from FF cell module106.$procdff$2202 ($dff).
Removed top 6 bits (of 7) from FF cell module106.$procdff$2208 ($dff).
Removed top 15 bits (of 17) from FF cell module106.$procdff$2209 ($dff).
Removed top 10 bits (of 11) from FF cell module106.$procdff$2211 ($dff).
Removed top 10 bits (of 15) from FF cell module106.$procdff$2212 ($dff).
Removed top 10 bits (of 15) from port B of cell module106.$sshr$rtl.v:854$678 ($sshr).
Removed top 9 bits (of 15) from port B of cell module106.$add$rtl.v:873$716 ($add).
Removed top 11 bits (of 15) from port Y of cell module106.$add$rtl.v:873$716 ($add).
Removed top 5 bits (of 9) from port A of cell module106.$add$rtl.v:873$716 ($add).
Removed top 2 bits (of 6) from port B of cell module106.$add$rtl.v:873$716 ($add).
Removed top 10 bits (of 15) from port B of cell module106.$xor$rtl.v:878$720 ($xor).
Removed top 4 bits (of 15) from port Y of cell module106.$xor$rtl.v:878$720 ($xor).
Removed top 10 bits (of 15) from port A of cell module106.$or$rtl.v:880$726 ($or).
Removed top 7 bits (of 15) from mux cell module106.$ternary$rtl.v:885$750 ($mux).
Removed top 10 bits (of 15) from port B of cell module106.$sub$rtl.v:885$753 ($sub).
Removed top 10 bits (of 17) from mux cell module106.$ternary$rtl.v:912$786 ($mux).
Removed top 15 bits (of 17) from port B of cell module106.$sub$rtl.v:936$809 ($sub).
Removed top 14 bits (of 17) from port A of cell module106.$ne$rtl.v:940$813 ($ne).
Removed top 13 bits (of 17) from port A of cell module106.$xnor$rtl.v:941$815 ($xnor).
Removed top 10 bits (of 17) from mux cell module106.$ternary$rtl.v:992$860 ($mux).
Removed top 7 bits (of 18) from mux cell module106.$ternary$rtl.v:993$865 ($mux).
Removed top 10 bits (of 15) from port A of cell module106.$not$rtl.v:995$871 ($not).
Removed top 22 bits (of 25) from port Y of cell module106.$add$rtl.v:998$877 ($add).
Removed top 12 bits (of 15) from port A of cell module106.$add$rtl.v:998$877 ($add).
Removed top 23 bits (of 25) from port B of cell module106.$add$rtl.v:998$877 ($add).
Removed top 9 bits (of 15) from port B of cell module106.$le$rtl.v:1000$884 ($le).
Removed top 14 bits (of 17) from port B of cell module106.$le$rtl.v:1021$905 ($le).
Removed top 14 bits (of 22) from mux cell module106.$ternary$rtl.v:1029$911 ($mux).
Removed top 10 bits (of 15) from mux cell module106.$ternary$rtl.v:1044$922 ($mux).
Removed top 3 bits (of 10) from port B of cell module106.$eq$rtl.v:1042$920 ($eq).
Removed top 17 bits (of 21) from port Y of cell module106.$not$rtl.v:1044$924 ($not).
Removed top 17 bits (of 21) from port A of cell module106.$not$rtl.v:1044$924 ($not).
Removed top 3 bits (of 10) from port A of cell module106.$ge$rtl.v:1058$941 ($ge).
Removed top 13 bits (of 17) from port A of cell module106.$mul$rtl.v:1082$979 ($mul).
Removed top 9 bits (of 17) from mux cell module106.$ternary$rtl.v:1085$988 ($mux).
Removed top 15 bits (of 17) from port A of cell module106.$ne$rtl.v:1084$984 ($ne).
Removed top 2 bits (of 10) from mux cell module106.$ternary$rtl.v:1085$990 ($mux).
Removed top 3 bits (of 10) from port B of cell module106.$gt$rtl.v:1096$993 ($gt).
Removed top 1 bits (of 6) from mux cell module106.$ternary$rtl.v:1103$1011 ($mux).
Removed top 12 bits (of 17) from mux cell module106.$ternary$rtl.v:1119$1042 ($mux).
Removed top 19 bits (of 33) from mux cell module106.$ternary$rtl.v:1136$1075 ($mux).
Removed top 1 bits (of 5) from mux cell module106.$ternary$rtl.v:1146$1092 ($mux).
Removed top 1 bits (of 5) from port Y of cell module106.$not$rtl.v:1146$1094 ($not).
Removed top 8 bits (of 11) from mux cell module106.$ternary$rtl.v:1162$1115 ($mux).
Removed top 17 bits (of 18) from port B of cell module106.$sshr$rtl.v:1176$1137 ($sshr).
Removed top 7 bits (of 10) from mux cell module106.$ternary$rtl.v:1189$1163 ($mux).
Removed top 4 bits (of 11) from port Y of cell module106.$shr$rtl.v:1197$1170 ($shr).
Removed top 6 bits (of 8) from mux cell module106.$procmux$1661 ($mux).
Removed top 6 bits (of 8) from FF cell module106.$procdff$2160 ($dff).
Removed top 7 bits (of 11) from FF cell module106.$procdff$2161 ($dff).
Removed top 6 bits (of 7) from FF cell module106.$procdff$2184 ($dff).
Removed top 12 bits (of 15) from mux cell module106.$ternary$rtl.v:995$873 ($mux).
Removed top 6 bits (of 7) from port B of cell module106.$eq$rtl.v:1042$920 ($eq).
Removed top 6 bits (of 7) from port A of cell module106.$ge$rtl.v:1058$941 ($ge).
Removed top 6 bits (of 7) from port B of cell module106.$gt$rtl.v:1096$993 ($gt).
Removed top 7 bits (of 11) from port A of cell module106.$shr$rtl.v:1197$1170 ($shr).
Removed top 7 bits (of 11) from FF cell module106.$procdff$2148 ($dff).
Removed top 12 bits (of 15) from port Y of cell module106.$not$rtl.v:995$871 ($not).
Removed top 2 bits (of 5) from port A of cell module106.$not$rtl.v:995$871 ($not).
Removed top 15 bits (of 17) from wire module106.$0\reg115[16:0].
Removed top 6 bits (of 7) from wire module106.$0\reg116[6:0].
Removed top 13 bits (of 17) from wire module106.$0\reg123[16:0].
Removed top 12 bits (of 17) from wire module106.$0\reg134[16:0].
Removed top 1 bits (of 6) from wire module106.$0\reg164[5:0].
Removed top 17 bits (of 18) from wire module106.$0\reg165[17:0].
Removed top 9 bits (of 11) from wire module106.$0\reg167[10:0].
Removed top 8 bits (of 10) from wire module106.$0\reg175[9:0].
Removed top 1 bits (of 3) from wire module106.$0\reg176[2:0].
Removed top 11 bits (of 15) from wire module106.$add$rtl.v:873$716_Y.
Removed top 11 bits (of 16) from wire module106.$add$rtl.v:900$775_Y.
Removed top 22 bits (of 25) from wire module106.$add$rtl.v:998$877_Y.
Removed top 3 bits (of 7) from wire module106.$and$rtl.v:1126$1058_Y.
Removed top 2 bits (of 3) from wire module106.$eq$rtl.v:1042$920_Y.
Removed top 3 bits (of 4) from wire module106.$ge$rtl.v:1058$941_Y.
Removed top 2 bits (of 3) from wire module106.$gt$rtl.v:1096$993_Y.
Removed top 4 bits (of 5) from wire module106.$gt$rtl.v:1178$1143_Y.
Removed top 16 bits (of 17) from wire module106.$gt$rtl.v:871$707_Y.
Removed top 4 bits (of 5) from wire module106.$gt$rtl.v:885$754_Y.
Removed top 10 bits (of 11) from wire module106.$le$rtl.v:1021$905_Y.
Removed top 10 bits (of 11) from wire module106.$le$rtl.v:1021$907_Y.
Removed top 10 bits (of 11) from wire module106.$le$rtl.v:1162$1113_Y.
Removed top 16 bits (of 17) from wire module106.$le$rtl.v:860$691_Y.
Removed top 16 bits (of 17) from wire module106.$le$rtl.v:992$861_Y.
Removed top 3 bits (of 4) from wire module106.$logic_not$rtl.v:1059$945_Y.
Removed top 19 bits (of 20) from wire module106.$logic_not$rtl.v:882$735_Y.
Removed top 17 bits (of 18) from wire module106.$logic_or$rtl.v:1068$966_Y.
Removed top 10 bits (of 11) from wire module106.$logic_or$rtl.v:1120$1056_Y.
Removed top 17 bits (of 18) from wire module106.$lt$rtl.v:1108$1021_Y.
Removed top 6 bits (of 7) from wire module106.$lt$rtl.v:866$694_Y.
Removed top 3 bits (of 4) from wire module106.$ne$rtl.v:1059$943_Y.
Removed top 17 bits (of 21) from wire module106.$not$rtl.v:1044$924_Y.
Removed top 1 bits (of 5) from wire module106.$not$rtl.v:1146$1094_Y.
Removed top 12 bits (of 15) from wire module106.$not$rtl.v:995$871_Y.
Removed top 7 bits (of 18) from wire module106.$pos$rtl.v:993$866_Y.
Removed top 6 bits (of 7) from wire module106.$procmux$1878_Y.
Removed top 15 bits (of 16) from wire module106.$reduce_or$rtl.v:857$687_Y.
Removed top 12 bits (of 13) from wire module106.$reduce_xnor$rtl.v:1066$959_Y.
Removed top 10 bits (of 11) from wire module106.$reduce_xnor$rtl.v:1068$969_Y.
Removed top 16 bits (of 17) from wire module106.$reduce_xnor$rtl.v:1085$985_Y.
Removed top 4 bits (of 5) from wire module106.$reduce_xnor$rtl.v:1118$1039_Y.
Removed top 15 bits (of 16) from wire module106.$reduce_xnor$rtl.v:856$681_Y.
Removed top 6 bits (of 7) from wire module106.$reduce_xnor$rtl.v:882$741_Y.
Removed top 6 bits (of 7) from wire module106.$reduce_xnor$rtl.v:981$844_Y.
Removed top 21 bits (of 22) from wire module106.$reduce_xnor$rtl.v:988$857_Y.
Removed top 2 bits (of 3) from wire module106.$reduce_xor$rtl.v:1101$1002_Y.
Removed top 18 bits (of 19) from wire module106.$reduce_xor$rtl.v:1132$1069_Y.
Removed top 4 bits (of 11) from wire module106.$shr$rtl.v:1197$1170_Y.
Removed top 3 bits (of 8) from wire module106.$sshl$rtl.v:1187$1158_Y.
Removed top 9 bits (of 16) from wire module106.$sshr$rtl.v:872$712_Y.
Removed top 10 bits (of 17) from wire module106.$sub$rtl.v:872$715_Y.
Removed top 14 bits (of 22) from wire module106.$ternary$rtl.v:1029$911_Y.
Removed top 14 bits (of 22) from wire module106.$ternary$rtl.v:1029$913_Y.
Removed top 18 bits (of 21) from wire module106.$ternary$rtl.v:1056$940_Y.
Removed top 9 bits (of 17) from wire module106.$ternary$rtl.v:1085$986_Y.
Removed top 9 bits (of 17) from wire module106.$ternary$rtl.v:1085$988_Y.
Removed top 9 bits (of 17) from wire module106.$ternary$rtl.v:1085$990_Y.
Removed top 6 bits (of 17) from wire module106.$ternary$rtl.v:1102$1007_Y.
Removed top 12 bits (of 18) from wire module106.$ternary$rtl.v:1108$1024_Y.
Removed top 12 bits (of 17) from wire module106.$ternary$rtl.v:1119$1042_Y.
Removed top 18 bits (of 19) from wire module106.$ternary$rtl.v:1132$1071_Y.
Removed top 19 bits (of 33) from wire module106.$ternary$rtl.v:1136$1075_Y.
Removed top 19 bits (of 33) from wire module106.$ternary$rtl.v:1138$1083_Y.
Removed top 1 bits (of 5) from wire module106.$ternary$rtl.v:1146$1092_Y.
Removed top 5 bits (of 14) from wire module106.$ternary$rtl.v:1150$1101_Y.
Removed top 1 bits (of 20) from wire module106.$ternary$rtl.v:1153$1104_Y.
Removed top 8 bits (of 11) from wire module106.$ternary$rtl.v:1162$1115_Y.
Removed top 7 bits (of 10) from wire module106.$ternary$rtl.v:1189$1163_Y.
Removed top 4 bits (of 11) from wire module106.$ternary$rtl.v:1197$1172_Y.
Removed top 1 bits (of 20) from wire module106.$ternary$rtl.v:871$706_Y.
Removed top 5 bits (of 20) from wire module106.$ternary$rtl.v:878$722_Y.
Removed top 7 bits (of 15) from wire module106.$ternary$rtl.v:885$748_Y.
Removed top 7 bits (of 15) from wire module106.$ternary$rtl.v:885$750_Y.
Removed top 2 bits (of 8) from wire module106.$ternary$rtl.v:970$837_Y.
Removed top 3 bits (of 11) from wire module106.$ternary$rtl.v:972$842_Y.
Removed top 10 bits (of 17) from wire module106.$ternary$rtl.v:992$860_Y.
Removed top 7 bits (of 18) from wire module106.$ternary$rtl.v:993$869_Y.
Removed top 5 bits (of 13) from wire module106.$xnor$rtl.v:1153$1102_Y.
Removed top 17 bits (of 21) from wire module106.$xor$rtl.v:1044$925_Y.
Removed top 1 bits (of 8) from wire module106.$xor$rtl.v:1132$1068_Y.
Removed top 19 bits (of 22) from wire module106.$xor$rtl.v:1145$1089_Y.
Removed top 9 bits (of 20) from wire module106.$xor$rtl.v:878$720_Y.
Removed top 13 bits (of 14) from wire module106.wire177.
Removed top 18 bits (of 19) from wire module106.wire180.
Removed top 27 bits (of 38) from port Y of cell module13.$not$rtl.v:130$61 ($not).
Removed top 27 bits (of 38) from port A of cell module13.$not$rtl.v:130$61 ($not).
Removed top 27 bits (of 38) from mux cell module13.$ternary$rtl.v:130$60 ($mux).
Removed top 10 bits (of 11) from port B of cell module13.$ge$rtl.v:135$71 ($ge).
Removed top 20 bits (of 21) from port B of cell module13.$ne$rtl.v:135$72 ($ne).
Removed top 7 bits (of 8) from port A of cell module13.$mul$rtl.v:135$73 ($mul).
Removed top 7 bits (of 8) from port B of cell module13.$mul$rtl.v:135$73 ($mul).
Removed top 6 bits (of 8) from port Y of cell module13.$mul$rtl.v:135$73 ($mul).
Removed top 21 bits (of 22) from mux cell module13.$ternary$rtl.v:177$132 ($mux).
Removed top 21 bits (of 22) from port B of cell module13.$xnor$rtl.v:177$133 ($xnor).
Removed top 18 bits (of 19) from port A of cell module13.$add$rtl.v:191$155 ($add).
Removed top 17 bits (of 18) from mux cell module13.$ternary$rtl.v:193$158 ($mux).
Removed top 14 bits (of 22) from mux cell module13.$ternary$rtl.v:193$161 ($mux).
Removed top 21 bits (of 22) from port A of cell module13.$neg$rtl.v:197$167 ($neg).
Removed top 29 bits (of 30) from port A of cell module13.$mul$rtl.v:202$176 ($mul).
Removed top 27 bits (of 30) from port Y of cell module13.$mul$rtl.v:202$176 ($mul).
Removed top 8 bits (of 20) from mux cell module13.$ternary$rtl.v:205$182 ($mux).
Removed top 17 bits (of 20) from mux cell module13.$ternary$rtl.v:209$189 ($mux).
Removed top 10 bits (of 16) from port B of cell module13.$gt$rtl.v:217$191 ($gt).
Removed top 15 bits (of 22) from mux cell module13.$ternary$rtl.v:223$200 ($mux).
Removed top 19 bits (of 22) from mux cell module13.$ternary$rtl.v:223$203 ($mux).
Removed top 12 bits (of 13) from port B of cell module13.$shl$rtl.v:231$206 ($shl).
Removed top 8 bits (of 16) from mux cell module13.$ternary$rtl.v:235$217 ($mux).
Removed top 13 bits (of 16) from port B of cell module13.$mul$rtl.v:236$221 ($mul).
Removed top 9 bits (of 16) from port B of cell module13.$xnor$rtl.v:236$222 ($xnor).
Removed top 5 bits (of 16) from mux cell module13.$ternary$rtl.v:236$224 ($mux).
Removed top 15 bits (of 16) from port A of cell module13.$xnor$rtl.v:240$230 ($xnor).
Removed top 15 bits (of 16) from port Y of cell module13.$xnor$rtl.v:240$230 ($xnor).
Removed top 13 bits (of 18) from mux cell module13.$procmux$2093 ($mux).
Removed top 6 bits (of 14) from FF cell module13.$procdff$2266 ($dff).
Removed top 5 bits (of 7) from FF cell module13.$procdff$2267 ($dff).
Removed top 13 bits (of 18) from FF cell module13.$procdff$2271 ($dff).
Removed top 6 bits (of 18) from mux cell module13.$ternary$rtl.v:205$181 ($mux).
Removed top 4 bits (of 7) from mux cell module13.$ternary$rtl.v:223$200 ($mux).
Removed top 19 bits (of 22) from port Y of cell module13.$neg$rtl.v:223$201 ($neg).
Removed top 19 bits (of 22) from port A of cell module13.$neg$rtl.v:223$201 ($neg).
Removed top 5 bits (of 7) from port B of cell module13.$xnor$rtl.v:236$222 ($xnor).
Removed top 5 bits (of 16) from port Y of cell module13.$xnor$rtl.v:236$222 ($xnor).
Removed top 4 bits (of 6) from port Y of cell module13.$sshl$rtl.v:222$197 ($sshl).
Removed top 5 bits (of 7) from wire module13.$0\reg196[6:0].
Removed top 13 bits (of 18) from wire module13.$0\reg24[17:0].
Removed top 20 bits (of 21) from wire module13.$ge$rtl.v:135$71_Y.
Removed top 21 bits (of 22) from wire module13.$logic_and$rtl.v:181$140_Y.
Removed top 10 bits (of 11) from wire module13.$logic_not$rtl.v:135$70_Y.
Removed top 9 bits (of 10) from wire module13.$logic_not$rtl.v:188$144_Y.
Removed top 17 bits (of 18) from wire module13.$logic_not$rtl.v:194$163_Y.
Removed top 6 bits (of 8) from wire module13.$mul$rtl.v:135$73_Y.
Removed top 19 bits (of 22) from wire module13.$neg$rtl.v:223$201_Y.
Removed top 18 bits (of 19) from wire module13.$reduce_xor$rtl.v:190$152_Y.
Removed top 4 bits (of 6) from wire module13.$sshl$rtl.v:222$197_Y.
Removed top 27 bits (of 38) from wire module13.$ternary$rtl.v:130$60_Y.
Removed top 21 bits (of 22) from wire module13.$ternary$rtl.v:177$132_Y.
Removed top 17 bits (of 18) from wire module13.$ternary$rtl.v:193$158_Y.
Removed top 14 bits (of 22) from wire module13.$ternary$rtl.v:193$161_Y.
Removed top 6 bits (of 18) from wire module13.$ternary$rtl.v:205$181_Y.
Removed top 8 bits (of 20) from wire module13.$ternary$rtl.v:205$182_Y.
Removed top 19 bits (of 22) from wire module13.$ternary$rtl.v:223$200_Y.
Removed top 8 bits (of 16) from wire module13.$ternary$rtl.v:235$217_Y.
Removed top 5 bits (of 16) from wire module13.$xnor$rtl.v:236$222_Y.
Removed top 15 bits (of 16) from wire module13.$xnor$rtl.v:240$230_Y.
Removed top 12 bits (of 13) from wire module13.wire202.
Removed top 11 bits (of 13) from wire module13.wire203.
Removed top 7 bits (of 8) from wire module13.wire204.
Removed top 11 bits (of 12) from wire module13.wire283.
Removed top 17 bits (of 20) from wire module13.wire29.
Removed top 2 bits (of 3) from port B of cell module207.$le$rtl.v:396$263 ($le).
Removed top 19 bits (of 20) from port A of cell module207.$not$rtl.v:395$264 ($not).
Removed top 3 bits (of 4) from port A of cell module207.$xnor$rtl.v:395$265 ($xnor).
Removed top 12 bits (of 20) from port A of cell module207.$eq$rtl.v:395$266 ($eq).
Removed top 19 bits (of 20) from port B of cell module207.$eq$rtl.v:399$269 ($eq).
Removed top 3 bits (of 20) from port Y of cell module207.$and$rtl.v:399$270 ($and).
Removed top 3 bits (of 20) from port A of cell module207.$and$rtl.v:399$270 ($and).
Removed top 4 bits (of 12) from port B of cell module207.$add$rtl.v:401$274 ($add).
Removed top 3 bits (of 12) from port Y of cell module207.$add$rtl.v:401$274 ($add).
Removed top 6 bits (of 7) from port B of cell module207.$le$rtl.v:407$278 ($le).
Removed top 7 bits (of 20) from mux cell module207.$ternary$rtl.v:411$282 ($mux).
Removed top 7 bits (of 31) from port A of cell module207.$or$rtl.v:412$283 ($or).
Removed top 12 bits (of 31) from port Y of cell module207.$or$rtl.v:412$283 ($or).
Removed top 5 bits (of 24) from port A of cell module207.$or$rtl.v:412$283 ($or).
Removed top 4 bits (of 11) from mux cell module207.$ternary$rtl.v:444$287 ($mux).
Removed top 15 bits (of 16) from port A of cell module207.$lt$rtl.v:449$300 ($lt).
Removed top 20 bits (of 21) from mux cell module207.$ternary$rtl.v:449$302 ($mux).
Removed top 20 bits (of 21) from mux cell module207.$ternary$rtl.v:449$304 ($mux).
Removed top 19 bits (of 21) from port A of cell module207.$ne$rtl.v:449$305 ($ne).
Removed top 20 bits (of 21) from port B of cell module207.$ne$rtl.v:449$305 ($ne).
Removed top 6 bits (of 8) from mux cell module207.$ternary$rtl.v:454$314 ($mux).
Removed top 12 bits (of 19) from mux cell module207.$ternary$rtl.v:452$308 ($mux).
Removed top 14 bits (of 21) from port A of cell module207.$neg$rtl.v:456$318 ($neg).
Removed top 19 bits (of 20) from port A of cell module207.$mul$rtl.v:456$323 ($mul).
Removed top 24 bits (of 25) from port A of cell module207.$xnor$rtl.v:459$333 ($xnor).
Removed top 15 bits (of 25) from mux cell module207.$ternary$rtl.v:459$337 ($mux).
Removed top 1 bits (of 2) from port B of cell module207.$xnor$rtl.v:463$344 ($xnor).
Removed top 19 bits (of 20) from port A of cell module207.$mul$rtl.v:462$342 ($mul).
Removed top 12 bits (of 20) from port B of cell module207.$mul$rtl.v:462$342 ($mul).
Removed top 11 bits (of 20) from port Y of cell module207.$mul$rtl.v:462$342 ($mul).
Removed top 18 bits (of 19) from mux cell module207.$ternary$rtl.v:464$347 ($mux).
Removed top 22 bits (of 33) from mux cell module207.$ternary$rtl.v:470$358 ($mux).
Removed top 17 bits (of 19) from port A of cell module207.$lt$rtl.v:470$354 ($lt).
Removed top 32 bits (of 33) from port A of cell module207.$mul$rtl.v:470$355 ($mul).
Removed top 22 bits (of 33) from port Y of cell module207.$mul$rtl.v:470$355 ($mul).
Removed top 19 bits (of 23) from port A of cell module207.$eq$rtl.v:507$388 ($eq).
Removed top 3 bits (of 12) from mux cell module207.$ternary$rtl.v:511$394 ($mux).
Removed top 3 bits (of 12) from mux cell module207.$ternary$rtl.v:511$395 ($mux).
Removed top 20 bits (of 21) from port A of cell module207.$mul$rtl.v:514$406 ($mul).
Removed top 10 bits (of 21) from port B of cell module207.$mul$rtl.v:514$406 ($mul).
Removed top 9 bits (of 21) from port Y of cell module207.$mul$rtl.v:514$406 ($mul).
Removed top 5 bits (of 21) from port A of cell module207.$and$rtl.v:530$424 ($and).
Removed top 20 bits (of 21) from port B of cell module207.$and$rtl.v:530$424 ($and).
Removed top 5 bits (of 21) from port Y of cell module207.$and$rtl.v:530$424 ($and).
Removed top 13 bits (of 17) from port A of cell module207.$and$rtl.v:534$432 ($and).
Removed top 9 bits (of 17) from port Y of cell module207.$and$rtl.v:534$432 ($and).
Removed top 9 bits (of 17) from port B of cell module207.$and$rtl.v:534$432 ($and).
Removed top 19 bits (of 20) from port A of cell module207.$ne$rtl.v:544$438 ($ne).
Removed top 9 bits (of 20) from port B of cell module207.$ne$rtl.v:544$438 ($ne).
Removed top 1 bits (of 20) from port B of cell module207.$xnor$rtl.v:547$447 ($xnor).
Removed top 12 bits (of 20) from port Y of cell module207.$xnor$rtl.v:547$447 ($xnor).
Removed top 10 bits (of 12) from mux cell module207.$ternary$rtl.v:550$449 ($mux).
Removed top 6 bits (of 7) from port B of cell module207.$le$rtl.v:551$452 ($le).
Removed top 13 bits (of 21) from mux cell module207.$ternary$rtl.v:583$487 ($mux).
Removed top 13 bits (of 21) from port B of cell module207.$shl$rtl.v:583$488 ($shl).
Removed top 11 bits (of 12) from port B of cell module207.$lt$rtl.v:584$489 ($lt).
Removed top 23 bits (of 42) from mux cell module207.$ternary$rtl.v:587$502 ($mux).
Removed top 2 bits (of 3) from port B of cell module207.$xnor$rtl.v:594$506 ($xnor).
Removed top 25 bits (of 40) from port A of cell module207.$sshl$rtl.v:597$516 ($sshl).
Removed top 10 bits (of 11) from port B of cell module207.$xnor$rtl.v:603$528 ($xnor).
Removed top 17 bits (of 19) from port B of cell module207.$eq$rtl.v:600$525 ($eq).
Removed top 7 bits (of 8) from mux cell module207.$ternary$rtl.v:612$535 ($mux).
Removed top 7 bits (of 8) from port A of cell module207.$ge$rtl.v:612$536 ($ge).
Removed top 3 bits (of 14) from port A of cell module207.$mul$rtl.v:632$557 ($mul).
Removed top 3 bits (of 4) from port A of cell module207.$sub$rtl.v:635$569 ($sub).
Removed top 17 bits (of 21) from port A of cell module207.$le$rtl.v:637$570 ($le).
Removed top 20 bits (of 21) from port B of cell module207.$le$rtl.v:637$570 ($le).
Removed top 1 bits (of 18) from port A of cell module207.$neg$rtl.v:642$576 ($neg).
Removed top 5 bits (of 6) from port B of cell module207.$sub$rtl.v:648$587 ($sub).
Removed top 4 bits (of 11) from port B of cell module207.$sshr$rtl.v:649$588 ($sshr).
Removed top 2 bits (of 10) from port A of cell module207.$sshr$rtl.v:650$592 ($sshr).
Removed top 15 bits (of 16) from mux cell module207.$ternary$rtl.v:659$603 ($mux).
Removed top 4 bits (of 10) from mux cell module207.$ternary$rtl.v:657$597 ($mux).
Removed top 5 bits (of 13) from mux cell module207.$ternary$rtl.v:664$609 ($mux).
Removed top 10 bits (of 20) from mux cell module207.$procmux$1917 ($mux).
Removed top 5 bits (of 13) from mux cell module207.$procmux$1911 ($mux).
Removed top 5 bits (of 13) from mux cell module207.$procmux$1913 ($mux).
Removed top 10 bits (of 20) from mux cell module207.$procmux$1919 ($mux).
Removed top 10 bits (of 15) from mux cell module207.$procmux$1952 ($mux).
Removed top 8 bits (of 9) from mux cell module207.$procmux$1979 ($mux).
Removed top 6 bits (of 11) from mux cell module207.$procmux$2006 ($mux).
Removed top 10 bits (of 20) from FF cell module207.$procdff$2220 ($dff).
Removed top 5 bits (of 13) from FF cell module207.$procdff$2221 ($dff).
Removed top 8 bits (of 9) from FF cell module207.$procdff$2225 ($dff).
Removed top 7 bits (of 8) from FF cell module207.$procdff$2226 ($dff).
Removed top 6 bits (of 7) from FF cell module207.$procdff$2227 ($dff).
Removed top 16 bits (of 19) from FF cell module207.$procdff$2228 ($dff).
Removed top 10 bits (of 15) from FF cell module207.$procdff$2233 ($dff).
Removed top 17 bits (of 19) from FF cell module207.$procdff$2234 ($dff).
Removed top 10 bits (of 21) from FF cell module207.$procdff$2236 ($dff).
Removed top 4 bits (of 13) from FF cell module207.$procdff$2238 ($dff).
Removed top 2 bits (of 4) from FF cell module207.$procdff$2239 ($dff).
Removed top 6 bits (of 12) from FF cell module207.$procdff$2240 ($dff).
Removed top 1 bits (of 4) from FF cell module207.$procdff$2241 ($dff).
Removed top 1 bits (of 11) from FF cell module207.$procdff$2242 ($dff).
Removed top 16 bits (of 17) from FF cell module207.$procdff$2259 ($dff).
Removed top 6 bits (of 7) from FF cell module207.$procdff$2260 ($dff).
Removed top 20 bits (of 21) from FF cell module207.$procdff$2261 ($dff).
Removed top 13 bits (of 16) from FF cell module207.$procdff$2262 ($dff).
Removed top 16 bits (of 17) from FF cell module207.$procdff$2263 ($dff).
Removed top 5 bits (of 13) from mux cell module207.$ternary$rtl.v:411$282 ($mux).
Removed top 13 bits (of 16) from mux cell module207.$ternary$rtl.v:449$299 ($mux).
Removed top 16 bits (of 17) from mux cell module207.$ternary$rtl.v:453$312 ($mux).
Removed top 16 bits (of 25) from mux cell module207.$ternary$rtl.v:459$330 ($mux).
Removed top 16 bits (of 25) from port A of cell module207.$or$rtl.v:459$334 ($or).
Removed top 15 bits (of 25) from port Y of cell module207.$or$rtl.v:459$334 ($or).
Removed top 15 bits (of 25) from port B of cell module207.$or$rtl.v:459$334 ($or).
Removed top 19 bits (of 21) from port B of cell module207.$gt$rtl.v:462$340 ($gt).
Removed top 6 bits (of 8) from port B of cell module207.$mul$rtl.v:462$342 ($mul).
Removed top 6 bits (of 9) from port Y of cell module207.$mul$rtl.v:462$342 ($mul).
Removed top 6 bits (of 7) from port A of cell module207.$not$rtl.v:485$368 ($not).
Removed top 20 bits (of 21) from port A of cell module207.$not$rtl.v:509$390 ($not).
Removed top 2 bits (of 21) from mux cell module207.$ternary$rtl.v:513$398 ($mux).
Removed top 16 bits (of 17) from mux cell module207.$ternary$rtl.v:516$410 ($mux).
Removed top 13 bits (of 16) from port A of cell module207.$eq$rtl.v:547$444 ($eq).
Removed top 13 bits (of 16) from port B of cell module207.$add$rtl.v:580$481 ($add).
Removed top 12 bits (of 16) from port Y of cell module207.$add$rtl.v:580$481 ($add).
Removed top 20 bits (of 21) from mux cell module207.$ternary$rtl.v:587$492 ($mux).
Removed top 23 bits (of 42) from mux cell module207.$ternary$rtl.v:587$499 ($mux).
Removed top 13 bits (of 16) from port B of cell module207.$gt$rtl.v:592$503 ($gt).
Removed top 2 bits (of 4) from port B of cell module207.$lt$rtl.v:594$507 ($lt).
Removed top 5 bits (of 7) from port A of cell module207.$sshl$rtl.v:628$541 ($sshl).
Removed top 1 bits (of 4) from port A of cell module207.$shl$rtl.v:635$568 ($shl).
Removed top 1 bits (of 4) from port A of cell module207.$le$rtl.v:637$570 ($le).
Removed top 6 bits (of 7) from port A of cell module207.$add$rtl.v:658$598 ($add).
Removed top 1 bits (of 2) from port B of cell module207.$add$rtl.v:658$598 ($add).
Removed top 5 bits (of 7) from port Y of cell module207.$add$rtl.v:658$598 ($add).
Removed top 12 bits (of 13) from FF cell module207.$procdff$2229 ($dff).
Removed top 1 bits (of 2) from FF cell module207.$procdff$2234 ($dff).
Removed top 5 bits (of 6) from FF cell module207.$procdff$2240 ($dff).
Removed top 15 bits (of 25) from port Y of cell module207.$xnor$rtl.v:459$333 ($xnor).
Removed top 19 bits (of 21) from port A of cell module207.$shr$rtl.v:587$494 ($shr).
Removed cell module207.$not$rtl.v:585$498 ($not).
Removed top 12 bits (of 13) from port A of cell module207.$sshl$rtl.v:629$543 ($sshl).
Removed top 16 bits (of 17) from wire module207.$0\reg220[16:0].
Removed top 6 bits (of 7) from wire module207.$0\reg223[6:0].
Removed top 16 bits (of 17) from wire module207.$0\reg224[16:0].
Removed top 10 bits (of 15) from wire module207.$0\reg257[14:0].
Removed top 16 bits (of 19) from wire module207.$0\reg262[18:0].
Removed top 6 bits (of 7) from wire module207.$0\reg263[6:0].
Removed top 7 bits (of 8) from wire module207.$0\reg264[7:0].
Removed top 8 bits (of 9) from wire module207.$0\reg265[8:0].
Removed top 5 bits (of 13) from wire module207.$0\reg269[12:0].
Removed top 10 bits (of 20) from wire module207.$0\reg270[19:0].
Removed top 12 bits (of 16) from wire module207.$add$rtl.v:580$481_Y.
Removed top 5 bits (of 13) from wire module207.$add$rtl.v:647$584_Y.
Removed top 5 bits (of 7) from wire module207.$add$rtl.v:658$598_Y.
Removed top 9 bits (of 17) from wire module207.$and$rtl.v:534$432_Y.
Removed top 3 bits (of 4) from wire module207.$ge$rtl.v:634$565_Y.
Removed top 19 bits (of 20) from wire module207.$gt$rtl.v:546$440_Y.
Removed top 2 bits (of 3) from wire module207.$le$rtl.v:396$262_Y.
Removed top 20 bits (of 21) from wire module207.$le$rtl.v:513$399_Y.
Removed top 15 bits (of 16) from wire module207.$logic_and$rtl.v:659$599_Y.
Removed top 20 bits (of 21) from wire module207.$logic_not$rtl.v:448$296_Y.
Removed top 19 bits (of 20) from wire module207.$logic_not$rtl.v:456$320_Y.
Removed top 24 bits (of 25) from wire module207.$logic_not$rtl.v:459$328_Y.
Removed top 18 bits (of 19) from wire module207.$logic_not$rtl.v:464$345_Y.
Removed top 2 bits (of 3) from wire module207.$logic_not$rtl.v:594$505_Y.
Removed top 5 bits (of 6) from wire module207.$logic_not$rtl.v:648$586_Y.
Removed top 12 bits (of 13) from wire module207.$logic_not$rtl.v:664$606_Y.
Removed top 7 bits (of 8) from wire module207.$logic_or$rtl.v:391$253_Y.
Removed top 20 bits (of 21) from wire module207.$lt$rtl.v:449$300_Y.
Removed top 7 bits (of 8) from wire module207.$lt$rtl.v:649$589_Y.
Removed top 17 bits (of 20) from wire module207.$mul$rtl.v:462$342_Y.
Removed top 22 bits (of 33) from wire module207.$mul$rtl.v:470$355_Y.
Removed top 9 bits (of 21) from wire module207.$mul$rtl.v:514$406_Y.
Removed top 16 bits (of 17) from wire module207.$pos$rtl.v:516$411_Y.
Removed top 5 bits (of 13) from wire module207.$procmux$1911_Y.
Removed top 10 bits (of 20) from wire module207.$procmux$1917_Y.
Removed top 14 bits (of 15) from wire module207.$reduce_and$rtl.v:485$369_Y.
Removed top 19 bits (of 20) from wire module207.$reduce_and$rtl.v:546$442_Y.
Removed top 7 bits (of 8) from wire module207.$reduce_or$rtl.v:620$537_Y.
Removed top 11 bits (of 12) from wire module207.$reduce_xnor$rtl.v:509$392_Y.
Removed top 12 bits (of 13) from wire module207.$reduce_xnor$rtl.v:629$542_Y.
Removed top 10 bits (of 11) from wire module207.$reduce_xor$rtl.v:516$418_Y.
Removed top 8 bits (of 9) from wire module207.$reduce_xor$rtl.v:603$529_Y.
Removed top 22 bits (of 33) from wire module207.$ternary$rtl.v:470$358_Y.
Removed top 3 bits (of 12) from wire module207.$ternary$rtl.v:511$394_Y.
Removed top 3 bits (of 12) from wire module207.$ternary$rtl.v:511$395_Y.
Removed top 2 bits (of 21) from wire module207.$ternary$rtl.v:513$398_Y.
Removed top 1 bits (of 11) from wire module207.$ternary$rtl.v:514$403_Y.
Removed top 10 bits (of 12) from wire module207.$ternary$rtl.v:550$449_Y.
Removed top 13 bits (of 21) from wire module207.$ternary$rtl.v:583$487_Y.
Removed top 20 bits (of 21) from wire module207.$ternary$rtl.v:587$492_Y.
Removed top 23 bits (of 42) from wire module207.$ternary$rtl.v:587$499_Y.
Removed top 23 bits (of 42) from wire module207.$ternary$rtl.v:587$502_Y.
Removed top 7 bits (of 8) from wire module207.$ternary$rtl.v:612$535_Y.
Removed top 1 bits (of 10) from wire module207.$ternary$rtl.v:650$594_Y.
Removed top 4 bits (of 10) from wire module207.$ternary$rtl.v:657$597_Y.
Removed top 15 bits (of 16) from wire module207.$ternary$rtl.v:659$603_Y.
Removed top 5 bits (of 13) from wire module207.$ternary$rtl.v:664$609_Y.
Removed top 7 bits (of 17) from wire module207.wire218.
Removed top 3 bits (of 12) from wire module207.wire219.
Removed top 2 bits (of 3) from wire module207.wire253.
Removed top 9 bits (of 11) from port B of cell module30.$add$rtl.v:1445$1411 ($add).
Removed top 9 bits (of 10) from port A of cell module30.$xnor$rtl.v:1445$1413 ($xnor).
Removed top 2 bits (of 10) from port B of cell module30.$xnor$rtl.v:1445$1413 ($xnor).
Removed top 10 bits (of 11) from port B of cell module30.$ge$rtl.v:1445$1415 ($ge).
Removed top 3 bits (of 22) from port A of cell module30.$xnor$rtl.v:1452$1425 ($xnor).
Removed top 14 bits (of 22) from port B of cell module30.$xnor$rtl.v:1452$1425 ($xnor).
Removed top 10 bits (of 18) from port A of cell module30.$sub$rtl.v:1458$1431 ($sub).
Removed top 7 bits (of 18) from mux cell module30.$ternary$rtl.v:1459$1439 ($mux).
Removed top 7 bits (of 18) from mux cell module30.$ternary$rtl.v:1459$1437 ($mux).
Removed top 9 bits (of 11) from port A of cell module30.$neg$rtl.v:1461$1440 ($neg).
Removed top 3 bits (of 17) from port A of cell module30.$ne$rtl.v:1461$1443 ($ne).
Removed top 16 bits (of 17) from port B of cell module30.$ne$rtl.v:1461$1443 ($ne).
Removed top 12 bits (of 13) from port A of cell module30.$lt$rtl.v:1461$1444 ($lt).
Removed top 4 bits (of 5) from port A of cell module30.$xnor$rtl.v:1465$1454 ($xnor).
Removed top 4 bits (of 5) from port B of cell module30.$xnor$rtl.v:1465$1454 ($xnor).
Removed top 8 bits (of 9) from port B of cell module30.$le$rtl.v:1472$1465 ($le).
Removed top 11 bits (of 20) from mux cell module30.$ternary$rtl.v:1488$1473 ($mux).
Removed top 3 bits (of 8) from mux cell module30.$ternary$rtl.v:1490$1475 ($mux).
Removed top 12 bits (of 20) from port B of cell module30.$mul$rtl.v:1490$1476 ($mul).
Removed top 9 bits (of 20) from port Y of cell module30.$mul$rtl.v:1490$1476 ($mul).
Removed top 11 bits (of 20) from port A of cell module30.$or$rtl.v:1490$1479 ($or).
Removed top 13 bits (of 20) from port Y of cell module30.$or$rtl.v:1490$1479 ($or).
Removed top 2 bits (of 9) from port A of cell module30.$or$rtl.v:1490$1479 ($or).
Removed top 13 bits (of 20) from port B of cell module30.$or$rtl.v:1490$1479 ($or).
Removed top 10 bits (of 11) from port B of cell module30.$ne$rtl.v:1496$1487 ($ne).
Removed top 2 bits (of 3) from port A of cell module30.$gt$rtl.v:1498$1492 ($gt).
Removed top 7 bits (of 8) from port B of cell module30.$sub$rtl.v:1504$1505 ($sub).
Removed top 1 bits (of 8) from port Y of cell module30.$sub$rtl.v:1504$1505 ($sub).
Removed top 3 bits (of 8) from port A of cell module30.$sub$rtl.v:1504$1505 ($sub).
Removed top 7 bits (of 8) from port A of cell module30.$ge$rtl.v:1509$1509 ($ge).
Removed top 6 bits (of 7) from port A of cell module30.$or$rtl.v:1509$1510 ($or).
Removed top 1 bits (of 7) from port B of cell module30.$or$rtl.v:1509$1510 ($or).
Removed top 4 bits (of 7) from port Y of cell module30.$or$rtl.v:1509$1510 ($or).
Removed top 3 bits (of 6) from port B of cell module30.$or$rtl.v:1509$1510 ($or).
Removed top 3 bits (of 4) from port B of cell module30.$xnor$rtl.v:1511$1512 ($xnor).
Removed top 1 bits (of 4) from port Y of cell module30.$xnor$rtl.v:1511$1512 ($xnor).
Removed top 4 bits (of 22) from port B of cell module30.$xnor$rtl.v:1515$1513 ($xnor).
Removed top 8 bits (of 18) from mux cell module30.$ternary$rtl.v:1516$1516 ($mux).
Removed top 12 bits (of 14) from port A of cell module30.$ge$rtl.v:1523$1530 ($ge).
Removed top 7 bits (of 14) from port B of cell module30.$ge$rtl.v:1523$1530 ($ge).
Removed top 7 bits (of 8) from port B of cell module30.$sub$rtl.v:1521$1521 ($sub).
Removed top 11 bits (of 22) from port A of cell module30.$sub$rtl.v:1519$1519 ($sub).
Removed top 18 bits (of 22) from port Y of cell module30.$sub$rtl.v:1519$1519 ($sub).
Removed top 7 bits (of 11) from port A of cell module30.$sub$rtl.v:1519$1519 ($sub).
Removed top 18 bits (of 22) from port B of cell module30.$sub$rtl.v:1519$1519 ($sub).
Removed top 6 bits (of 8) from port B of cell module30.$ne$rtl.v:1521$1526 ($ne).
Removed top 3 bits (of 4) from port A of cell module30.$le$rtl.v:1526$1531 ($le).
Removed top 15 bits (of 16) from port B of cell module30.$xnor$rtl.v:1526$1535 ($xnor).
Removed top 14 bits (of 21) from FF cell module30.$procdff$2114 ($dff).
Removed top 1 bits (of 7) from FF cell module30.$procdff$2116 ($dff).
Removed top 20 bits (of 21) from FF cell module30.$procdff$2117 ($dff).
Removed top 17 bits (of 18) from FF cell module30.$procdff$2118 ($dff).
Removed top 12 bits (of 13) from FF cell module30.$procdff$2128 ($dff).
Removed top 6 bits (of 13) from mux cell module30.$ternary$rtl.v:1459$1435 ($mux).
Removed top 6 bits (of 13) from port B of cell module30.$shl$rtl.v:1459$1436 ($shl).
Removed top 7 bits (of 18) from port Y of cell module30.$shl$rtl.v:1459$1436 ($shl).
Removed top 2 bits (of 9) from mux cell module30.$ternary$rtl.v:1488$1473 ($mux).
Removed top 13 bits (of 20) from mux cell module30.$ternary$rtl.v:1490$1478 ($mux).
Removed top 7 bits (of 11) from port Y of cell module30.$sshr$rtl.v:1519$1518 ($sshr).
Removed top 2 bits (of 9) from port Y of cell module30.$shr$rtl.v:1488$1470 ($shr).
Removed top 4 bits (of 11) from port Y of cell module30.$mul$rtl.v:1490$1476 ($mul).
Removed top 12 bits (of 13) from wire module30.$0\reg47[12:0].
Removed top 17 bits (of 18) from wire module30.$0\reg62[17:0].
Removed top 20 bits (of 21) from wire module30.$0\reg63[20:0].
Removed top 12 bits (of 13) from wire module30.$ge$rtl.v:1465$1455_Y.
Removed top 10 bits (of 11) from wire module30.$logic_and$rtl.v:1445$1414_Y.
Removed top 7 bits (of 8) from wire module30.$logic_and$rtl.v:1521$1520_Y.
Removed top 9 bits (of 10) from wire module30.$logic_not$rtl.v:1445$1412_Y.
Removed top 16 bits (of 17) from wire module30.$logic_not$rtl.v:1461$1442_Y.
Removed top 8 bits (of 9) from wire module30.$logic_not$rtl.v:1472$1464_Y.
Removed top 13 bits (of 20) from wire module30.$mul$rtl.v:1490$1476_Y.
Removed top 2 bits (of 3) from wire module30.$ne$rtl.v:1499$1503_Y.
Removed top 13 bits (of 20) from wire module30.$or$rtl.v:1490$1479_Y.
Removed top 2 bits (of 3) from wire module30.$reduce_or$rtl.v:1498$1490_Y.
Removed top 4 bits (of 5) from wire module30.$reduce_xnor$rtl.v:1465$1453_Y.
Removed top 19 bits (of 20) from wire module30.$reduce_xnor$rtl.v:1493$1480_Y.
Removed top 7 bits (of 18) from wire module30.$shl$rtl.v:1459$1436_Y.
Removed top 7 bits (of 11) from wire module30.$sshr$rtl.v:1519$1518_Y.
Removed top 8 bits (of 18) from wire module30.$sub$rtl.v:1458$1431_Y.
Removed top 1 bits (of 8) from wire module30.$sub$rtl.v:1504$1505_Y.
Removed top 7 bits (of 18) from wire module30.$ternary$rtl.v:1459$1437_Y.
Removed top 8 bits (of 18) from wire module30.$ternary$rtl.v:1516$1516_Y.
Removed top 1 bits (of 5) from wire module30.$xnor$rtl.v:1465$1454_Y.
Removed top 12 bits (of 14) from wire module30.wire37.
Removed top 9 bits (of 11) from wire module30.wire40.
Removed top 3 bits (of 4) from wire module30.wire42.
Removed top 2 bits (of 4) from wire module30.wire43.
Removed top 10 bits (of 13) from wire module30.wire57.
Removed top 10 bits (of 20) from wire module30.wire58.
Removed top 5 bits (of 7) from wire module30.wire59.
Removed top 4 bits (of 14) from wire module30.wire60.
Removed top 6 bits (of 13) from mux cell module73.$ternary$rtl.v:1282$1268 ($mux).
Removed top 13 bits (of 26) from port B of cell module73.$xnor$rtl.v:1283$1269 ($xnor).
Removed top 17 bits (of 21) from mux cell module73.$ternary$rtl.v:1289$1284 ($mux).
Removed top 3 bits (of 21) from port B of cell module73.$xor$rtl.v:1296$1292 ($xor).
Removed top 8 bits (of 21) from port Y of cell module73.$xor$rtl.v:1296$1292 ($xor).
Removed top 8 bits (of 21) from port A of cell module73.$xor$rtl.v:1296$1292 ($xor).
Removed top 5 bits (of 18) from port B of cell module73.$xor$rtl.v:1296$1292 ($xor).
Removed top 16 bits (of 21) from port Y of cell module73.$or$rtl.v:1298$1293 ($or).
Removed top 16 bits (of 21) from port A of cell module73.$or$rtl.v:1298$1293 ($or).
Removed top 4 bits (of 9) from port B of cell module73.$or$rtl.v:1298$1293 ($or).
Removed top 12 bits (of 13) from port B of cell module73.$or$rtl.v:1307$1299 ($or).
Removed top 4 bits (of 8) from port Y of cell module73.$add$rtl.v:1309$1303 ($add).
Removed top 4 bits (of 8) from port B of cell module73.$add$rtl.v:1309$1303 ($add).
Removed top 13 bits (of 18) from port Y of cell module73.$xnor$rtl.v:1320$1314 ($xnor).
Removed top 4 bits (of 5) from port A of cell module73.$lt$rtl.v:1322$1318 ($lt).
Removed top 1 bits (of 9) from mux cell module73.$ternary$rtl.v:1327$1322 ($mux).
Removed top 15 bits (of 19) from port Y of cell module73.$neg$rtl.v:1330$1331 ($neg).
Removed top 15 bits (of 19) from port A of cell module73.$neg$rtl.v:1330$1331 ($neg).
Removed top 8 bits (of 19) from port A of cell module73.$not$rtl.v:1333$1333 ($not).
Removed top 8 bits (of 16) from mux cell module73.$ternary$rtl.v:1337$1341 ($mux).
Removed top 14 bits (of 17) from port A of cell module73.$ge$rtl.v:1339$1343 ($ge).
Removed top 8 bits (of 17) from port B of cell module73.$ge$rtl.v:1339$1343 ($ge).
Removed top 7 bits (of 13) from mux cell module73.$ternary$rtl.v:1340$1345 ($mux).
Removed top 1 bits (of 22) from port A of cell module73.$not$rtl.v:1353$1375 ($not).
Removed top 13 bits (of 21) from port B of cell module73.$eq$rtl.v:1350$1367 ($eq).
Removed top 18 bits (of 19) from port B of cell module73.$add$rtl.v:1350$1368 ($add).
Removed top 20 bits (of 21) from port B of cell module73.$lt$rtl.v:1350$1370 ($lt).
Removed top 1 bits (of 6) from port A of cell module73.$not$rtl.v:1357$1384 ($not).
Removed top 12 bits (of 21) from port A of cell module73.$le$rtl.v:1357$1380 ($le).
Removed top 17 bits (of 22) from mux cell module73.$ternary$rtl.v:1357$1382 ($mux).
Removed top 17 bits (of 22) from mux cell module73.$ternary$rtl.v:1357$1387 ($mux).
Removed top 20 bits (of 21) from port B of cell module73.$and$rtl.v:1358$1389 ($and).
Removed top 1 bits (of 21) from port Y of cell module73.$and$rtl.v:1358$1390 ($and).
Removed top 1 bits (of 21) from port B of cell module73.$and$rtl.v:1358$1390 ($and).
Removed top 17 bits (of 22) from port B of cell module73.$shr$rtl.v:1359$1392 ($shr).
Removed top 4 bits (of 12) from FF cell module73.$procdff$2129 ($dff).
Removed top 15 bits (of 16) from FF cell module73.$procdff$2130 ($dff).
Removed top 1 bits (of 9) from FF cell module73.$procdff$2132 ($dff).
Removed top 4 bits (of 5) from FF cell module73.$procdff$2133 ($dff).
Removed top 6 bits (of 14) from FF cell module73.$procdff$2135 ($dff).
Removed top 12 bits (of 21) from FF cell module73.$procdff$2136 ($dff).
Removed top 8 bits (of 21) from mux cell module73.$ternary$rtl.v:1296$1291 ($mux).
Removed top 1 bits (of 5) from mux cell module73.$ternary$rtl.v:1330$1330 ($mux).
Removed top 12 bits (of 21) from port B of cell module73.$eq$rtl.v:1335$1335 ($eq).
Removed top 1 bits (of 9) from mux cell module73.$ternary$rtl.v:1357$1379 ($mux).
Removed top 1 bits (of 9) from port A of cell module73.$le$rtl.v:1357$1380 ($le).
Removed top 1 bits (of 5) from mux cell module73.$ternary$rtl.v:1357$1382 ($mux).
Removed top 1 bits (of 21) from port Y of cell module73.$and$rtl.v:1358$1389 ($and).
Removed top 1 bits (of 21) from port A of cell module73.$and$rtl.v:1358$1389 ($and).
Removed top 8 bits (of 21) from port Y of cell module73.$shl$rtl.v:1296$1289 ($shl).
Removed top 6 bits (of 14) from wire module73.$0\reg86[13:0].
Removed top 4 bits (of 5) from wire module73.$0\reg93[4:0].
Removed top 15 bits (of 16) from wire module73.$0\reg96[15:0].
Removed top 4 bits (of 12) from wire module73.$0\reg97[11:0].
Removed top 4 bits (of 8) from wire module73.$add$rtl.v:1309$1303_Y.
Removed top 1 bits (of 21) from wire module73.$and$rtl.v:1358$1389_Y.
Removed top 18 bits (of 19) from wire module73.$eq$rtl.v:1350$1367_Y.
Removed top 12 bits (of 13) from wire module73.$ge$rtl.v:1339$1343_Y.
Removed top 6 bits (of 7) from wire module73.$lt$rtl.v:1322$1318_Y.
Removed top 8 bits (of 9) from wire module73.$reduce_xnor$rtl.v:1327$1320_Y.
Removed top 1 bits (of 9) from wire module73.$shr$rtl.v:1326$1319_Y.
Removed top 1 bits (of 9) from wire module73.$ternary$rtl.v:1327$1322_Y.
Removed top 1 bits (of 5) from wire module73.$ternary$rtl.v:1330$1330_Y.
Removed top 13 bits (of 18) from wire module73.$xnor$rtl.v:1320$1314_Y.
Removed top 15 bits (of 16) from wire module73.wire101.
Removed top 15 bits (of 17) from wire module73.wire90.
Removed top 17 bits (of 22) from wire module73.wire99.
Removed top 4 bits (of 8) from port A of cell top.$or$rtl.v:35$7 ($or).
Removed top 1 bits (of 4) from port A of cell top.$not$rtl.v:35$10 ($not).
Removed top 1 bits (of 9) from port A of cell top.$shr$rtl.v:38$15 ($shr).
Removed top 13 bits (of 19) from port B of cell top.$shr$rtl.v:38$15 ($shr).
Removed top 13 bits (of 19) from port A of cell top.$xnor$rtl.v:42$22 ($xnor).
Removed top 7 bits (of 27) from port A of cell top.$neg$rtl.v:42$25 ($neg).
Removed top 11 bits (of 27) from port Y of cell top.$neg$rtl.v:42$25 ($neg).
Removed top 4 bits (of 20) from port A of cell top.$neg$rtl.v:42$25 ($neg).
Removed top 4 bits (of 8) from mux cell top.$ternary$rtl.v:48$37 ($mux).
Removed top 11 bits (of 19) from mux cell top.$ternary$rtl.v:49$40 ($mux).
Removed top 6 bits (of 10) from port A of cell top.$sub$rtl.v:49$44 ($sub).
Removed top 6 bits (of 10) from port B of cell top.$sub$rtl.v:49$44 ($sub).
Removed top 17 bits (of 21) from mux cell top.$ternary$rtl.v:51$49 ($mux).
Removed top 17 bits (of 18) from port A of cell top.$le$rtl.v:51$45 ($le).
Removed top 1 bits (of 8) from mux cell top.$ternary$rtl.v:55$54 ($mux).
Removed top 1 bits (of 8) from port B of cell top.$shl$rtl.v:55$55 ($shl).
Removed top 3 bits (of 19) from port Y of cell top.$xnor$rtl.v:42$22 ($xnor).
Removed top 20 bits (of 21) from wire top.$ge$rtl.v:51$47_Y.
Removed top 3 bits (of 4) from wire top.$reduce_xnor$rtl.v:35$9_Y.
Removed top 7 bits (of 8) from wire top.$reduce_xnor$rtl.v:40$23_Y.
Removed top 18 bits (of 19) from wire top.$reduce_xor$rtl.v:42$20_Y.
Removed top 4 bits (of 8) from wire top.$ternary$rtl.v:48$37_Y.
Removed top 11 bits (of 19) from wire top.$ternary$rtl.v:49$40_Y.
Removed top 1 bits (of 8) from wire top.$ternary$rtl.v:55$54_Y.
Removed top 3 bits (of 19) from wire top.$xnor$rtl.v:42$22_Y.
Removed top 13 bits (of 19) from wire top.wire5.
Removed top 2 bits (of 7) from wire top.wire9.

2.8. Executing PEEPOPT pass (run peephole optimizers).

2.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module106..
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module207..
Finding unused cells or wires in module \module30..
Finding unused cells or wires in module \module73..
Finding unused cells or wires in module \top..
Removed 4 unused cells and 256 unused wires.
<suppressed ~10 debug messages>

2.10. Executing TECHMAP pass (map to technology primitives).

2.10.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

2.10.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~1544 debug messages>

2.11. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module module106:
  creating $macc model for $add$rtl.v:1171$1130 ($add).
  creating $macc model for $add$rtl.v:873$716 ($add).
  creating $macc model for $add$rtl.v:885$751 ($add).
  creating $macc model for $add$rtl.v:900$775 ($add).
  creating $macc model for $add$rtl.v:998$877 ($add).
  creating $macc model for $add$rtl.v:999$883 ($add).
  creating $macc model for $mul$rtl.v:1082$979 ($mul).
  creating $macc model for $mul$rtl.v:1170$1129 ($mul).
  creating $macc model for $mul$rtl.v:856$682 ($mul).
  creating $macc model for $mul$rtl.v:918$795 ($mul).
  creating $macc model for $mul$rtl.v:940$812 ($mul).
  creating $macc model for $mul$rtl.v:970$840 ($mul).
  creating $macc model for $neg$rtl.v:1020$904 ($neg).
  creating $macc model for $neg$rtl.v:1028$908 ($neg).
  creating $macc model for $neg$rtl.v:1068$965 ($neg).
  creating $macc model for $neg$rtl.v:1127$1061 ($neg).
  creating $macc model for $neg$rtl.v:1134$1072 ($neg).
  creating $macc model for $neg$rtl.v:1176$1138 ($neg).
  creating $macc model for $neg$rtl.v:856$680 ($neg).
  creating $macc model for $neg$rtl.v:857$683 ($neg).
  creating $macc model for $sub$rtl.v:1059$944 ($sub).
  creating $macc model for $sub$rtl.v:1164$1125 ($sub).
  creating $macc model for $sub$rtl.v:872$715 ($sub).
  creating $macc model for $sub$rtl.v:873$717 ($sub).
  creating $macc model for $sub$rtl.v:885$753 ($sub).
  creating $macc model for $sub$rtl.v:936$809 ($sub).
  merging $macc model for $add$rtl.v:873$716 into $sub$rtl.v:873$717.
  merging $macc model for $add$rtl.v:998$877 into $add$rtl.v:999$883.
  creating $alu model for $macc $sub$rtl.v:872$715.
  creating $alu model for $macc $sub$rtl.v:1164$1125.
  creating $alu model for $macc $sub$rtl.v:1059$944.
  creating $alu model for $macc $neg$rtl.v:857$683.
  creating $alu model for $macc $neg$rtl.v:856$680.
  creating $alu model for $macc $neg$rtl.v:1176$1138.
  creating $alu model for $macc $neg$rtl.v:1134$1072.
  creating $alu model for $macc $neg$rtl.v:1127$1061.
  creating $alu model for $macc $neg$rtl.v:1068$965.
  creating $alu model for $macc $neg$rtl.v:1028$908.
  creating $alu model for $macc $neg$rtl.v:1020$904.
  creating $alu model for $macc $add$rtl.v:999$883.
  creating $alu model for $macc $sub$rtl.v:936$809.
  creating $alu model for $macc $add$rtl.v:900$775.
  creating $alu model for $macc $add$rtl.v:885$751.
  creating $alu model for $macc $sub$rtl.v:885$753.
  creating $alu model for $macc $add$rtl.v:1171$1130.
  creating $macc cell for $mul$rtl.v:1082$979: $auto$alumacc.cc:354:replace_macc$2504
  creating $macc cell for $mul$rtl.v:970$840: $auto$alumacc.cc:354:replace_macc$2505
  creating $macc cell for $mul$rtl.v:940$812: $auto$alumacc.cc:354:replace_macc$2506
  creating $macc cell for $mul$rtl.v:918$795: $auto$alumacc.cc:354:replace_macc$2507
  creating $macc cell for $mul$rtl.v:856$682: $auto$alumacc.cc:354:replace_macc$2508
  creating $macc cell for $mul$rtl.v:1170$1129: $auto$alumacc.cc:354:replace_macc$2509
  creating $macc cell for $sub$rtl.v:873$717: $auto$alumacc.cc:354:replace_macc$2510
  creating $alu model for $ge$rtl.v:1058$941 ($ge): new $alu
  creating $alu model for $ge$rtl.v:1195$1169 ($ge): new $alu
  creating $alu model for $ge$rtl.v:854$677 ($ge): new $alu
  creating $alu model for $ge$rtl.v:962$832 ($ge): new $alu
  creating $alu model for $gt$rtl.v:1077$972 ($gt): new $alu
  creating $alu model for $gt$rtl.v:1096$993 ($gt): new $alu
  creating $alu model for $gt$rtl.v:1108$1025 ($gt): new $alu
  creating $alu model for $gt$rtl.v:1145$1090 ($gt): new $alu
  creating $alu model for $gt$rtl.v:1178$1143 ($gt): new $alu
  creating $alu model for $gt$rtl.v:1191$1164 ($gt): new $alu
  creating $alu model for $gt$rtl.v:871$707 ($gt): new $alu
  creating $alu model for $gt$rtl.v:885$754 ($gt): new $alu
  creating $alu model for $gt$rtl.v:933$808 ($gt): new $alu
  creating $alu model for $gt$rtl.v:962$835 ($gt): new $alu
  creating $alu model for $gt$rtl.v:999$882 ($gt): new $alu
  creating $alu model for $le$rtl.v:1000$884 ($le): new $alu
  creating $alu model for $le$rtl.v:1021$905 ($le): new $alu
  creating $alu model for $le$rtl.v:1021$907 ($le): new $alu
  creating $alu model for $le$rtl.v:1162$1113 ($le): new $alu
  creating $alu model for $le$rtl.v:860$691 ($le): new $alu
  creating $alu model for $le$rtl.v:883$742 ($le): new $alu
  creating $alu model for $le$rtl.v:948$822 ($le): new $alu
  creating $alu model for $le$rtl.v:992$861 ($le): new $alu
  creating $alu model for $lt$rtl.v:1108$1021 ($lt): new $alu
  creating $alu model for $lt$rtl.v:1150$1098 ($lt): merged with $le$rtl.v:883$742.
  creating $alu model for $lt$rtl.v:866$694 ($lt): new $alu
  creating $alu cell for $lt$rtl.v:866$694: $auto$alumacc.cc:474:replace_alu$2536
  creating $alu cell for $lt$rtl.v:1108$1021: $auto$alumacc.cc:474:replace_alu$2547
  creating $alu cell for $le$rtl.v:992$861: $auto$alumacc.cc:474:replace_alu$2554
  creating $alu cell for $le$rtl.v:948$822: $auto$alumacc.cc:474:replace_alu$2565
  creating $alu cell for $le$rtl.v:883$742, $lt$rtl.v:1150$1098: $auto$alumacc.cc:474:replace_alu$2578
  creating $alu cell for $le$rtl.v:860$691: $auto$alumacc.cc:474:replace_alu$2591
  creating $alu cell for $le$rtl.v:1162$1113: $auto$alumacc.cc:474:replace_alu$2604
  creating $alu cell for $le$rtl.v:1021$907: $auto$alumacc.cc:474:replace_alu$2617
  creating $alu cell for $le$rtl.v:1021$905: $auto$alumacc.cc:474:replace_alu$2626
  creating $alu cell for $le$rtl.v:1000$884: $auto$alumacc.cc:474:replace_alu$2641
  creating $alu cell for $gt$rtl.v:999$882: $auto$alumacc.cc:474:replace_alu$2652
  creating $alu cell for $gt$rtl.v:962$835: $auto$alumacc.cc:474:replace_alu$2663
  creating $alu cell for $gt$rtl.v:933$808: $auto$alumacc.cc:474:replace_alu$2668
  creating $alu cell for $gt$rtl.v:885$754: $auto$alumacc.cc:474:replace_alu$2679
  creating $alu cell for $gt$rtl.v:871$707: $auto$alumacc.cc:474:replace_alu$2690
  creating $alu cell for $gt$rtl.v:1191$1164: $auto$alumacc.cc:474:replace_alu$2701
  creating $alu cell for $gt$rtl.v:1178$1143: $auto$alumacc.cc:474:replace_alu$2706
  creating $alu cell for $gt$rtl.v:1145$1090: $auto$alumacc.cc:474:replace_alu$2711
  creating $alu cell for $gt$rtl.v:1108$1025: $auto$alumacc.cc:474:replace_alu$2722
  creating $alu cell for $gt$rtl.v:1096$993: $auto$alumacc.cc:474:replace_alu$2727
  creating $alu cell for $gt$rtl.v:1077$972: $auto$alumacc.cc:474:replace_alu$2732
  creating $alu cell for $ge$rtl.v:962$832: $auto$alumacc.cc:474:replace_alu$2737
  creating $alu cell for $ge$rtl.v:854$677: $auto$alumacc.cc:474:replace_alu$2746
  creating $alu cell for $ge$rtl.v:1195$1169: $auto$alumacc.cc:474:replace_alu$2755
  creating $alu cell for $ge$rtl.v:1058$941: $auto$alumacc.cc:474:replace_alu$2764
  creating $alu cell for $add$rtl.v:1171$1130: $auto$alumacc.cc:474:replace_alu$2777
  creating $alu cell for $sub$rtl.v:885$753: $auto$alumacc.cc:474:replace_alu$2780
  creating $alu cell for $add$rtl.v:885$751: $auto$alumacc.cc:474:replace_alu$2783
  creating $alu cell for $add$rtl.v:900$775: $auto$alumacc.cc:474:replace_alu$2786
  creating $alu cell for $sub$rtl.v:936$809: $auto$alumacc.cc:474:replace_alu$2789
  creating $alu cell for $add$rtl.v:999$883: $auto$alumacc.cc:474:replace_alu$2792
  creating $alu cell for $neg$rtl.v:1020$904: $auto$alumacc.cc:474:replace_alu$2795
  creating $alu cell for $neg$rtl.v:1028$908: $auto$alumacc.cc:474:replace_alu$2798
  creating $alu cell for $neg$rtl.v:1068$965: $auto$alumacc.cc:474:replace_alu$2801
  creating $alu cell for $neg$rtl.v:1127$1061: $auto$alumacc.cc:474:replace_alu$2804
  creating $alu cell for $neg$rtl.v:1134$1072: $auto$alumacc.cc:474:replace_alu$2807
  creating $alu cell for $neg$rtl.v:1176$1138: $auto$alumacc.cc:474:replace_alu$2810
  creating $alu cell for $neg$rtl.v:856$680: $auto$alumacc.cc:474:replace_alu$2813
  creating $alu cell for $neg$rtl.v:857$683: $auto$alumacc.cc:474:replace_alu$2816
  creating $alu cell for $sub$rtl.v:1059$944: $auto$alumacc.cc:474:replace_alu$2819
  creating $alu cell for $sub$rtl.v:1164$1125: $auto$alumacc.cc:474:replace_alu$2822
  creating $alu cell for $sub$rtl.v:872$715: $auto$alumacc.cc:474:replace_alu$2825
  created 42 $alu and 7 $macc cells.
Extracting $alu and $macc cells in module module13:
  creating $macc model for $add$rtl.v:191$155 ($add).
  creating $macc model for $add$rtl.v:221$192 ($add).
  creating $macc model for $mul$rtl.v:135$73 ($mul).
  creating $macc model for $mul$rtl.v:181$135 ($mul).
  creating $macc model for $mul$rtl.v:202$176 ($mul).
  creating $macc model for $mul$rtl.v:236$221 ($mul).
  creating $macc model for $neg$rtl.v:197$167 ($neg).
  creating $macc model for $neg$rtl.v:223$201 ($neg).
  creating $alu model for $macc $neg$rtl.v:223$201.
  creating $alu model for $macc $neg$rtl.v:197$167.
  creating $alu model for $macc $add$rtl.v:221$192.
  creating $alu model for $macc $add$rtl.v:191$155.
  creating $macc cell for $mul$rtl.v:181$135: $auto$alumacc.cc:354:replace_macc$2828
  creating $macc cell for $mul$rtl.v:135$73: $auto$alumacc.cc:354:replace_macc$2829
  creating $macc cell for $mul$rtl.v:236$221: $auto$alumacc.cc:354:replace_macc$2830
  creating $macc cell for $mul$rtl.v:202$176: $auto$alumacc.cc:354:replace_macc$2831
  creating $alu model for $ge$rtl.v:135$71 ($ge): new $alu
  creating $alu model for $gt$rtl.v:217$191 ($gt): new $alu
  creating $alu cell for $gt$rtl.v:217$191: $auto$alumacc.cc:474:replace_alu$2834
  creating $alu cell for $ge$rtl.v:135$71: $auto$alumacc.cc:474:replace_alu$2839
  creating $alu cell for $add$rtl.v:191$155: $auto$alumacc.cc:474:replace_alu$2848
  creating $alu cell for $add$rtl.v:221$192: $auto$alumacc.cc:474:replace_alu$2851
  creating $alu cell for $neg$rtl.v:197$167: $auto$alumacc.cc:474:replace_alu$2854
  creating $alu cell for $neg$rtl.v:223$201: $auto$alumacc.cc:474:replace_alu$2857
  created 6 $alu and 4 $macc cells.
Extracting $alu and $macc cells in module module207:
  creating $macc model for $add$rtl.v:401$274 ($add).
  creating $macc model for $add$rtl.v:580$481 ($add).
  creating $macc model for $add$rtl.v:600$524 ($add).
  creating $macc model for $add$rtl.v:632$561 ($add).
  creating $macc model for $add$rtl.v:658$598 ($add).
  creating $macc model for $mul$rtl.v:456$323 ($mul).
  creating $macc model for $mul$rtl.v:462$342 ($mul).
  creating $macc model for $mul$rtl.v:470$355 ($mul).
  creating $macc model for $mul$rtl.v:514$406 ($mul).
  creating $macc model for $mul$rtl.v:632$557 ($mul).
  creating $macc model for $neg$rtl.v:456$318 ($neg).
  creating $macc model for $neg$rtl.v:485$367 ($neg).
  creating $macc model for $neg$rtl.v:642$576 ($neg).
  creating $macc model for $sub$rtl.v:391$250 ($sub).
  creating $macc model for $sub$rtl.v:635$569 ($sub).
  creating $macc model for $sub$rtl.v:648$587 ($sub).
  creating $alu model for $macc $sub$rtl.v:648$587.
  creating $alu model for $macc $sub$rtl.v:635$569.
  creating $alu model for $macc $sub$rtl.v:391$250.
  creating $alu model for $macc $neg$rtl.v:642$576.
  creating $alu model for $macc $neg$rtl.v:485$367.
  creating $alu model for $macc $neg$rtl.v:456$318.
  creating $alu model for $macc $add$rtl.v:658$598.
  creating $alu model for $macc $add$rtl.v:632$561.
  creating $alu model for $macc $add$rtl.v:600$524.
  creating $alu model for $macc $add$rtl.v:580$481.
  creating $alu model for $macc $add$rtl.v:401$274.
  creating $macc cell for $mul$rtl.v:632$557: $auto$alumacc.cc:354:replace_macc$2860
  creating $macc cell for $mul$rtl.v:514$406: $auto$alumacc.cc:354:replace_macc$2861
  creating $macc cell for $mul$rtl.v:470$355: $auto$alumacc.cc:354:replace_macc$2862
  creating $macc cell for $mul$rtl.v:462$342: $auto$alumacc.cc:354:replace_macc$2863
  creating $macc cell for $mul$rtl.v:456$323: $auto$alumacc.cc:354:replace_macc$2864
  creating $alu model for $ge$rtl.v:600$526 ($ge): new $alu
  creating $alu model for $ge$rtl.v:612$536 ($ge): new $alu
  creating $alu model for $ge$rtl.v:634$565 ($ge): new $alu
  creating $alu model for $gt$rtl.v:462$340 ($gt): new $alu
  creating $alu model for $gt$rtl.v:546$440 ($gt): new $alu
  creating $alu model for $gt$rtl.v:592$503 ($gt): new $alu
  creating $alu model for $le$rtl.v:396$262 ($le): new $alu
  creating $alu model for $le$rtl.v:396$263 ($le): new $alu
  creating $alu model for $le$rtl.v:407$278 ($le): new $alu
  creating $alu model for $le$rtl.v:513$399 ($le): new $alu
  creating $alu model for $le$rtl.v:551$452 ($le): new $alu
  creating $alu model for $le$rtl.v:637$570 ($le): new $alu
  creating $alu model for $lt$rtl.v:408$279 ($lt): new $alu
  creating $alu model for $lt$rtl.v:449$300 ($lt): new $alu
  creating $alu model for $lt$rtl.v:455$317 ($lt): new $alu
  creating $alu model for $lt$rtl.v:470$354 ($lt): new $alu
  creating $alu model for $lt$rtl.v:526$419 ($lt): new $alu
  creating $alu model for $lt$rtl.v:584$489 ($lt): new $alu
  creating $alu model for $lt$rtl.v:594$507 ($lt): new $alu
  creating $alu model for $lt$rtl.v:597$515 ($lt): new $alu
  creating $alu model for $lt$rtl.v:649$589 ($lt): new $alu
  creating $alu cell for $lt$rtl.v:649$589: $auto$alumacc.cc:474:replace_alu$2886
  creating $alu cell for $lt$rtl.v:597$515: $auto$alumacc.cc:474:replace_alu$2897
  creating $alu cell for $lt$rtl.v:594$507: $auto$alumacc.cc:474:replace_alu$2902
  creating $alu cell for $lt$rtl.v:584$489: $auto$alumacc.cc:474:replace_alu$2913
  creating $alu cell for $lt$rtl.v:526$419: $auto$alumacc.cc:474:replace_alu$2924
  creating $alu cell for $lt$rtl.v:470$354: $auto$alumacc.cc:474:replace_alu$2929
  creating $alu cell for $lt$rtl.v:455$317: $auto$alumacc.cc:474:replace_alu$2934
  creating $alu cell for $lt$rtl.v:449$300: $auto$alumacc.cc:474:replace_alu$2939
  creating $alu cell for $lt$rtl.v:408$279: $auto$alumacc.cc:474:replace_alu$2944
  creating $alu cell for $le$rtl.v:637$570: $auto$alumacc.cc:474:replace_alu$2949
  creating $alu cell for $le$rtl.v:551$452: $auto$alumacc.cc:474:replace_alu$2962
  creating $alu cell for $le$rtl.v:513$399: $auto$alumacc.cc:474:replace_alu$2975
  creating $alu cell for $le$rtl.v:407$278: $auto$alumacc.cc:474:replace_alu$2988
  creating $alu cell for $le$rtl.v:396$263: $auto$alumacc.cc:474:replace_alu$3001
  creating $alu cell for $le$rtl.v:396$262: $auto$alumacc.cc:474:replace_alu$3014
  creating $alu cell for $gt$rtl.v:592$503: $auto$alumacc.cc:474:replace_alu$3023
  creating $alu cell for $gt$rtl.v:546$440: $auto$alumacc.cc:474:replace_alu$3028
  creating $alu cell for $gt$rtl.v:462$340: $auto$alumacc.cc:474:replace_alu$3041
  creating $alu cell for $ge$rtl.v:634$565: $auto$alumacc.cc:474:replace_alu$3048
  creating $alu cell for $ge$rtl.v:612$536: $auto$alumacc.cc:474:replace_alu$3061
  creating $alu cell for $ge$rtl.v:600$526: $auto$alumacc.cc:474:replace_alu$3074
  creating $alu cell for $add$rtl.v:401$274: $auto$alumacc.cc:474:replace_alu$3083
  creating $alu cell for $add$rtl.v:580$481: $auto$alumacc.cc:474:replace_alu$3086
  creating $alu cell for $add$rtl.v:600$524: $auto$alumacc.cc:474:replace_alu$3089
  creating $alu cell for $add$rtl.v:632$561: $auto$alumacc.cc:474:replace_alu$3092
  creating $alu cell for $add$rtl.v:658$598: $auto$alumacc.cc:474:replace_alu$3095
  creating $alu cell for $neg$rtl.v:456$318: $auto$alumacc.cc:474:replace_alu$3098
  creating $alu cell for $neg$rtl.v:485$367: $auto$alumacc.cc:474:replace_alu$3101
  creating $alu cell for $neg$rtl.v:642$576: $auto$alumacc.cc:474:replace_alu$3104
  creating $alu cell for $sub$rtl.v:391$250: $auto$alumacc.cc:474:replace_alu$3107
  creating $alu cell for $sub$rtl.v:635$569: $auto$alumacc.cc:474:replace_alu$3110
  creating $alu cell for $sub$rtl.v:648$587: $auto$alumacc.cc:474:replace_alu$3113
  created 32 $alu and 5 $macc cells.
Extracting $alu and $macc cells in module module30:
  creating $macc model for $add$rtl.v:1445$1411 ($add).
  creating $macc model for $mul$rtl.v:1490$1476 ($mul).
  creating $macc model for $neg$rtl.v:1461$1440 ($neg).
  creating $macc model for $sub$rtl.v:1458$1431 ($sub).
  creating $macc model for $sub$rtl.v:1504$1505 ($sub).
  creating $macc model for $sub$rtl.v:1519$1519 ($sub).
  creating $macc model for $sub$rtl.v:1521$1521 ($sub).
  creating $alu model for $macc $sub$rtl.v:1521$1521.
  creating $alu model for $macc $sub$rtl.v:1519$1519.
  creating $alu model for $macc $sub$rtl.v:1504$1505.
  creating $alu model for $macc $sub$rtl.v:1458$1431.
  creating $alu model for $macc $neg$rtl.v:1461$1440.
  creating $alu model for $macc $add$rtl.v:1445$1411.
  creating $macc cell for $mul$rtl.v:1490$1476: $auto$alumacc.cc:354:replace_macc$3116
  creating $alu model for $ge$rtl.v:1445$1415 ($ge): new $alu
  creating $alu model for $ge$rtl.v:1465$1455 ($ge): new $alu
  creating $alu model for $ge$rtl.v:1509$1509 ($ge): new $alu
  creating $alu model for $ge$rtl.v:1523$1530 ($ge): new $alu
  creating $alu model for $gt$rtl.v:1498$1492 ($gt): new $alu
  creating $alu model for $le$rtl.v:1446$1416 ($le): new $alu
  creating $alu model for $le$rtl.v:1472$1465 ($le): new $alu
  creating $alu model for $le$rtl.v:1526$1531 ($le): new $alu
  creating $alu model for $lt$rtl.v:1461$1444 ($lt): new $alu
  creating $alu cell for $lt$rtl.v:1461$1444: $auto$alumacc.cc:474:replace_alu$3126
  creating $alu cell for $le$rtl.v:1526$1531: $auto$alumacc.cc:474:replace_alu$3131
  creating $alu cell for $le$rtl.v:1472$1465: $auto$alumacc.cc:474:replace_alu$3140
  creating $alu cell for $le$rtl.v:1446$1416: $auto$alumacc.cc:474:replace_alu$3153
  creating $alu cell for $gt$rtl.v:1498$1492: $auto$alumacc.cc:474:replace_alu$3166
  creating $alu cell for $ge$rtl.v:1523$1530: $auto$alumacc.cc:474:replace_alu$3177
  creating $alu cell for $ge$rtl.v:1509$1509: $auto$alumacc.cc:474:replace_alu$3190
  creating $alu cell for $ge$rtl.v:1465$1455: $auto$alumacc.cc:474:replace_alu$3203
  creating $alu cell for $ge$rtl.v:1445$1415: $auto$alumacc.cc:474:replace_alu$3212
  creating $alu cell for $add$rtl.v:1445$1411: $auto$alumacc.cc:474:replace_alu$3221
  creating $alu cell for $neg$rtl.v:1461$1440: $auto$alumacc.cc:474:replace_alu$3224
  creating $alu cell for $sub$rtl.v:1458$1431: $auto$alumacc.cc:474:replace_alu$3227
  creating $alu cell for $sub$rtl.v:1504$1505: $auto$alumacc.cc:474:replace_alu$3230
  creating $alu cell for $sub$rtl.v:1519$1519: $auto$alumacc.cc:474:replace_alu$3233
  creating $alu cell for $sub$rtl.v:1521$1521: $auto$alumacc.cc:474:replace_alu$3236
  created 15 $alu and 1 $macc cells.
Extracting $alu and $macc cells in module module73:
  creating $macc model for $add$rtl.v:1309$1303 ($add).
  creating $macc model for $add$rtl.v:1350$1368 ($add).
  creating $macc model for $neg$rtl.v:1285$1270 ($neg).
  creating $macc model for $neg$rtl.v:1330$1331 ($neg).
  creating $alu model for $macc $neg$rtl.v:1330$1331.
  creating $alu model for $macc $neg$rtl.v:1285$1270.
  creating $alu model for $macc $add$rtl.v:1350$1368.
  creating $alu model for $macc $add$rtl.v:1309$1303.
  creating $alu model for $ge$rtl.v:1279$1260 ($ge): new $alu
  creating $alu model for $ge$rtl.v:1339$1343 ($ge): new $alu
  creating $alu model for $gt$rtl.v:1304$1295 ($gt): new $alu
  creating $alu model for $le$rtl.v:1289$1281 ($le): new $alu
  creating $alu model for $le$rtl.v:1357$1380 ($le): new $alu
  creating $alu model for $lt$rtl.v:1279$1263 ($lt): new $alu
  creating $alu model for $lt$rtl.v:1322$1318 ($lt): new $alu
  creating $alu model for $lt$rtl.v:1329$1325 ($lt): new $alu
  creating $alu model for $lt$rtl.v:1350$1370 ($lt): new $alu
  creating $alu model for $lt$rtl.v:1357$1385 ($lt): new $alu
  creating $alu cell for $lt$rtl.v:1357$1385: $auto$alumacc.cc:474:replace_alu$3249
  creating $alu cell for $lt$rtl.v:1350$1370: $auto$alumacc.cc:474:replace_alu$3260
  creating $alu cell for $lt$rtl.v:1329$1325: $auto$alumacc.cc:474:replace_alu$3271
  creating $alu cell for $lt$rtl.v:1322$1318: $auto$alumacc.cc:474:replace_alu$3282
  creating $alu cell for $lt$rtl.v:1279$1263: $auto$alumacc.cc:474:replace_alu$3287
  creating $alu cell for $le$rtl.v:1357$1380: $auto$alumacc.cc:474:replace_alu$3292
  creating $alu cell for $le$rtl.v:1289$1281: $auto$alumacc.cc:474:replace_alu$3301
  creating $alu cell for $gt$rtl.v:1304$1295: $auto$alumacc.cc:474:replace_alu$3314
  creating $alu cell for $ge$rtl.v:1339$1343: $auto$alumacc.cc:474:replace_alu$3325
  creating $alu cell for $ge$rtl.v:1279$1260: $auto$alumacc.cc:474:replace_alu$3340
  creating $alu cell for $add$rtl.v:1309$1303: $auto$alumacc.cc:474:replace_alu$3353
  creating $alu cell for $add$rtl.v:1350$1368: $auto$alumacc.cc:474:replace_alu$3356
  creating $alu cell for $neg$rtl.v:1285$1270: $auto$alumacc.cc:474:replace_alu$3359
  creating $alu cell for $neg$rtl.v:1330$1331: $auto$alumacc.cc:474:replace_alu$3362
  created 14 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module top:
  creating $macc model for $neg$rtl.v:42$25 ($neg).
  creating $macc model for $sub$rtl.v:49$44 ($sub).
  creating $macc model for $sub$rtl.v:55$56 ($sub).
  creating $alu model for $macc $sub$rtl.v:55$56.
  creating $alu model for $macc $sub$rtl.v:49$44.
  creating $alu model for $macc $neg$rtl.v:42$25.
  creating $alu model for $ge$rtl.v:51$47 ($ge): new $alu
  creating $alu model for $le$rtl.v:51$45 ($le): new $alu
  creating $alu cell for $le$rtl.v:51$45: $auto$alumacc.cc:474:replace_alu$3367
  creating $alu cell for $ge$rtl.v:51$47: $auto$alumacc.cc:474:replace_alu$3376
  creating $alu cell for $neg$rtl.v:42$25: $auto$alumacc.cc:474:replace_alu$3389
  creating $alu cell for $sub$rtl.v:49$44: $auto$alumacc.cc:474:replace_alu$3392
  creating $alu cell for $sub$rtl.v:55$56: $auto$alumacc.cc:474:replace_alu$3395
  created 5 $alu and 0 $macc cells.

2.12. Executing SHARE pass (SAT-based resource sharing).
Found 7 cells in module module106 that may be considered for resource sharing.
  Analyzing resource sharing options for $sshr$rtl.v:985$854 ($sshr):
    Found 1 activation_patterns using ctrl signal $procmux$1758_CMP.
    No candidates found.
  Analyzing resource sharing options for $sshl$rtl.v:1060$948 ($sshl):
    Found 1 activation_patterns using ctrl signal $procmux$1701_CMP.
    No candidates found.
  Analyzing resource sharing options for $sshl$rtl.v:1015$896 ($sshl):
    Found 1 activation_patterns using ctrl signal { $procmux$1758_CMP $reduce_bool$rtl.v:1016$897_Y }.
    No candidates found.
  Analyzing resource sharing options for $shr$rtl.v:1106$1015 ($shr):
    Found 1 activation_patterns using ctrl signal $reduce_bool$rtl.v:1106$1016_Y.
    No candidates found.
  Analyzing resource sharing options for $shr$rtl.v:1083$980 ($shr):
    Found 1 activation_patterns using ctrl signal { $procmux$1725_CMP $procmux$1701_CMP $reduce_bool$rtl.v:1083$981_Y $reduce_and$rtl.v:1081$975_Y }.
    No candidates found.
  Analyzing resource sharing options for $shl$rtl.v:962$833 ($shl):
    Found 1 activation_patterns using ctrl signal { $ne$rtl.v:948$823_Y \reg133 [5] }.
    No candidates found.
  Analyzing resource sharing options for $shl$rtl.v:1143$1084 ($shl):
    Found 1 activation_patterns using ctrl signal { $procmux$1665_CMP $procmux$1662_CMP }.
    No candidates found.
Found 9 cells in module module207 that may be considered for resource sharing.
  Analyzing resource sharing options for $sshr$rtl.v:650$592 ($sshr):
    Found 1 activation_patterns using ctrl signal { $procmux$1914_CMP $procmux$1912_CMP $reduce_bool$rtl.v:650$593_Y }.
    No candidates found.
  Analyzing resource sharing options for $sshr$rtl.v:649$588 ($sshr):
    Found 1 activation_patterns using ctrl signal { $procmux$1914_CMP $procmux$1912_CMP $reduce_bool$rtl.v:649$590_Y }.
    No candidates found.
  Analyzing resource sharing options for $sshl$rtl.v:631$556 ($sshl):
    Found 1 activation_patterns using ctrl signal $procmux$1914_CMP.
    No candidates found.
  Analyzing resource sharing options for $sshl$rtl.v:629$543 ($sshl):
    Found 1 activation_patterns using ctrl signal { $reduce_bool$rtl.v:629$552_Y $reduce_bool$rtl.v:629$544_Y }.
    No candidates found.
  Analyzing resource sharing options for $sshl$rtl.v:597$516 ($sshl):
    Found 1 activation_patterns using ctrl signal $reduce_bool$rtl.v:598$517_Y.
    No candidates found.
  Analyzing resource sharing options for $shr$rtl.v:587$494 ($shr):
    Found 1 activation_patterns using ctrl signal { $auto$rtlil.cc:1832:Not$2923 $procmux$1953_CMP $reduce_bool$rtl.v:587$500_Y }.
    No candidates found.
  Analyzing resource sharing options for $shr$rtl.v:587$493 ($shr):
    Found 1 activation_patterns using ctrl signal { $auto$rtlil.cc:1832:Not$2923 $procmux$1953_CMP $reduce_bool$rtl.v:587$500_Y }.
    No candidates found.
  Analyzing resource sharing options for $shl$rtl.v:610$531 ($shl):
    Found 1 activation_patterns using ctrl signal { $procmux$1953_CMP $logic_not$rtl.v:483$360_Y }.
    No candidates found.
  Analyzing resource sharing options for $shl$rtl.v:583$488 ($shl):
    Found 1 activation_patterns using ctrl signal $procmux$1953_CMP.
    No candidates found.
Found 2 cells in module module30 that may be considered for resource sharing.
  Analyzing resource sharing options for $shl$rtl.v:1459$1436 ($shl):
    Found 1 activation_patterns using ctrl signal { $reduce_bool$rtl.v:1459$1438_Y $reduce_and$rtl.v:1457$1428_Y }.
    No candidates found.
  Analyzing resource sharing options for $shl$rtl.v:1458$1430 ($shl):
    Found 1 activation_patterns using ctrl signal { $reduce_bool$rtl.v:1459$1438_Y $reduce_and$rtl.v:1457$1428_Y }.
    No candidates found.
Found 4 cells in module module73 that may be considered for resource sharing.
  Analyzing resource sharing options for $sshr$rtl.v:1284$1271 ($sshr):
    Found 1 activation_patterns using ctrl signal { $procmux$1608_CMP $procmux$1606_CMP $reduce_bool$rtl.v:1285$1272_Y }.
    No candidates found.
  Analyzing resource sharing options for $shr$rtl.v:1326$1319 ($shr):
    Found 1 activation_patterns using ctrl signal $reduce_bool$rtl.v:1327$1323_Y.
    No candidates found.
  Analyzing resource sharing options for $shl$rtl.v:1307$1301 ($shl):
    Found 1 activation_patterns using ctrl signal $procmux$1608_CMP.
    No candidates found.
  Analyzing resource sharing options for $shl$rtl.v:1296$1289 ($shl):
    Found 1 activation_patterns using ctrl signal { $procmux$1608_CMP $procmux$1606_CMP $reduce_and$rtl.v:1295$1288_Y }.
    No candidates found.

2.13. Executing OPT pass (performing simple optimizations).

2.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module module106.
<suppressed ~18 debug messages>
Optimizing module module13.
Optimizing module module207.
<suppressed ~43 debug messages>
Optimizing module module30.
<suppressed ~13 debug messages>
Optimizing module module73.
Optimizing module top.
<suppressed ~2 debug messages>

2.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module106'.
<suppressed ~3 debug messages>
Finding identical cells in module `\module13'.
Finding identical cells in module `\module207'.
<suppressed ~9 debug messages>
Finding identical cells in module `\module30'.
Finding identical cells in module `\module73'.
Finding identical cells in module `\top'.
Removed a total of 4 cells.

2.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module106..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $ternary$rtl.v:993$865.
    dead port 2/2 on $mux $ternary$rtl.v:993$865.
    dead port 1/2 on $mux $ternary$rtl.v:993$869.
    dead port 2/2 on $mux $ternary$rtl.v:993$869.
Running muxtree optimizer on module \module13..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module207..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$2000.
    dead port 2/2 on $mux $procmux$2000.
    dead port 1/2 on $mux $procmux$2006.
    dead port 2/2 on $mux $procmux$2006.
    dead port 1/2 on $mux $procmux$2012.
    dead port 2/2 on $mux $procmux$2012.
    dead port 1/2 on $mux $procmux$2018.
    dead port 2/2 on $mux $procmux$2018.
    dead port 1/2 on $mux $ternary$rtl.v:454$314.
    dead port 2/2 on $mux $ternary$rtl.v:454$314.
    dead port 1/2 on $mux $ternary$rtl.v:464$347.
    dead port 2/2 on $mux $ternary$rtl.v:464$347.
    dead port 1/2 on $mux $ternary$rtl.v:470$358.
    dead port 2/2 on $mux $ternary$rtl.v:470$358.
    dead port 1/2 on $mux $ternary$rtl.v:511$394.
    dead port 2/2 on $mux $ternary$rtl.v:511$394.
    dead port 1/2 on $mux $ternary$rtl.v:511$395.
    dead port 2/2 on $mux $ternary$rtl.v:511$395.
    dead port 1/2 on $mux $ternary$rtl.v:527$421.
    dead port 2/2 on $mux $ternary$rtl.v:527$421.
Running muxtree optimizer on module \module30..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module73..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 24 multiplexer ports.
<suppressed ~223 debug messages>

2.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module106.
    New input vector for $reduce_or cell $reduce_or$rtl.v:882$734: { \reg115 [0] \reg115 [1] }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$2576: { $auto$rtlil.cc:1832:Not$2575 $auto$rtlil.cc:1835:ReduceAnd$2569 }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$2602: { $auto$rtlil.cc:1832:Not$2601 $auto$rtlil.cc:1835:ReduceAnd$2595 }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$2615: { $auto$rtlil.cc:1832:Not$2614 $auto$rtlil.cc:1835:ReduceAnd$2608 }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$2624: { $auto$rtlil.cc:1832:Not$2621 $auto$alumacc.cc:490:replace_alu$2618 }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$2650: { $auto$rtlil.cc:1864:Xor$2647 $auto$rtlil.cc:1835:ReduceAnd$2649 }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$2744: { $auto$rtlil.cc:1832:Not$2741 $auto$rtlil.cc:1835:ReduceAnd$2743 }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$2753: { $auto$rtlil.cc:1832:Not$2750 $auto$rtlil.cc:1835:ReduceAnd$2752 }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$2775: { $auto$rtlil.cc:1832:Not$2774 $auto$rtlil.cc:1835:ReduceAnd$2768 }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2767: { $auto$alumacc.cc:490:replace_alu$2765 [0] $auto$alumacc.cc:490:replace_alu$2765 [1] $auto$alumacc.cc:490:replace_alu$2765 [2] $auto$alumacc.cc:490:replace_alu$2765 [3] $auto$alumacc.cc:490:replace_alu$2765 [4] $auto$alumacc.cc:490:replace_alu$2765 [5] $auto$alumacc.cc:490:replace_alu$2765 [6] $auto$alumacc.cc:490:replace_alu$2765 [7] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2742: { $auto$alumacc.cc:490:replace_alu$2738 [0] $auto$alumacc.cc:490:replace_alu$2738 [1] $auto$alumacc.cc:490:replace_alu$2738 [2] $auto$alumacc.cc:490:replace_alu$2738 [3] $auto$alumacc.cc:490:replace_alu$2738 [4] $auto$alumacc.cc:490:replace_alu$2738 [5] $auto$alumacc.cc:490:replace_alu$2738 [6] $auto$alumacc.cc:490:replace_alu$2738 [7] $auto$alumacc.cc:490:replace_alu$2738 [8] $auto$alumacc.cc:490:replace_alu$2738 [9] $auto$alumacc.cc:490:replace_alu$2738 [10] $auto$alumacc.cc:490:replace_alu$2738 [11] $auto$alumacc.cc:490:replace_alu$2738 [12] $auto$alumacc.cc:490:replace_alu$2738 [13] $auto$alumacc.cc:490:replace_alu$2738 [14] $auto$alumacc.cc:490:replace_alu$2738 [15] $auto$alumacc.cc:490:replace_alu$2738 [16] $auto$alumacc.cc:490:replace_alu$2738 [17] $auto$alumacc.cc:490:replace_alu$2738 [18] $auto$alumacc.cc:490:replace_alu$2738 [19] $auto$alumacc.cc:490:replace_alu$2738 [20] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2751: { $auto$alumacc.cc:490:replace_alu$2747 [0] $auto$alumacc.cc:490:replace_alu$2747 [1] $auto$alumacc.cc:490:replace_alu$2747 [2] $auto$alumacc.cc:490:replace_alu$2747 [3] $auto$alumacc.cc:490:replace_alu$2747 [4] $auto$alumacc.cc:490:replace_alu$2747 [5] $auto$alumacc.cc:490:replace_alu$2747 [6] $auto$alumacc.cc:490:replace_alu$2747 [7] $auto$alumacc.cc:490:replace_alu$2747 [8] $auto$alumacc.cc:490:replace_alu$2747 [9] $auto$alumacc.cc:490:replace_alu$2747 [10] $auto$alumacc.cc:490:replace_alu$2747 [11] $auto$alumacc.cc:490:replace_alu$2747 [12] $auto$alumacc.cc:490:replace_alu$2747 [13] $auto$alumacc.cc:490:replace_alu$2747 [14] $auto$alumacc.cc:490:replace_alu$2747 [15] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2760: { $auto$alumacc.cc:490:replace_alu$2756 [0] $auto$alumacc.cc:490:replace_alu$2756 [1] $auto$alumacc.cc:490:replace_alu$2756 [2] $auto$alumacc.cc:490:replace_alu$2756 [3] $auto$alumacc.cc:490:replace_alu$2756 [4] $auto$alumacc.cc:490:replace_alu$2756 [5] $auto$alumacc.cc:490:replace_alu$2756 [6] $auto$alumacc.cc:490:replace_alu$2756 [7] $auto$alumacc.cc:490:replace_alu$2756 [8] $auto$alumacc.cc:490:replace_alu$2756 [9] $auto$alumacc.cc:490:replace_alu$2756 [10] $auto$alumacc.cc:490:replace_alu$2756 [11] $auto$alumacc.cc:490:replace_alu$2756 [12] $auto$alumacc.cc:490:replace_alu$2756 [13] $auto$alumacc.cc:490:replace_alu$2756 [14] $auto$alumacc.cc:490:replace_alu$2756 [15] $auto$alumacc.cc:490:replace_alu$2756 [16] $auto$alumacc.cc:490:replace_alu$2756 [17] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2539: { $auto$alumacc.cc:490:replace_alu$2537 [0] $auto$alumacc.cc:490:replace_alu$2537 [1] $auto$alumacc.cc:490:replace_alu$2537 [2] $auto$alumacc.cc:490:replace_alu$2537 [3] $auto$alumacc.cc:490:replace_alu$2537 [4] $auto$alumacc.cc:490:replace_alu$2537 [5] $auto$alumacc.cc:490:replace_alu$2537 [6] $auto$alumacc.cc:490:replace_alu$2537 [7] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2561: { $auto$alumacc.cc:490:replace_alu$2555 [0] $auto$alumacc.cc:490:replace_alu$2555 [1] $auto$alumacc.cc:490:replace_alu$2555 [2] $auto$alumacc.cc:490:replace_alu$2555 [3] $auto$alumacc.cc:490:replace_alu$2555 [4] $auto$alumacc.cc:490:replace_alu$2555 [5] $auto$alumacc.cc:490:replace_alu$2555 [6] $auto$alumacc.cc:490:replace_alu$2555 [7] $auto$alumacc.cc:490:replace_alu$2555 [8] $auto$alumacc.cc:490:replace_alu$2555 [9] $auto$alumacc.cc:490:replace_alu$2555 [10] $auto$alumacc.cc:490:replace_alu$2555 [11] $auto$alumacc.cc:490:replace_alu$2555 [12] $auto$alumacc.cc:490:replace_alu$2555 [13] $auto$alumacc.cc:490:replace_alu$2555 [14] $auto$alumacc.cc:490:replace_alu$2555 [15] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2568: { $auto$alumacc.cc:490:replace_alu$2566 [0] $auto$alumacc.cc:490:replace_alu$2566 [1] $auto$alumacc.cc:490:replace_alu$2566 [2] $auto$alumacc.cc:490:replace_alu$2566 [3] $auto$alumacc.cc:490:replace_alu$2566 [4] $auto$alumacc.cc:490:replace_alu$2566 [5] $auto$alumacc.cc:490:replace_alu$2566 [6] $auto$alumacc.cc:490:replace_alu$2566 [7] $auto$alumacc.cc:490:replace_alu$2566 [8] $auto$alumacc.cc:490:replace_alu$2566 [9] $auto$alumacc.cc:490:replace_alu$2566 [10] $auto$alumacc.cc:490:replace_alu$2566 [11] $auto$alumacc.cc:490:replace_alu$2566 [12] $auto$alumacc.cc:490:replace_alu$2566 [13] $auto$alumacc.cc:490:replace_alu$2566 [14] $auto$alumacc.cc:490:replace_alu$2566 [15] $auto$alumacc.cc:490:replace_alu$2566 [16] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2581: { $auto$alumacc.cc:490:replace_alu$2579 [0] $auto$alumacc.cc:490:replace_alu$2579 [1] $auto$alumacc.cc:490:replace_alu$2579 [2] $auto$alumacc.cc:490:replace_alu$2579 [3] $auto$alumacc.cc:490:replace_alu$2579 [4] $auto$alumacc.cc:490:replace_alu$2579 [5] $auto$alumacc.cc:490:replace_alu$2579 [6] $auto$alumacc.cc:490:replace_alu$2579 [7] $auto$alumacc.cc:490:replace_alu$2579 [8] $auto$alumacc.cc:490:replace_alu$2579 [9] $auto$alumacc.cc:490:replace_alu$2579 [10] $auto$alumacc.cc:490:replace_alu$2579 [11] $auto$alumacc.cc:490:replace_alu$2579 [12] $auto$alumacc.cc:490:replace_alu$2579 [13] $auto$alumacc.cc:490:replace_alu$2579 [14] $auto$alumacc.cc:490:replace_alu$2579 [15] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2594: { $auto$alumacc.cc:490:replace_alu$2592 [0] $auto$alumacc.cc:490:replace_alu$2592 [1] $auto$alumacc.cc:490:replace_alu$2592 [2] $auto$alumacc.cc:490:replace_alu$2592 [3] $auto$alumacc.cc:490:replace_alu$2592 [4] $auto$alumacc.cc:490:replace_alu$2592 [5] $auto$alumacc.cc:490:replace_alu$2592 [6] $auto$alumacc.cc:490:replace_alu$2592 [7] $auto$alumacc.cc:490:replace_alu$2592 [8] $auto$alumacc.cc:490:replace_alu$2592 [9] $auto$alumacc.cc:490:replace_alu$2592 [10] $auto$alumacc.cc:490:replace_alu$2592 [11] $auto$alumacc.cc:490:replace_alu$2592 [12] $auto$alumacc.cc:490:replace_alu$2592 [13] $auto$alumacc.cc:490:replace_alu$2592 [14] $auto$alumacc.cc:490:replace_alu$2592 [15] $auto$alumacc.cc:490:replace_alu$2592 [16] $auto$alumacc.cc:490:replace_alu$2592 [17] $auto$alumacc.cc:490:replace_alu$2592 [18] $auto$alumacc.cc:490:replace_alu$2592 [19] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2607: { $auto$alumacc.cc:490:replace_alu$2605 [0] $auto$alumacc.cc:490:replace_alu$2605 [1] $auto$alumacc.cc:490:replace_alu$2605 [2] $auto$alumacc.cc:490:replace_alu$2605 [3] $auto$alumacc.cc:490:replace_alu$2605 [4] $auto$alumacc.cc:490:replace_alu$2605 [5] $auto$alumacc.cc:490:replace_alu$2605 [6] $auto$alumacc.cc:490:replace_alu$2605 [7] $auto$alumacc.cc:490:replace_alu$2605 [8] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2629: { $auto$alumacc.cc:490:replace_alu$2627 [0] $auto$alumacc.cc:490:replace_alu$2627 [1] $auto$alumacc.cc:490:replace_alu$2627 [2] $auto$alumacc.cc:490:replace_alu$2627 [3] $auto$alumacc.cc:490:replace_alu$2627 [4] $auto$alumacc.cc:490:replace_alu$2627 [5] $auto$alumacc.cc:490:replace_alu$2627 [6] $auto$alumacc.cc:490:replace_alu$2627 [7] $auto$alumacc.cc:490:replace_alu$2627 [8] $auto$alumacc.cc:490:replace_alu$2627 [9] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2648: { $auto$alumacc.cc:490:replace_alu$2642 [0] $auto$alumacc.cc:490:replace_alu$2642 [1] $auto$alumacc.cc:490:replace_alu$2642 [2] $auto$alumacc.cc:490:replace_alu$2642 [3] $auto$alumacc.cc:490:replace_alu$2642 [4] $auto$alumacc.cc:490:replace_alu$2642 [5] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2655: { $auto$alumacc.cc:490:replace_alu$2653 [0] $auto$alumacc.cc:490:replace_alu$2653 [1] $auto$alumacc.cc:490:replace_alu$2653 [2] $auto$alumacc.cc:490:replace_alu$2653 [3] $auto$alumacc.cc:490:replace_alu$2653 [4] $auto$alumacc.cc:490:replace_alu$2653 [5] $auto$alumacc.cc:490:replace_alu$2653 [6] $auto$alumacc.cc:490:replace_alu$2653 [7] $auto$alumacc.cc:490:replace_alu$2653 [8] $auto$alumacc.cc:490:replace_alu$2653 [9] $auto$alumacc.cc:490:replace_alu$2653 [10] $auto$alumacc.cc:490:replace_alu$2653 [11] $auto$alumacc.cc:490:replace_alu$2653 [12] $auto$alumacc.cc:490:replace_alu$2653 [13] $auto$alumacc.cc:490:replace_alu$2653 [14] $auto$alumacc.cc:490:replace_alu$2653 [15] $auto$alumacc.cc:490:replace_alu$2653 [16] $auto$alumacc.cc:490:replace_alu$2653 [17] $auto$alumacc.cc:490:replace_alu$2653 [18] $auto$alumacc.cc:490:replace_alu$2653 [19] $auto$alumacc.cc:490:replace_alu$2653 [20] $auto$alumacc.cc:490:replace_alu$2653 [21] $auto$alumacc.cc:490:replace_alu$2653 [22] $auto$alumacc.cc:490:replace_alu$2653 [23] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2671: { $auto$alumacc.cc:490:replace_alu$2669 [0] $auto$alumacc.cc:490:replace_alu$2669 [1] $auto$alumacc.cc:490:replace_alu$2669 [2] $auto$alumacc.cc:490:replace_alu$2669 [3] $auto$alumacc.cc:490:replace_alu$2669 [4] $auto$alumacc.cc:490:replace_alu$2669 [5] $auto$alumacc.cc:490:replace_alu$2669 [6] $auto$alumacc.cc:490:replace_alu$2669 [7] $auto$alumacc.cc:490:replace_alu$2669 [8] $auto$alumacc.cc:490:replace_alu$2669 [9] $auto$alumacc.cc:490:replace_alu$2669 [10] $auto$alumacc.cc:490:replace_alu$2669 [11] $auto$alumacc.cc:490:replace_alu$2669 [12] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2682: { $auto$alumacc.cc:490:replace_alu$2680 [0] $auto$alumacc.cc:490:replace_alu$2680 [1] $auto$alumacc.cc:490:replace_alu$2680 [2] $auto$alumacc.cc:490:replace_alu$2680 [3] $auto$alumacc.cc:490:replace_alu$2680 [4] $auto$alumacc.cc:490:replace_alu$2680 [5] $auto$alumacc.cc:490:replace_alu$2680 [6] $auto$alumacc.cc:490:replace_alu$2680 [7] $auto$alumacc.cc:490:replace_alu$2680 [8] $auto$alumacc.cc:490:replace_alu$2680 [9] $auto$alumacc.cc:490:replace_alu$2680 [10] $auto$alumacc.cc:490:replace_alu$2680 [11] $auto$alumacc.cc:490:replace_alu$2680 [12] $auto$alumacc.cc:490:replace_alu$2680 [13] $auto$alumacc.cc:490:replace_alu$2680 [14] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2693: { $auto$alumacc.cc:490:replace_alu$2691 [0] $auto$alumacc.cc:490:replace_alu$2691 [1] $auto$alumacc.cc:490:replace_alu$2691 [2] $auto$alumacc.cc:490:replace_alu$2691 [3] $auto$alumacc.cc:490:replace_alu$2691 [4] $auto$alumacc.cc:490:replace_alu$2691 [5] $auto$alumacc.cc:490:replace_alu$2691 [6] $auto$alumacc.cc:490:replace_alu$2691 [7] $auto$alumacc.cc:490:replace_alu$2691 [8] $auto$alumacc.cc:490:replace_alu$2691 [9] $auto$alumacc.cc:490:replace_alu$2691 [10] $auto$alumacc.cc:490:replace_alu$2691 [11] $auto$alumacc.cc:490:replace_alu$2691 [12] $auto$alumacc.cc:490:replace_alu$2691 [13] $auto$alumacc.cc:490:replace_alu$2691 [14] $auto$alumacc.cc:490:replace_alu$2691 [15] $auto$alumacc.cc:490:replace_alu$2691 [16] $auto$alumacc.cc:490:replace_alu$2691 [17] $auto$alumacc.cc:490:replace_alu$2691 [18] $auto$alumacc.cc:490:replace_alu$2691 [19] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2714: { $auto$alumacc.cc:490:replace_alu$2712 [0] $auto$alumacc.cc:490:replace_alu$2712 [1] $auto$alumacc.cc:490:replace_alu$2712 [2] $auto$alumacc.cc:490:replace_alu$2712 [3] $auto$alumacc.cc:490:replace_alu$2712 [4] $auto$alumacc.cc:490:replace_alu$2712 [5] $auto$alumacc.cc:490:replace_alu$2712 [6] $auto$alumacc.cc:490:replace_alu$2712 [7] $auto$alumacc.cc:490:replace_alu$2712 [8] $auto$alumacc.cc:490:replace_alu$2712 [9] $auto$alumacc.cc:490:replace_alu$2712 [10] $auto$alumacc.cc:490:replace_alu$2712 [11] $auto$alumacc.cc:490:replace_alu$2712 [12] $auto$alumacc.cc:490:replace_alu$2712 [13] $auto$alumacc.cc:490:replace_alu$2712 [14] $auto$alumacc.cc:490:replace_alu$2712 [15] $auto$alumacc.cc:490:replace_alu$2712 [16] $auto$alumacc.cc:490:replace_alu$2712 [17] $auto$alumacc.cc:490:replace_alu$2712 [18] $auto$alumacc.cc:490:replace_alu$2712 [19] $auto$alumacc.cc:490:replace_alu$2712 [20] $auto$alumacc.cc:490:replace_alu$2712 [21] }
  Optimizing cells in module \module106.
  Optimizing cells in module \module13.
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2844: { $auto$alumacc.cc:490:replace_alu$2840 [0] $auto$alumacc.cc:490:replace_alu$2840 [1] $auto$alumacc.cc:490:replace_alu$2840 [2] $auto$alumacc.cc:490:replace_alu$2840 [3] $auto$alumacc.cc:490:replace_alu$2840 [4] $auto$alumacc.cc:490:replace_alu$2840 [5] $auto$alumacc.cc:490:replace_alu$2840 [6] $auto$alumacc.cc:490:replace_alu$2840 [7] $auto$alumacc.cc:490:replace_alu$2840 [8] $auto$alumacc.cc:490:replace_alu$2840 [9] $auto$alumacc.cc:490:replace_alu$2840 [10] }
  Optimizing cells in module \module13.
  Optimizing cells in module \module207.
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$2960: { $auto$rtlil.cc:1832:Not$2959 $auto$rtlil.cc:1835:ReduceAnd$2953 }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$2973: { $auto$rtlil.cc:1832:Not$2972 $auto$rtlil.cc:1835:ReduceAnd$2966 }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$2986: { $auto$rtlil.cc:1832:Not$2985 $auto$rtlil.cc:1835:ReduceAnd$2979 }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$2999: { $auto$rtlil.cc:1832:Not$2998 $auto$rtlil.cc:1835:ReduceAnd$2992 }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$3012: { $auto$rtlil.cc:1832:Not$3011 $auto$rtlil.cc:1835:ReduceAnd$3005 }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$3059: { $auto$rtlil.cc:1832:Not$3058 $auto$rtlil.cc:1835:ReduceAnd$3052 }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$3072: { $auto$rtlil.cc:1832:Not$3071 $auto$rtlil.cc:1835:ReduceAnd$3065 }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$3081: { $auto$rtlil.cc:1832:Not$3078 $auto$alumacc.cc:490:replace_alu$3075 }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2952: { $auto$alumacc.cc:490:replace_alu$2950 [0] $auto$alumacc.cc:490:replace_alu$2950 [1] $auto$alumacc.cc:490:replace_alu$2950 [2] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3051: { $auto$alumacc.cc:490:replace_alu$3049 [0] $auto$alumacc.cc:490:replace_alu$3049 [1] $auto$alumacc.cc:490:replace_alu$3049 [2] $auto$alumacc.cc:490:replace_alu$3049 [3] $auto$alumacc.cc:490:replace_alu$3049 [4] $auto$alumacc.cc:490:replace_alu$3049 [5] $auto$alumacc.cc:490:replace_alu$3049 [6] $auto$alumacc.cc:490:replace_alu$3049 [7] $auto$alumacc.cc:490:replace_alu$3049 [8] $auto$alumacc.cc:490:replace_alu$3049 [9] $auto$alumacc.cc:490:replace_alu$3049 [10] $auto$alumacc.cc:490:replace_alu$3049 [11] $auto$alumacc.cc:490:replace_alu$3049 [12] $auto$alumacc.cc:490:replace_alu$3049 [13] $auto$alumacc.cc:490:replace_alu$3049 [14] $auto$alumacc.cc:490:replace_alu$3049 [15] $auto$alumacc.cc:490:replace_alu$3049 [16] $auto$alumacc.cc:490:replace_alu$3049 [17] $auto$alumacc.cc:490:replace_alu$3049 [18] $auto$alumacc.cc:490:replace_alu$3049 [19] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3064: { $auto$alumacc.cc:490:replace_alu$3062 [0] $auto$alumacc.cc:490:replace_alu$3062 [1] $auto$alumacc.cc:490:replace_alu$3062 [2] $auto$alumacc.cc:490:replace_alu$3062 [3] $auto$alumacc.cc:490:replace_alu$3062 [4] $auto$alumacc.cc:490:replace_alu$3062 [5] $auto$alumacc.cc:490:replace_alu$3062 [6] $auto$alumacc.cc:490:replace_alu$3062 [7] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3031: { $auto$alumacc.cc:490:replace_alu$3029 [0] $auto$alumacc.cc:490:replace_alu$3029 [1] $auto$alumacc.cc:490:replace_alu$3029 [2] $auto$alumacc.cc:490:replace_alu$3029 [3] $auto$alumacc.cc:490:replace_alu$3029 [4] $auto$alumacc.cc:490:replace_alu$3029 [5] $auto$alumacc.cc:490:replace_alu$3029 [6] $auto$alumacc.cc:490:replace_alu$3029 [7] $auto$alumacc.cc:490:replace_alu$3029 [8] $auto$alumacc.cc:490:replace_alu$3029 [9] $auto$alumacc.cc:490:replace_alu$3029 [10] $auto$alumacc.cc:490:replace_alu$3029 [11] $auto$alumacc.cc:490:replace_alu$3029 [12] $auto$alumacc.cc:490:replace_alu$3029 [13] $auto$alumacc.cc:490:replace_alu$3029 [14] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2978: { $auto$alumacc.cc:490:replace_alu$2976 [0] $auto$alumacc.cc:490:replace_alu$2976 [1] $auto$alumacc.cc:490:replace_alu$2976 [2] $auto$alumacc.cc:490:replace_alu$2976 [3] $auto$alumacc.cc:490:replace_alu$2976 [4] $auto$alumacc.cc:490:replace_alu$2976 [5] $auto$alumacc.cc:490:replace_alu$2976 [6] $auto$alumacc.cc:490:replace_alu$2976 [7] $auto$alumacc.cc:490:replace_alu$2976 [8] $auto$alumacc.cc:490:replace_alu$2976 [9] $auto$alumacc.cc:490:replace_alu$2976 [10] $auto$alumacc.cc:490:replace_alu$2976 [11] $auto$alumacc.cc:490:replace_alu$2976 [12] $auto$alumacc.cc:490:replace_alu$2976 [13] $auto$alumacc.cc:490:replace_alu$2976 [14] $auto$alumacc.cc:490:replace_alu$2976 [15] $auto$alumacc.cc:490:replace_alu$2976 [16] $auto$alumacc.cc:490:replace_alu$2976 [17] $auto$alumacc.cc:490:replace_alu$2976 [18] $auto$alumacc.cc:490:replace_alu$2976 [19] $auto$alumacc.cc:490:replace_alu$2976 [20] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2991: { $auto$alumacc.cc:490:replace_alu$2989 [0] $auto$alumacc.cc:490:replace_alu$2989 [1] $auto$alumacc.cc:490:replace_alu$2989 [2] $auto$alumacc.cc:490:replace_alu$2989 [3] $auto$alumacc.cc:490:replace_alu$2989 [4] $auto$alumacc.cc:490:replace_alu$2989 [5] $auto$alumacc.cc:490:replace_alu$2989 [6] $auto$alumacc.cc:490:replace_alu$2989 [7] $auto$alumacc.cc:490:replace_alu$2989 [8] $auto$alumacc.cc:490:replace_alu$2989 [9] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3004: { $auto$alumacc.cc:490:replace_alu$3002 [0] $auto$alumacc.cc:490:replace_alu$3002 [1] $auto$alumacc.cc:490:replace_alu$3002 [2] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2965: { $auto$alumacc.cc:490:replace_alu$2963 [0] $auto$alumacc.cc:490:replace_alu$2963 [1] $auto$alumacc.cc:490:replace_alu$2963 [2] $auto$alumacc.cc:490:replace_alu$2963 [3] $auto$alumacc.cc:490:replace_alu$2963 [4] $auto$alumacc.cc:490:replace_alu$2963 [5] $auto$alumacc.cc:490:replace_alu$2963 [6] $auto$alumacc.cc:490:replace_alu$2963 [7] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3019: { $auto$alumacc.cc:490:replace_alu$3015 [0] $auto$alumacc.cc:490:replace_alu$3015 [1] $auto$alumacc.cc:490:replace_alu$3015 [2] $auto$alumacc.cc:490:replace_alu$3015 [3] $auto$alumacc.cc:490:replace_alu$3015 [4] $auto$alumacc.cc:490:replace_alu$3015 [5] $auto$alumacc.cc:490:replace_alu$3015 [6] $auto$alumacc.cc:490:replace_alu$3015 [7] $auto$alumacc.cc:490:replace_alu$3015 [8] $auto$alumacc.cc:490:replace_alu$3015 [9] $auto$alumacc.cc:490:replace_alu$3015 [10] $auto$alumacc.cc:490:replace_alu$3015 [11] $auto$alumacc.cc:490:replace_alu$3015 [12] $auto$alumacc.cc:490:replace_alu$3015 [13] $auto$alumacc.cc:490:replace_alu$3015 [14] $auto$alumacc.cc:490:replace_alu$3015 [15] $auto$alumacc.cc:490:replace_alu$3015 [16] $auto$alumacc.cc:490:replace_alu$3015 [17] $auto$alumacc.cc:490:replace_alu$3015 [18] $auto$alumacc.cc:490:replace_alu$3015 [19] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2889: { $auto$alumacc.cc:490:replace_alu$2887 [0] $auto$alumacc.cc:490:replace_alu$2887 [1] $auto$alumacc.cc:490:replace_alu$2887 [2] $auto$alumacc.cc:490:replace_alu$2887 [3] $auto$alumacc.cc:490:replace_alu$2887 [4] $auto$alumacc.cc:490:replace_alu$2887 [5] $auto$alumacc.cc:490:replace_alu$2887 [6] $auto$alumacc.cc:490:replace_alu$2887 [7] $auto$alumacc.cc:490:replace_alu$2887 [8] $auto$alumacc.cc:490:replace_alu$2887 [9] $auto$alumacc.cc:490:replace_alu$2887 [10] $auto$alumacc.cc:490:replace_alu$2887 [11] $auto$alumacc.cc:490:replace_alu$2887 [12] $auto$alumacc.cc:490:replace_alu$2887 [13] $auto$alumacc.cc:490:replace_alu$2887 [14] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2905: { $auto$alumacc.cc:490:replace_alu$2903 [0] $auto$alumacc.cc:490:replace_alu$2903 [1] $auto$alumacc.cc:490:replace_alu$2903 [2] $auto$alumacc.cc:490:replace_alu$2903 [3] $auto$alumacc.cc:490:replace_alu$2903 [4] $auto$alumacc.cc:490:replace_alu$2903 [5] $auto$alumacc.cc:490:replace_alu$2903 [6] $auto$alumacc.cc:490:replace_alu$2903 [7] $auto$alumacc.cc:490:replace_alu$2903 [8] $auto$alumacc.cc:490:replace_alu$2903 [9] $auto$alumacc.cc:490:replace_alu$2903 [10] $auto$alumacc.cc:490:replace_alu$2903 [11] $auto$alumacc.cc:490:replace_alu$2903 [12] $auto$alumacc.cc:490:replace_alu$2903 [13] $auto$alumacc.cc:490:replace_alu$2903 [14] $auto$alumacc.cc:490:replace_alu$2903 [15] $auto$alumacc.cc:490:replace_alu$2903 [16] $auto$alumacc.cc:490:replace_alu$2903 [17] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2916: { $auto$alumacc.cc:490:replace_alu$2914 [0] $auto$alumacc.cc:490:replace_alu$2914 [1] $auto$alumacc.cc:490:replace_alu$2914 [2] }
  Optimizing cells in module \module207.
  Optimizing cells in module \module30.
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$3151: { $auto$rtlil.cc:1832:Not$3150 $auto$rtlil.cc:1835:ReduceAnd$3144 }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$3164: { $auto$rtlil.cc:1832:Not$3163 $auto$rtlil.cc:1835:ReduceAnd$3157 }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$3201: { $auto$rtlil.cc:1832:Not$3200 $auto$rtlil.cc:1835:ReduceAnd$3194 }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$3219: { $auto$rtlil.cc:1832:Not$3216 $auto$rtlil.cc:1835:ReduceAnd$3218 }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3208: { $auto$alumacc.cc:490:replace_alu$3204 [0] $auto$alumacc.cc:490:replace_alu$3204 [1] $auto$alumacc.cc:490:replace_alu$3204 [2] $auto$alumacc.cc:490:replace_alu$3204 [3] $auto$alumacc.cc:490:replace_alu$3204 [4] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3217: { $auto$alumacc.cc:490:replace_alu$3213 [0] $auto$alumacc.cc:490:replace_alu$3213 [1] $auto$alumacc.cc:490:replace_alu$3213 [2] $auto$alumacc.cc:490:replace_alu$3213 [3] $auto$alumacc.cc:490:replace_alu$3213 [4] $auto$alumacc.cc:490:replace_alu$3213 [5] $auto$alumacc.cc:490:replace_alu$3213 [6] $auto$alumacc.cc:490:replace_alu$3213 [7] $auto$alumacc.cc:490:replace_alu$3213 [8] $auto$alumacc.cc:490:replace_alu$3213 [9] $auto$alumacc.cc:490:replace_alu$3213 [10] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3136: { $auto$alumacc.cc:490:replace_alu$3132 [0] $auto$alumacc.cc:490:replace_alu$3132 [1] $auto$alumacc.cc:490:replace_alu$3132 [2] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3143: { $auto$alumacc.cc:490:replace_alu$3141 [0] $auto$alumacc.cc:490:replace_alu$3141 [1] $auto$alumacc.cc:490:replace_alu$3141 [2] $auto$alumacc.cc:490:replace_alu$3141 [3] $auto$alumacc.cc:490:replace_alu$3141 [4] $auto$alumacc.cc:490:replace_alu$3141 [5] $auto$alumacc.cc:490:replace_alu$3141 [6] $auto$alumacc.cc:490:replace_alu$3141 [7] $auto$alumacc.cc:490:replace_alu$3141 [8] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3156: { $auto$alumacc.cc:490:replace_alu$3154 [0] $auto$alumacc.cc:490:replace_alu$3154 [1] $auto$alumacc.cc:490:replace_alu$3154 [2] $auto$alumacc.cc:490:replace_alu$3154 [3] $auto$alumacc.cc:490:replace_alu$3154 [4] $auto$alumacc.cc:490:replace_alu$3154 [5] $auto$alumacc.cc:490:replace_alu$3154 [6] $auto$alumacc.cc:490:replace_alu$3154 [7] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3169: { $auto$alumacc.cc:490:replace_alu$3167 [0] $auto$alumacc.cc:490:replace_alu$3167 [1] $auto$alumacc.cc:490:replace_alu$3167 [2] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3180: { $auto$alumacc.cc:490:replace_alu$3178 [0] $auto$alumacc.cc:490:replace_alu$3178 [1] $auto$alumacc.cc:490:replace_alu$3178 [2] $auto$alumacc.cc:490:replace_alu$3178 [3] $auto$alumacc.cc:490:replace_alu$3178 [4] $auto$alumacc.cc:490:replace_alu$3178 [5] $auto$alumacc.cc:490:replace_alu$3178 [6] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3193: { $auto$alumacc.cc:490:replace_alu$3191 [0] $auto$alumacc.cc:490:replace_alu$3191 [1] }
  Optimizing cells in module \module30.
  Optimizing cells in module \module73.
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$3312: { $auto$rtlil.cc:1832:Not$3311 $auto$rtlil.cc:1835:ReduceAnd$3305 }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$3338: { $auto$rtlil.cc:1832:Not$3337 $auto$rtlil.cc:1835:ReduceAnd$3329 }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$3351: { $auto$rtlil.cc:1832:Not$3350 $auto$rtlil.cc:1835:ReduceAnd$3344 }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3252: { $auto$alumacc.cc:490:replace_alu$3250 [0] $auto$alumacc.cc:490:replace_alu$3250 [1] $auto$alumacc.cc:490:replace_alu$3250 [2] $auto$alumacc.cc:490:replace_alu$3250 [3] $auto$alumacc.cc:490:replace_alu$3250 [4] $auto$alumacc.cc:490:replace_alu$3250 [5] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3263: { $auto$alumacc.cc:490:replace_alu$3261 [0] $auto$alumacc.cc:490:replace_alu$3261 [1] $auto$alumacc.cc:490:replace_alu$3261 [2] $auto$alumacc.cc:490:replace_alu$3261 [3] $auto$alumacc.cc:490:replace_alu$3261 [4] $auto$alumacc.cc:490:replace_alu$3261 [5] $auto$alumacc.cc:490:replace_alu$3261 [6] $auto$alumacc.cc:490:replace_alu$3261 [7] $auto$alumacc.cc:490:replace_alu$3261 [8] $auto$alumacc.cc:490:replace_alu$3261 [9] $auto$alumacc.cc:490:replace_alu$3261 [10] $auto$alumacc.cc:490:replace_alu$3261 [11] $auto$alumacc.cc:490:replace_alu$3261 [12] $auto$alumacc.cc:490:replace_alu$3261 [13] $auto$alumacc.cc:490:replace_alu$3261 [14] $auto$alumacc.cc:490:replace_alu$3261 [15] $auto$alumacc.cc:490:replace_alu$3261 [16] $auto$alumacc.cc:490:replace_alu$3261 [17] $auto$alumacc.cc:490:replace_alu$3261 [18] $auto$alumacc.cc:490:replace_alu$3261 [19] $auto$alumacc.cc:490:replace_alu$3261 [20] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3274: { $auto$alumacc.cc:490:replace_alu$3272 [0] $auto$alumacc.cc:490:replace_alu$3272 [1] $auto$alumacc.cc:490:replace_alu$3272 [2] $auto$alumacc.cc:490:replace_alu$3272 [3] $auto$alumacc.cc:490:replace_alu$3272 [4] $auto$alumacc.cc:490:replace_alu$3272 [5] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3297: { $auto$alumacc.cc:490:replace_alu$3293 [0] $auto$alumacc.cc:490:replace_alu$3293 [1] $auto$alumacc.cc:490:replace_alu$3293 [2] $auto$alumacc.cc:490:replace_alu$3293 [3] $auto$alumacc.cc:490:replace_alu$3293 [4] $auto$alumacc.cc:490:replace_alu$3293 [5] $auto$alumacc.cc:490:replace_alu$3293 [6] $auto$alumacc.cc:490:replace_alu$3293 [7] $auto$alumacc.cc:490:replace_alu$3293 [8] $auto$alumacc.cc:490:replace_alu$3293 [9] $auto$alumacc.cc:490:replace_alu$3293 [10] $auto$alumacc.cc:490:replace_alu$3293 [11] $auto$alumacc.cc:490:replace_alu$3293 [12] $auto$alumacc.cc:490:replace_alu$3293 [13] $auto$alumacc.cc:490:replace_alu$3293 [14] $auto$alumacc.cc:490:replace_alu$3293 [15] $auto$alumacc.cc:490:replace_alu$3293 [16] $auto$alumacc.cc:490:replace_alu$3293 [17] $auto$alumacc.cc:490:replace_alu$3293 [18] $auto$alumacc.cc:490:replace_alu$3293 [19] $auto$alumacc.cc:490:replace_alu$3293 [20] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3304: { $auto$alumacc.cc:490:replace_alu$3302 [0] $auto$alumacc.cc:490:replace_alu$3302 [1] $auto$alumacc.cc:490:replace_alu$3302 [2] $auto$alumacc.cc:490:replace_alu$3302 [3] $auto$alumacc.cc:490:replace_alu$3302 [4] $auto$alumacc.cc:490:replace_alu$3302 [5] $auto$alumacc.cc:490:replace_alu$3302 [6] $auto$alumacc.cc:490:replace_alu$3302 [7] $auto$alumacc.cc:490:replace_alu$3302 [8] $auto$alumacc.cc:490:replace_alu$3302 [9] $auto$alumacc.cc:490:replace_alu$3302 [10] $auto$alumacc.cc:490:replace_alu$3302 [11] $auto$alumacc.cc:490:replace_alu$3302 [12] $auto$alumacc.cc:490:replace_alu$3302 [13] $auto$alumacc.cc:490:replace_alu$3302 [14] $auto$alumacc.cc:490:replace_alu$3302 [15] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3317: { $auto$alumacc.cc:490:replace_alu$3315 [0] $auto$alumacc.cc:490:replace_alu$3315 [1] $auto$alumacc.cc:490:replace_alu$3315 [2] $auto$alumacc.cc:490:replace_alu$3315 [3] $auto$alumacc.cc:490:replace_alu$3315 [4] $auto$alumacc.cc:490:replace_alu$3315 [5] $auto$alumacc.cc:490:replace_alu$3315 [6] $auto$alumacc.cc:490:replace_alu$3315 [7] $auto$alumacc.cc:490:replace_alu$3315 [8] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3328: { $auto$alumacc.cc:490:replace_alu$3326 [0] $auto$alumacc.cc:490:replace_alu$3326 [1] $auto$alumacc.cc:490:replace_alu$3326 [2] $auto$alumacc.cc:490:replace_alu$3326 [3] $auto$alumacc.cc:490:replace_alu$3326 [4] $auto$alumacc.cc:490:replace_alu$3326 [5] $auto$alumacc.cc:490:replace_alu$3326 [6] $auto$alumacc.cc:490:replace_alu$3326 [7] $auto$alumacc.cc:490:replace_alu$3326 [8] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3343: { $auto$alumacc.cc:490:replace_alu$3341 [0] $auto$alumacc.cc:490:replace_alu$3341 [1] $auto$alumacc.cc:490:replace_alu$3341 [2] $auto$alumacc.cc:490:replace_alu$3341 [3] $auto$alumacc.cc:490:replace_alu$3341 [4] $auto$alumacc.cc:490:replace_alu$3341 [5] $auto$alumacc.cc:490:replace_alu$3341 [6] $auto$alumacc.cc:490:replace_alu$3341 [7] $auto$alumacc.cc:490:replace_alu$3341 [8] }
  Optimizing cells in module \module73.
  Optimizing cells in module \top.
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$3387: { $auto$rtlil.cc:1832:Not$3386 $auto$alumacc.cc:490:replace_alu$3377 }
  Optimizing cells in module \top.
Performed a total of 71 changes.

2.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module106'.
Finding identical cells in module `\module13'.
Finding identical cells in module `\module207'.
Finding identical cells in module `\module30'.
Finding identical cells in module `\module73'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.13.6. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $procdff$2154 ($dff) from module module106.
Removing $procdff$2194 ($dff) from module module106.
Removing $procdff$2243 ($dff) from module module207.
Removing $procdff$2244 ($dff) from module module207.
Removing $procdff$2245 ($dff) from module module207.
Removing $procdff$2246 ($dff) from module module207.
Removing $procdff$2247 ($dff) from module module207.
Removing $procdff$2248 ($dff) from module module207.
Removing $procdff$2249 ($dff) from module module207.
Removing $procdff$2251 ($dff) from module module207.
Removing $procdff$2252 ($dff) from module module207.
Replaced 11 DFF cells.

2.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module106..
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module207..
Finding unused cells or wires in module \module30..
Finding unused cells or wires in module \module73..
Finding unused cells or wires in module \top..
Removed 97 unused cells and 261 unused wires.
<suppressed ~103 debug messages>

2.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module module106.
<suppressed ~3 debug messages>
Optimizing module module13.
Optimizing module module207.
<suppressed ~20 debug messages>
Optimizing module module30.
Optimizing module module73.
Optimizing module top.

2.13.9. Rerunning OPT passes. (Maybe there is more to do..)

2.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module106..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $ternary$rtl.v:1136$1075.
    dead port 2/2 on $mux $ternary$rtl.v:1136$1075.
Running muxtree optimizer on module \module13..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module207..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module30..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module73..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 2 multiplexer ports.
<suppressed ~203 debug messages>

2.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module106.
  Optimizing cells in module \module13.
  Optimizing cells in module \module207.
  Optimizing cells in module \module30.
  Optimizing cells in module \module73.
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module106'.
Finding identical cells in module `\module13'.
Finding identical cells in module `\module207'.
Finding identical cells in module `\module30'.
Finding identical cells in module `\module73'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.13.13. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $procdff$2232 ($dff) from module module207.
Removing $procdff$2235 ($dff) from module module207.
Removing $procdff$2236 ($dff) from module module207.
Removing $procdff$2239 ($dff) from module module207.
Replaced 4 DFF cells.

2.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module106..
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module207..
Finding unused cells or wires in module \module30..
Finding unused cells or wires in module \module73..
Finding unused cells or wires in module \top..
Removed 2 unused cells and 26 unused wires.
<suppressed ~4 debug messages>

2.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module module106.
Optimizing module module13.
Optimizing module module207.
<suppressed ~3 debug messages>
Optimizing module module30.
Optimizing module module73.
Optimizing module top.

2.13.16. Rerunning OPT passes. (Maybe there is more to do..)

2.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module106..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module13..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module207..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module30..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module73..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~203 debug messages>

2.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module106.
  Optimizing cells in module \module13.
  Optimizing cells in module \module207.
  Optimizing cells in module \module30.
  Optimizing cells in module \module73.
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module106'.
Finding identical cells in module `\module13'.
Finding identical cells in module `\module207'.
Finding identical cells in module `\module30'.
Finding identical cells in module `\module73'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.13.20. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $procdff$2214 ($dff) from module module207.
Removing $procdff$2230 ($dff) from module module207.
Removing $procdff$2233 ($dff) from module module207.
Replaced 3 DFF cells.

2.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module106..
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module207..
Finding unused cells or wires in module \module30..
Finding unused cells or wires in module \module73..
Finding unused cells or wires in module \top..
Removed 3 unused cells and 6 unused wires.
<suppressed ~4 debug messages>

2.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module module106.
Optimizing module module13.
Optimizing module module207.
<suppressed ~3 debug messages>
Optimizing module module30.
Optimizing module module73.
Optimizing module top.

2.13.23. Rerunning OPT passes. (Maybe there is more to do..)

2.13.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module106..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module13..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module207..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module30..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module73..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~202 debug messages>

2.13.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module106.
  Optimizing cells in module \module13.
  Optimizing cells in module \module207.
  Optimizing cells in module \module30.
  Optimizing cells in module \module73.
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.13.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module106'.
Finding identical cells in module `\module13'.
Finding identical cells in module `\module207'.
Finding identical cells in module `\module30'.
Finding identical cells in module `\module73'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.13.27. Executing OPT_RMDFF pass (remove dff with constant values).

2.13.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module106..
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module207..
Finding unused cells or wires in module \module30..
Finding unused cells or wires in module \module73..
Finding unused cells or wires in module \top..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

2.13.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module module106.
Optimizing module module13.
Optimizing module module207.
Optimizing module module30.
Optimizing module module73.
Optimizing module top.

2.13.30. Finished OPT passes. (There is nothing left to do.)

2.14. Executing FSM pass (extract and optimize FSM).

2.14.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking module106.reg149 as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking module106.reg161 as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking module106.reg172 as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking module207.reg273 as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking module207.reg275 as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.

2.14.2. Executing FSM_EXTRACT pass (extracting FSM from design).

2.14.3. Executing FSM_OPT pass (simple optimizations of FSMs).

2.14.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module106..
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module207..
Finding unused cells or wires in module \module30..
Finding unused cells or wires in module \module73..
Finding unused cells or wires in module \top..

2.14.5. Executing FSM_OPT pass (simple optimizations of FSMs).

2.14.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

2.14.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

2.14.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

2.15. Executing OPT pass (performing simple optimizations).

2.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module module106.
Optimizing module module13.
Optimizing module module207.
Optimizing module module30.
Optimizing module module73.
Optimizing module top.

2.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module106'.
Finding identical cells in module `\module13'.
Finding identical cells in module `\module207'.
Finding identical cells in module `\module30'.
Finding identical cells in module `\module73'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.15.3. Executing OPT_RMDFF pass (remove dff with constant values).

2.15.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module106..
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module207..
Finding unused cells or wires in module \module30..
Finding unused cells or wires in module \module73..
Finding unused cells or wires in module \top..

2.15.5. Finished fast OPT passes.

2.16. Executing MEMORY pass.

2.16.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

2.16.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module106..
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module207..
Finding unused cells or wires in module \module30..
Finding unused cells or wires in module \module73..
Finding unused cells or wires in module \top..

2.16.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

2.16.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module106..
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module207..
Finding unused cells or wires in module \module30..
Finding unused cells or wires in module \module73..
Finding unused cells or wires in module \top..

2.16.5. Executing MEMORY_COLLECT pass (generating $mem cells).

2.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module106..
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module207..
Finding unused cells or wires in module \module30..
Finding unused cells or wires in module \module73..
Finding unused cells or wires in module \top..

2.18. Executing OPT pass (performing simple optimizations).

2.18.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module module106.
<suppressed ~100 debug messages>
Optimizing module module13.
<suppressed ~41 debug messages>
Optimizing module module207.
<suppressed ~82 debug messages>
Optimizing module module30.
<suppressed ~88 debug messages>
Optimizing module module73.
<suppressed ~93 debug messages>
Optimizing module top.
<suppressed ~25 debug messages>

2.18.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module106'.
Finding identical cells in module `\module13'.
<suppressed ~3 debug messages>
Finding identical cells in module `\module207'.
<suppressed ~3 debug messages>
Finding identical cells in module `\module30'.
<suppressed ~6 debug messages>
Finding identical cells in module `\module73'.
Finding identical cells in module `\top'.
Removed a total of 4 cells.

2.18.3. Executing OPT_RMDFF pass (remove dff with constant values).

2.18.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module106..
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module207..
Finding unused cells or wires in module \module30..
Finding unused cells or wires in module \module73..
Finding unused cells or wires in module \top..
Removed 22 unused cells and 141 unused wires.
<suppressed ~32 debug messages>

2.18.5. Finished fast OPT passes.

2.19. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

2.20. Executing OPT pass (performing simple optimizations).

2.20.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module module106.
Optimizing module module13.
Optimizing module module207.
Optimizing module module30.
Optimizing module module73.
Optimizing module top.

2.20.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module106'.
Finding identical cells in module `\module13'.
Finding identical cells in module `\module207'.
Finding identical cells in module `\module30'.
Finding identical cells in module `\module73'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.20.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module106..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $ternary$rtl.v:878$722: { 4'0000 \reg113 [0] \reg113 [0] \reg113 [0] \reg113 [0] \reg113 [0] \reg113 [0] $auto$opt_expr.cc:189:group_cell_inputs$3414 } -> { 10'0000000000 $auto$opt_expr.cc:189:group_cell_inputs$3414 }
  Analyzing evaluation results.
Running muxtree optimizer on module \module13..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module207..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module30..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module73..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~198 debug messages>

2.20.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module106.
    Consolidated identical input bits for $mux cell $procmux$1706:
      Old ports: A={ \reg120 [3] \reg120 [3] \reg120 [3] \reg120 [3] \reg120 [3] \reg120 [3] \reg120 [3] \reg120 }, B={ 10'0000000000 $auto$wreduce.cc:455:run$2315 [0] }, Y=$procmux$1706_Y
      New ports: A=\reg120, B={ 3'000 $auto$wreduce.cc:455:run$2315 [0] }, Y=$procmux$1706_Y [3:0]
      New connections: $procmux$1706_Y [10:4] = { $procmux$1706_Y [3] $procmux$1706_Y [3] $procmux$1706_Y [3] $procmux$1706_Y [3] $procmux$1706_Y [3] $procmux$1706_Y [3] $procmux$1706_Y [3] }
    Consolidated identical input bits for $mux cell $procmux$1712:
      Old ports: A={ 13'0000000000000 \reg147 [2:1] }, B={ \wire108 [6] \wire108 [6] \wire108 [6] \wire108 [6] \wire108 [6] \wire108 [6] \wire108 [6] \wire108 [6] \wire108 }, Y=$procmux$1712_Y
      New ports: A={ 5'00000 \reg147 [2:1] }, B=\wire108, Y=$procmux$1712_Y [6:0]
      New connections: $procmux$1712_Y [14:7] = { $procmux$1712_Y [6] $procmux$1712_Y [6] $procmux$1712_Y [6] $procmux$1712_Y [6] $procmux$1712_Y [6] $procmux$1712_Y [6] $procmux$1712_Y [6] $procmux$1712_Y [6] }
    Consolidated identical input bits for $mux cell $procmux$1766:
      Old ports: A={ \reg121 [4] \reg121 [4] \reg121 [4] \reg121 [4] \reg121 [4] \reg121 [4] \reg121 [4] \reg121 [4] \reg121 [4] \reg121 [4] \reg121 [4] \reg121 [4] \reg121 [4] \reg121 [4] \reg121 [4] \reg121 [4] \reg121 [4] \reg121 [4] \reg121 [4] \reg121 [4] \reg121 [4] \reg121 [4] }, B={ $neg$rtl.v:1020$904_Y [2] $neg$rtl.v:1020$904_Y [2] $neg$rtl.v:1020$904_Y [2] $neg$rtl.v:1020$904_Y [2] $neg$rtl.v:1020$904_Y [2] $neg$rtl.v:1020$904_Y [2] $neg$rtl.v:1020$904_Y [2] $neg$rtl.v:1020$904_Y [2] $neg$rtl.v:1020$904_Y [2] $neg$rtl.v:1020$904_Y [2] $neg$rtl.v:1020$904_Y [2] $neg$rtl.v:1020$904_Y [2] $neg$rtl.v:1020$904_Y [2] $neg$rtl.v:1020$904_Y [2] $neg$rtl.v:1020$904_Y [2] $neg$rtl.v:1020$904_Y [2] $neg$rtl.v:1020$904_Y [2] $neg$rtl.v:1020$904_Y [2] $neg$rtl.v:1020$904_Y [2] $neg$rtl.v:1020$904_Y }, Y=$procmux$1766_Y
      New ports: A={ \reg121 [4] \reg121 [4] \reg121 [4] }, B=$neg$rtl.v:1020$904_Y, Y=$procmux$1766_Y [2:0]
      New connections: $procmux$1766_Y [21:3] = { $procmux$1766_Y [2] $procmux$1766_Y [2] $procmux$1766_Y [2] $procmux$1766_Y [2] $procmux$1766_Y [2] $procmux$1766_Y [2] $procmux$1766_Y [2] $procmux$1766_Y [2] $procmux$1766_Y [2] $procmux$1766_Y [2] $procmux$1766_Y [2] $procmux$1766_Y [2] $procmux$1766_Y [2] $procmux$1766_Y [2] $procmux$1766_Y [2] $procmux$1766_Y [2] $procmux$1766_Y [2] $procmux$1766_Y [2] $procmux$1766_Y [2] }
    Consolidated identical input bits for $mux cell $procmux$1808:
      Old ports: A=21'000000000000010111000, B={ $neg$rtl.v:1068$965_Y [6] $neg$rtl.v:1068$965_Y [6] $neg$rtl.v:1068$965_Y [6] $neg$rtl.v:1068$965_Y [6] $neg$rtl.v:1068$965_Y [6] $neg$rtl.v:1068$965_Y [6] $neg$rtl.v:1068$965_Y [6] $neg$rtl.v:1068$965_Y [6] $neg$rtl.v:1068$965_Y [6] $neg$rtl.v:1068$965_Y [6] $neg$rtl.v:1068$965_Y [6] $neg$rtl.v:1068$965_Y [6] $neg$rtl.v:1068$965_Y [6] $neg$rtl.v:1068$965_Y [6] $neg$rtl.v:1068$965_Y }, Y=$procmux$1808_Y
      New ports: A=8'10111000, B={ $neg$rtl.v:1068$965_Y [6] $neg$rtl.v:1068$965_Y }, Y=$procmux$1808_Y [7:0]
      New connections: $procmux$1808_Y [20:8] = { $procmux$1808_Y [6] $procmux$1808_Y [6] $procmux$1808_Y [6] $procmux$1808_Y [6] $procmux$1808_Y [6] $procmux$1808_Y [6] $procmux$1808_Y [6] $procmux$1808_Y [6] $procmux$1808_Y [6] $procmux$1808_Y [6] $procmux$1808_Y [6] $procmux$1808_Y [6] $procmux$1808_Y [6] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1015$893:
      Old ports: A={ 7'0000000 \reg116 [0] }, B=8'10110100, Y=$ternary$rtl.v:1015$893_Y
      New ports: A={ 1'0 \reg116 [0] }, B=2'10, Y={ $ternary$rtl.v:1015$893_Y [2] $ternary$rtl.v:1015$893_Y [0] }
      New connections: { $ternary$rtl.v:1015$893_Y [7:3] $ternary$rtl.v:1015$893_Y [1] } = { $ternary$rtl.v:1015$893_Y [2] 1'0 $ternary$rtl.v:1015$893_Y [2] $ternary$rtl.v:1015$893_Y [2] 2'00 }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1063$955:
      Old ports: A=8'10100000, B=8'01000011, Y=$ternary$rtl.v:1063$955_Y
      New ports: A=2'10, B=2'01, Y={ $ternary$rtl.v:1063$955_Y [5] $ternary$rtl.v:1063$955_Y [0] }
      New connections: { $ternary$rtl.v:1063$955_Y [7:6] $ternary$rtl.v:1063$955_Y [4:1] } = { $ternary$rtl.v:1063$955_Y [5] $ternary$rtl.v:1063$955_Y [0] 3'000 $ternary$rtl.v:1063$955_Y [0] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1066$962:
      Old ports: A={ \reg121 [4] \reg121 [4] \reg121 [4] \reg121 [4] \reg121 [4] \reg121 [4] \reg121 [4] \reg121 [4] \reg121 [4] \reg121 [4] \reg121 [4] \reg121 [4] \reg121 [4] }, B={ 12'000000000000 $auto$wreduce.cc:455:run$2314 [0] }, Y=$ternary$rtl.v:1066$962_Y
      New ports: A={ \reg121 [4] \reg121 [4] }, B={ 1'0 $auto$wreduce.cc:455:run$2314 [0] }, Y=$ternary$rtl.v:1066$962_Y [1:0]
      New connections: $ternary$rtl.v:1066$962_Y [12:2] = { $ternary$rtl.v:1066$962_Y [1] $ternary$rtl.v:1066$962_Y [1] $ternary$rtl.v:1066$962_Y [1] $ternary$rtl.v:1066$962_Y [1] $ternary$rtl.v:1066$962_Y [1] $ternary$rtl.v:1066$962_Y [1] $ternary$rtl.v:1066$962_Y [1] $ternary$rtl.v:1066$962_Y [1] $ternary$rtl.v:1066$962_Y [1] $ternary$rtl.v:1066$962_Y [1] $ternary$rtl.v:1066$962_Y [1] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1068$968:
      Old ports: A={ 17'00000000000000000 $auto$wreduce.cc:455:run$2303 [0] }, B={ \reg133 [15] \reg133 [15] \reg133 [15:0] }, Y=$ternary$rtl.v:1068$968_Y
      New ports: A={ 15'000000000000000 $auto$wreduce.cc:455:run$2303 [0] }, B=\reg133 [15:0], Y=$ternary$rtl.v:1068$968_Y [15:0]
      New connections: $ternary$rtl.v:1068$968_Y [17:16] = { $ternary$rtl.v:1068$968_Y [15] $ternary$rtl.v:1068$968_Y [15] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1085$988:
      Old ports: A={ 7'0000000 $auto$wreduce.cc:455:run$2316 [0] }, B={ 3'000 \reg134 [4:0] }, Y=$auto$wreduce.cc:455:run$2332 [7:0]
      New ports: A={ 4'0000 $auto$wreduce.cc:455:run$2316 [0] }, B=\reg134 [4:0], Y=$auto$wreduce.cc:455:run$2332 [4:0]
      New connections: $auto$wreduce.cc:455:run$2332 [7:5] = 3'000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1102$1007:
      Old ports: A={ \reg113 [0] \reg113 [0] \reg113 [0] \reg113 [0] \reg113 [0] \reg113 [0] \reg113 [0] \reg113 [0] \reg113 [0] \reg113 [0] \reg113 [0] }, B=11'00000000000, Y=$auto$wreduce.cc:455:run$2334 [10:0]
      New ports: A=\reg113 [0], B=1'0, Y=$auto$wreduce.cc:455:run$2334 [0]
      New connections: $auto$wreduce.cc:455:run$2334 [10:1] = { $auto$wreduce.cc:455:run$2334 [0] $auto$wreduce.cc:455:run$2334 [0] $auto$wreduce.cc:455:run$2334 [0] $auto$wreduce.cc:455:run$2334 [0] $auto$wreduce.cc:455:run$2334 [0] $auto$wreduce.cc:455:run$2334 [0] $auto$wreduce.cc:455:run$2334 [0] $auto$wreduce.cc:455:run$2334 [0] $auto$wreduce.cc:455:run$2334 [0] $auto$wreduce.cc:455:run$2334 [0] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1108$1024:
      Old ports: A=6'000000, B={ 5'00000 $auto$rtlil.cc:1864:Xor$2553 }, Y=$auto$wreduce.cc:455:run$2335 [5:0]
      New ports: A=1'0, B=$auto$rtlil.cc:1864:Xor$2553, Y=$auto$wreduce.cc:455:run$2335 [0]
      New connections: $auto$wreduce.cc:455:run$2335 [5:1] = 5'00000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1150$1101:
      Old ports: A={ 5'00000 \reg151 [4:1] }, B={ 8'10011101 $ternary$rtl.v:1150$1099_Y }, Y=$auto$wreduce.cc:455:run$2341 [8:0]
      New ports: A={ 1'0 \reg151 [4:1] }, B={ 4'1101 $ternary$rtl.v:1150$1099_Y }, Y=$auto$wreduce.cc:455:run$2341 [4:0]
      New connections: $auto$wreduce.cc:455:run$2341 [8:5] = { $auto$wreduce.cc:455:run$2341 [4] 2'00 $auto$wreduce.cc:455:run$2341 [4] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1162$1115:
      Old ports: A={ \reg113 [0] \reg113 [0] \reg113 [0] }, B={ 2'00 $auto$rtlil.cc:1836:ReduceOr$2616 }, Y=$auto$wreduce.cc:455:run$2343 [2:0]
      New ports: A={ \reg113 [0] \reg113 [0] }, B={ 1'0 $auto$rtlil.cc:1836:ReduceOr$2616 }, Y=$auto$wreduce.cc:455:run$2343 [1:0]
      New connections: $auto$wreduce.cc:455:run$2343 [2] = $auto$wreduce.cc:455:run$2343 [1]
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1187$1155:
      Old ports: A={ 3'000 \reg117 }, B={ \wire181 [7] \wire181 [7] \wire181 [7] \wire181 [7] \wire181 [3:0] }, Y=$ternary$rtl.v:1187$1155_Y
      New ports: A={ 1'0 \reg117 }, B={ \wire181 [7] \wire181 [7] \wire181 [3:0] }, Y=$ternary$rtl.v:1187$1155_Y [5:0]
      New connections: $ternary$rtl.v:1187$1155_Y [7:6] = { $ternary$rtl.v:1187$1155_Y [5] $ternary$rtl.v:1187$1155_Y [5] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:869$701:
      Old ports: A={ 2'00 \wire110 }, B={ \reg113 [0] \reg113 [0] \reg113 [0] \reg113 [0] \reg113 [0] \reg113 [0] \reg113 [0] \reg113 [0] \reg113 [0] \reg113 [0] \reg113 [0] }, Y=$ternary$rtl.v:869$701_Y
      New ports: A={ 1'0 \wire110 }, B={ \reg113 [0] \reg113 [0] \reg113 [0] \reg113 [0] \reg113 [0] \reg113 [0] \reg113 [0] \reg113 [0] \reg113 [0] \reg113 [0] }, Y=$ternary$rtl.v:869$701_Y [9:0]
      New connections: $ternary$rtl.v:869$701_Y [10] = $ternary$rtl.v:869$701_Y [9]
    Consolidated identical input bits for $mux cell $ternary$rtl.v:871$704:
      Old ports: A=8'10110000, B={ 3'000 \reg117 }, Y=$ternary$rtl.v:871$704_Y
      New ports: A=6'110000, B={ 1'0 \reg117 }, Y=$ternary$rtl.v:871$704_Y [5:0]
      New connections: $ternary$rtl.v:871$704_Y [7:6] = { $ternary$rtl.v:871$704_Y [5] 1'0 }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:878$722:
      Old ports: A={ 10'0000000000 $auto$opt_expr.cc:189:group_cell_inputs$3414 }, B={ 11'00000000000 \reg120 }, Y=$auto$wreduce.cc:455:run$2347 [14:0]
      New ports: A=$auto$opt_expr.cc:189:group_cell_inputs$3414, B={ 1'0 \reg120 }, Y=$auto$wreduce.cc:455:run$2347 [4:0]
      New connections: $auto$wreduce.cc:455:run$2347 [14:5] = 10'0000000000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:880$728:
      Old ports: A=\wire109, B={ \wire109 [19:5] $auto$opt_expr.cc:189:group_cell_inputs$3418 }, Y=$ternary$rtl.v:880$728_Y
      New ports: A=\wire109 [4:0], B=$auto$opt_expr.cc:189:group_cell_inputs$3418, Y=$ternary$rtl.v:880$728_Y [4:0]
      New connections: $ternary$rtl.v:880$728_Y [19:5] = \wire109 [19:5]
    Consolidated identical input bits for $mux cell $ternary$rtl.v:912$787:
      Old ports: A={ 18'101101000000000000 $ternary$rtl.v:912$786_Y [6:0] }, B={ 24'000000000000000000000000 $reduce_xnor$rtl.v:911$783_Y [0] }, Y=$ternary$rtl.v:912$787_Y
      New ports: A={ 1'1 $ternary$rtl.v:912$786_Y [6:0] }, B={ 7'0000000 $reduce_xnor$rtl.v:911$783_Y [0] }, Y={ $ternary$rtl.v:912$787_Y [19] $ternary$rtl.v:912$787_Y [6:0] }
      New connections: { $ternary$rtl.v:912$787_Y [24:20] $ternary$rtl.v:912$787_Y [18:7] } = { $ternary$rtl.v:912$787_Y [19] 1'0 $ternary$rtl.v:912$787_Y [19] $ternary$rtl.v:912$787_Y [19] 13'0000000000000 }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:913$790:
      Old ports: A={ 7'0000000 \wire108 [0] }, B=8'10101111, Y=$ternary$rtl.v:913$790_Y
      New ports: A={ 1'0 \wire108 [0] }, B=2'11, Y=$ternary$rtl.v:913$790_Y [1:0]
      New connections: $ternary$rtl.v:913$790_Y [7:2] = { $ternary$rtl.v:913$790_Y [1] 1'0 $ternary$rtl.v:913$790_Y [1] 1'0 $ternary$rtl.v:913$790_Y [1] $ternary$rtl.v:913$790_Y [1] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:918$799:
      Old ports: A={ 7'0000000 $reduce_or$rtl.v:918$798_Y [0] }, B=8'10101110, Y=$ternary$rtl.v:918$799_Y [7:0]
      New ports: A={ 1'0 $reduce_or$rtl.v:918$798_Y [0] }, B=2'10, Y=$ternary$rtl.v:918$799_Y [1:0]
      New connections: $ternary$rtl.v:918$799_Y [7:2] = { $ternary$rtl.v:918$799_Y [1] 1'0 $ternary$rtl.v:918$799_Y [1] 1'0 $ternary$rtl.v:918$799_Y [1] $ternary$rtl.v:918$799_Y [1] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:948$821:
      Old ports: A={ 15'000000000000000 \reg115 [1:0] }, B={ \reg121 [4] \reg121 [4] \reg121 [4] \reg121 [4] \reg121 [4] \reg121 [4] \reg121 [4] \reg121 [4] \reg121 [4] \reg121 [4] \reg121 [4] \reg121 [4] \reg121 [4] \reg121 [4] \reg121 [4] \reg121 [4] \reg121 [4] }, Y=$ternary$rtl.v:948$821_Y
      New ports: A={ 1'0 \reg115 [1:0] }, B={ \reg121 [4] \reg121 [4] \reg121 [4] }, Y=$ternary$rtl.v:948$821_Y [2:0]
      New connections: $ternary$rtl.v:948$821_Y [16:3] = { $ternary$rtl.v:948$821_Y [2] $ternary$rtl.v:948$821_Y [2] $ternary$rtl.v:948$821_Y [2] $ternary$rtl.v:948$821_Y [2] $ternary$rtl.v:948$821_Y [2] $ternary$rtl.v:948$821_Y [2] $ternary$rtl.v:948$821_Y [2] $ternary$rtl.v:948$821_Y [2] $ternary$rtl.v:948$821_Y [2] $ternary$rtl.v:948$821_Y [2] $ternary$rtl.v:948$821_Y [2] $ternary$rtl.v:948$821_Y [2] $ternary$rtl.v:948$821_Y [2] $ternary$rtl.v:948$821_Y [2] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:970$837:
      Old ports: A=6'110000, B=6'011111, Y=$auto$wreduce.cc:455:run$2350 [5:0]
      New ports: A=2'10, B=2'01, Y={ $auto$wreduce.cc:455:run$2350 [5] $auto$wreduce.cc:455:run$2350 [0] }
      New connections: $auto$wreduce.cc:455:run$2350 [4:1] = { 1'1 $auto$wreduce.cc:455:run$2350 [0] $auto$wreduce.cc:455:run$2350 [0] $auto$wreduce.cc:455:run$2350 [0] }
  Optimizing cells in module \module106.
    Consolidated identical input bits for $mux cell $procmux$1709:
      Old ports: A=$procmux$1706_Y, B={ 6'000000 \reg127 [12:8] }, Y=$0\reg154[10:0]
      New ports: A={ $procmux$1706_Y [3] $procmux$1706_Y [3] $procmux$1706_Y [3:0] }, B={ 1'0 \reg127 [12:8] }, Y=$0\reg154[10:0] [5:0]
      New connections: $0\reg154[10:0] [10:6] = { $0\reg154[10:0] [5] $0\reg154[10:0] [5] $0\reg154[10:0] [5] $0\reg154[10:0] [5] $0\reg154[10:0] [5] }
    Consolidated identical input bits for $mux cell $procmux$1715:
      Old ports: A=$procmux$1712_Y, B={ 11'00000000000 $ternary$rtl.v:1048$931_Y }, Y=$0\reg155[14:0]
      New ports: A=$procmux$1712_Y [6:0], B={ 3'000 $ternary$rtl.v:1048$931_Y }, Y=$0\reg155[14:0] [6:0]
      New connections: $0\reg155[14:0] [14:7] = { $0\reg155[14:0] [6] $0\reg155[14:0] [6] $0\reg155[14:0] [6] $0\reg155[14:0] [6] $0\reg155[14:0] [6] $0\reg155[14:0] [6] $0\reg155[14:0] [6] $0\reg155[14:0] [6] }
    Consolidated identical input bits for $mux cell $procmux$1769:
      Old ports: A=$procmux$1766_Y, B={ 21'000000000000000000000 $auto$wreduce.cc:455:run$2321 [0] }, Y=$0\reg146[21:0]
      New ports: A=$procmux$1766_Y [2:0], B={ 2'00 $auto$wreduce.cc:455:run$2321 [0] }, Y=$0\reg146[21:0] [2:0]
      New connections: $0\reg146[21:0] [21:3] = { $0\reg146[21:0] [2] $0\reg146[21:0] [2] $0\reg146[21:0] [2] $0\reg146[21:0] [2] $0\reg146[21:0] [2] $0\reg146[21:0] [2] $0\reg146[21:0] [2] $0\reg146[21:0] [2] $0\reg146[21:0] [2] $0\reg146[21:0] [2] $0\reg146[21:0] [2] $0\reg146[21:0] [2] $0\reg146[21:0] [2] $0\reg146[21:0] [2] $0\reg146[21:0] [2] $0\reg146[21:0] [2] $0\reg146[21:0] [2] $0\reg146[21:0] [2] $0\reg146[21:0] [2] }
    Consolidated identical input bits for $mux cell $procmux$1811:
      Old ports: A=$procmux$1808_Y, B={ 5'00000 \reg114 }, Y=$0\reg135[20:0]
      New ports: A={ $procmux$1808_Y [6] $procmux$1808_Y [6] $procmux$1808_Y [6] $procmux$1808_Y [6] $procmux$1808_Y [6] $procmux$1808_Y [6] $procmux$1808_Y [6] $procmux$1808_Y [6] $procmux$1808_Y [6] $procmux$1808_Y [7:0] }, B={ 1'0 \reg114 }, Y=$0\reg135[20:0] [16:0]
      New connections: $0\reg135[20:0] [20:17] = { $0\reg135[20:0] [16] $0\reg135[20:0] [16] $0\reg135[20:0] [16] $0\reg135[20:0] [16] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1187$1156:
      Old ports: A=8'10111001, B=$ternary$rtl.v:1187$1155_Y, Y=$ternary$rtl.v:1187$1156_Y
      New ports: A=7'0111001, B={ $ternary$rtl.v:1187$1155_Y [5] $ternary$rtl.v:1187$1155_Y [5:0] }, Y=$ternary$rtl.v:1187$1156_Y [6:0]
      New connections: $ternary$rtl.v:1187$1156_Y [7] = $ternary$rtl.v:1187$1156_Y [5]
    Consolidated identical input bits for $mux cell $ternary$rtl.v:913$792:
      Old ports: A={ 17'00000000000000000 $ternary$rtl.v:913$790_Y }, B=$ternary$rtl.v:912$787_Y, Y=$ternary$rtl.v:913$792_Y
      New ports: A={ 1'0 $ternary$rtl.v:913$790_Y [1] 1'0 $ternary$rtl.v:913$790_Y [1] 1'0 $ternary$rtl.v:913$790_Y [1] $ternary$rtl.v:913$790_Y [1] $ternary$rtl.v:913$790_Y [1:0] }, B={ $ternary$rtl.v:912$787_Y [19] 1'0 $ternary$rtl.v:912$787_Y [6:0] }, Y={ $ternary$rtl.v:913$792_Y [19] $ternary$rtl.v:913$792_Y [7:0] }
      New connections: { $ternary$rtl.v:913$792_Y [24:20] $ternary$rtl.v:913$792_Y [18:8] } = { $ternary$rtl.v:913$792_Y [19] 1'0 $ternary$rtl.v:913$792_Y [19] $ternary$rtl.v:913$792_Y [19] 12'000000000000 }
  Optimizing cells in module \module106.
  Optimizing cells in module \module13.
    Consolidated identical input bits for $mux cell $procmux$2075:
      Old ports: A={ 12'000000000000 $ternary$rtl.v:188$146_Y }, B={ 12'111111111111 $auto$opt_expr.cc:189:group_cell_inputs$3452 $auto$opt_expr.cc:189:group_cell_inputs$3450 }, Y=$0\reg22[21:0]
      New ports: A={ 1'0 $ternary$rtl.v:188$146_Y }, B={ 1'1 $auto$opt_expr.cc:189:group_cell_inputs$3452 $auto$opt_expr.cc:189:group_cell_inputs$3450 }, Y=$0\reg22[21:0] [10:0]
      New connections: $0\reg22[21:0] [21:11] = { $0\reg22[21:0] [10] $0\reg22[21:0] [10] $0\reg22[21:0] [10] $0\reg22[21:0] [10] $0\reg22[21:0] [10] $0\reg22[21:0] [10] $0\reg22[21:0] [10] $0\reg22[21:0] [10] $0\reg22[21:0] [10] $0\reg22[21:0] [10] $0\reg22[21:0] [10] }
    Consolidated identical input bits for $mux cell $procmux$2084:
      Old ports: A={ 14'00000000000000 $auto$wreduce.cc:455:run$2375 [7:0] }, B={ \wire17 [9] \wire17 [9] \wire17 [9] \wire17 [9] \wire17 [9] \wire17 [9] \wire17 [9] \wire17 [9] \wire17 [9] \wire17 [9] \wire17 [9] \wire17 [9] \wire17 }, Y=$0\reg23[21:0]
      New ports: A={ 2'00 $auto$wreduce.cc:455:run$2375 [7:0] }, B=\wire17, Y=$0\reg23[21:0] [9:0]
      New connections: $0\reg23[21:0] [21:10] = { $0\reg23[21:0] [9] $0\reg23[21:0] [9] $0\reg23[21:0] [9] $0\reg23[21:0] [9] $0\reg23[21:0] [9] $0\reg23[21:0] [9] $0\reg23[21:0] [9] $0\reg23[21:0] [9] $0\reg23[21:0] [9] $0\reg23[21:0] [9] $0\reg23[21:0] [9] $0\reg23[21:0] [9] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:235$217:
      Old ports: A=8'10100011, B=8'00000000, Y=$auto$wreduce.cc:455:run$2379 [7:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:455:run$2379 [0]
      New connections: $auto$wreduce.cc:455:run$2379 [7:1] = { $auto$wreduce.cc:455:run$2379 [0] 1'0 $auto$wreduce.cc:455:run$2379 [0] 3'000 $auto$wreduce.cc:455:run$2379 [0] }
  Optimizing cells in module \module13.
  Optimizing cells in module \module207.
    Consolidated identical input bits for $mux cell $procmux$1985:
      Old ports: A={ $procmux$1983_Y [10] $procmux$1983_Y [10] $procmux$1983_Y [10] $procmux$1983_Y [10] $procmux$1983_Y [10] $procmux$1983_Y [10] $procmux$1983_Y [10] $procmux$1983_Y [10] $procmux$1983_Y [10] $procmux$1983_Y [10] $procmux$1983_Y [10] }, B={ 8'10011100 \wire210 }, Y=$0\reg266[10:0]
      New ports: A={ $procmux$1983_Y [10] $procmux$1983_Y [10] $procmux$1983_Y [10] $procmux$1983_Y [10] $procmux$1983_Y [10] }, B={ 2'10 \wire210 }, Y={ $0\reg266[10:0] [5] $0\reg266[10:0] [3:0] }
      New connections: { $0\reg266[10:0] [10:6] $0\reg266[10:0] [4] } = { $0\reg266[10:0] [5] $0\reg266[10:0] [3] $0\reg266[10:0] [3] $0\reg266[10:0] [5] $0\reg266[10:0] [5] $0\reg266[10:0] [3] }
    Consolidated identical input bits for $mux cell $procmux$1991:
      Old ports: A={ 7'0000000 $auto$rtlil.cc:1836:ReduceOr$3073 }, B={ 7'0000000 $auto$wreduce.cc:455:run$2424 [0] }, Y=$0\reg267[7:0]
      New ports: A=$auto$rtlil.cc:1836:ReduceOr$3073, B=$auto$wreduce.cc:455:run$2424 [0], Y=$0\reg267[7:0] [0]
      New connections: $0\reg267[7:0] [7:1] = 7'0000000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:401$273:
      Old ports: A=8'10100101, B=8'00000000, Y=$ternary$rtl.v:401$273_Y
      New ports: A=1'1, B=1'0, Y=$ternary$rtl.v:401$273_Y [0]
      New connections: $ternary$rtl.v:401$273_Y [7:1] = { $ternary$rtl.v:401$273_Y [0] 1'0 $ternary$rtl.v:401$273_Y [0] 2'00 $ternary$rtl.v:401$273_Y [0] 1'0 }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:411$282:
      Old ports: A={ \wire208 [9] \wire208 [9] \wire208 [9:4] }, B={ 7'0000000 \wire212 [0] }, Y=$ternary$rtl.v:411$282_Y [7:0]
      New ports: A=\wire208 [9:4], B={ 5'00000 \wire212 [0] }, Y=$ternary$rtl.v:411$282_Y [5:0]
      New connections: $ternary$rtl.v:411$282_Y [7:6] = { $ternary$rtl.v:411$282_Y [5] $ternary$rtl.v:411$282_Y [5] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:444$287:
      Old ports: A={ \wire214 [19] \wire214 [19] \wire214 [19] \wire214 [19] \wire214 [19] \wire214 [19] \wire214 [19] }, B=7'0000000, Y=$ternary$rtl.v:444$287_Y [6:0]
      New ports: A=\wire214 [19], B=1'0, Y=$ternary$rtl.v:444$287_Y [0]
      New connections: $ternary$rtl.v:444$287_Y [6:1] = { $ternary$rtl.v:444$287_Y [0] $ternary$rtl.v:444$287_Y [0] $ternary$rtl.v:444$287_Y [0] $ternary$rtl.v:444$287_Y [0] $ternary$rtl.v:444$287_Y [0] $ternary$rtl.v:444$287_Y [0] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:452$308:
      Old ports: A={ \wire214 [19] \wire214 [19] \wire214 [19] \wire214 [19] \wire214 [19] \wire214 [19] \wire214 [19] }, B={ 6'000001 \wire216 [0] }, Y=$ternary$rtl.v:452$308_Y [6:0]
      New ports: A={ \wire214 [19] \wire214 [19] \wire214 [19] }, B={ 2'01 \wire216 [0] }, Y=$ternary$rtl.v:452$308_Y [2:0]
      New connections: $ternary$rtl.v:452$308_Y [6:3] = { $ternary$rtl.v:452$308_Y [2] $ternary$rtl.v:452$308_Y [2] $ternary$rtl.v:452$308_Y [2] $ternary$rtl.v:452$308_Y [2] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:459$330:
      Old ports: A=9'000000001, B={ \reg220 [0] 8'00000000 }, Y={ $ternary$rtl.v:459$330_Y [8:1] $auto$opt_expr.cc:189:group_cell_inputs$3478 }
      New ports: A=2'01, B={ \reg220 [0] 1'0 }, Y={ $ternary$rtl.v:459$330_Y [8] $auto$opt_expr.cc:189:group_cell_inputs$3478 }
      New connections: $ternary$rtl.v:459$330_Y [7:1] = 7'0000000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:459$337:
      Old ports: A=10'0000000000, B={ 9'111111111 $auto$opt_expr.cc:189:group_cell_inputs$3478 }, Y=$ternary$rtl.v:459$337_Y [9:0]
      New ports: A=2'00, B={ 1'1 $auto$opt_expr.cc:189:group_cell_inputs$3478 }, Y=$ternary$rtl.v:459$337_Y [1:0]
      New connections: $ternary$rtl.v:459$337_Y [9:2] = { $ternary$rtl.v:459$337_Y [1] $ternary$rtl.v:459$337_Y [1] $ternary$rtl.v:459$337_Y [1] $ternary$rtl.v:459$337_Y [1] $ternary$rtl.v:459$337_Y [1] $ternary$rtl.v:459$337_Y [1] $ternary$rtl.v:459$337_Y [1] $ternary$rtl.v:459$337_Y [1] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:546$441:
      Old ports: A={ 19'0000000000000000000 $auto$rtlil.cc:1832:Not$3040 }, B=20'00000000000000000000, Y=$ternary$rtl.v:546$441_Y
      New ports: A=$auto$rtlil.cc:1832:Not$3040, B=1'0, Y=$ternary$rtl.v:546$441_Y [0]
      New connections: $ternary$rtl.v:546$441_Y [19:1] = 19'0000000000000000000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:583$487:
      Old ports: A=8'10100100, B=8'00000000, Y=$auto$wreduce.cc:455:run$2435 [7:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:455:run$2435 [2]
      New connections: { $auto$wreduce.cc:455:run$2435 [7:3] $auto$wreduce.cc:455:run$2435 [1:0] } = { $auto$wreduce.cc:455:run$2435 [2] 1'0 $auto$wreduce.cc:455:run$2435 [2] 4'0000 }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:594$510:
      Old ports: A=3'001, B={ 2'00 $auto$rtlil.cc:1832:Not$2912 }, Y=$0\reg262[18:0]
      New ports: A=1'1, B=$auto$rtlil.cc:1832:Not$2912, Y=$0\reg262[18:0] [0]
      New connections: $0\reg262[18:0] [2:1] = 2'00
    Consolidated identical input bits for $mux cell $ternary$rtl.v:597$514:
      Old ports: A=15'000000010011101, B=15'000000000000000, Y=$ternary$rtl.v:597$514_Y
      New ports: A=1'1, B=1'0, Y=$ternary$rtl.v:597$514_Y [0]
      New connections: $ternary$rtl.v:597$514_Y [14:1] = { 7'0000000 $ternary$rtl.v:597$514_Y [0] 2'00 $ternary$rtl.v:597$514_Y [0] $ternary$rtl.v:597$514_Y [0] $ternary$rtl.v:597$514_Y [0] 1'0 }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:599$522:
      Old ports: A=3'001, B=3'000, Y=$ternary$rtl.v:599$522_Y
      New ports: A=1'1, B=1'0, Y=$ternary$rtl.v:599$522_Y [0]
      New connections: $ternary$rtl.v:599$522_Y [2:1] = 2'00
    Consolidated identical input bits for $mux cell $ternary$rtl.v:660$605:
      Old ports: A=16'1010001110011111, B={ 15'000000000000000 $auto$wreduce.cc:455:run$2442 [0] }, Y=$ternary$rtl.v:660$605_Y
      New ports: A=2'11, B={ 1'0 $auto$wreduce.cc:455:run$2442 [0] }, Y=$ternary$rtl.v:660$605_Y [1:0]
      New connections: $ternary$rtl.v:660$605_Y [15:2] = { $ternary$rtl.v:660$605_Y [1] 1'0 $ternary$rtl.v:660$605_Y [1] 3'000 $ternary$rtl.v:660$605_Y [1] $ternary$rtl.v:660$605_Y [1] $ternary$rtl.v:660$605_Y [1] 2'00 $ternary$rtl.v:660$605_Y [1] $ternary$rtl.v:660$605_Y [1] $ternary$rtl.v:660$605_Y [1] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:664$609:
      Old ports: A=8'10111010, B={ 7'0000000 $auto$wreduce.cc:455:run$2412 [0] }, Y=$auto$wreduce.cc:455:run$2443 [7:0]
      New ports: A=2'10, B={ 1'0 $auto$wreduce.cc:455:run$2412 [0] }, Y=$auto$wreduce.cc:455:run$2443 [1:0]
      New connections: $auto$wreduce.cc:455:run$2443 [7:2] = { $auto$wreduce.cc:455:run$2443 [1] 1'0 $auto$wreduce.cc:455:run$2443 [1] $auto$wreduce.cc:455:run$2443 [1] $auto$wreduce.cc:455:run$2443 [1] 1'0 }
  Optimizing cells in module \module207.
    New input vector for $reduce_or cell $reduce_or$rtl.v:599$523: $ternary$rtl.v:599$522_Y [0]
    Consolidated identical input bits for $mux cell $ternary$rtl.v:546$443:
      Old ports: A=20'00000000000000000000, B=$ternary$rtl.v:546$441_Y, Y=$ternary$rtl.v:546$443_Y
      New ports: A=1'0, B=$ternary$rtl.v:546$441_Y [0], Y=$ternary$rtl.v:546$443_Y [0]
      New connections: $ternary$rtl.v:546$443_Y [19:1] = 19'0000000000000000000
  Optimizing cells in module \module207.
  Optimizing cells in module \module30.
    Consolidated identical input bits for $mux cell $procmux$1562:
      Old ports: A=20'00000000000000000000, B={ \reg48 [10] \reg48 [10] \reg48 [10] \reg48 [10] \reg48 [10] \reg48 [10] \reg48 [10] \reg48 [10] \reg48 [10] \reg48 }, Y=$0\reg49[19:0]
      New ports: A=11'00000000000, B=\reg48, Y=$0\reg49[19:0] [10:0]
      New connections: $0\reg49[19:0] [19:11] = { $0\reg49[19:0] [10] $0\reg49[19:0] [10] $0\reg49[19:0] [10] $0\reg49[19:0] [10] $0\reg49[19:0] [10] $0\reg49[19:0] [10] $0\reg49[19:0] [10] $0\reg49[19:0] [10] $0\reg49[19:0] [10] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1446$1417:
      Old ports: A={ \wire31 [8] \wire31 [8] \wire31 [8] \wire31 [8] \wire31 }, B={ $auto$rtlil.cc:1836:ReduceOr$3165 $auto$rtlil.cc:1836:ReduceOr$3165 $auto$rtlil.cc:1836:ReduceOr$3165 $auto$rtlil.cc:1836:ReduceOr$3165 $auto$rtlil.cc:1836:ReduceOr$3165 $auto$rtlil.cc:1836:ReduceOr$3165 $auto$rtlil.cc:1836:ReduceOr$3165 $auto$rtlil.cc:1836:ReduceOr$3165 $auto$rtlil.cc:1836:ReduceOr$3165 $auto$rtlil.cc:1836:ReduceOr$3165 $auto$rtlil.cc:1836:ReduceOr$3165 $auto$rtlil.cc:1836:ReduceOr$3165 $auto$rtlil.cc:1836:ReduceOr$3165 }, Y=\wire41
      New ports: A=\wire31, B={ $auto$rtlil.cc:1836:ReduceOr$3165 $auto$rtlil.cc:1836:ReduceOr$3165 $auto$rtlil.cc:1836:ReduceOr$3165 $auto$rtlil.cc:1836:ReduceOr$3165 $auto$rtlil.cc:1836:ReduceOr$3165 $auto$rtlil.cc:1836:ReduceOr$3165 $auto$rtlil.cc:1836:ReduceOr$3165 $auto$rtlil.cc:1836:ReduceOr$3165 $auto$rtlil.cc:1836:ReduceOr$3165 }, Y=\wire41 [8:0]
      New connections: \wire41 [12:9] = { \wire41 [8] \wire41 [8] \wire41 [8] \wire41 [8] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1490$1475:
      Old ports: A=5'00111, B=5'11101, Y=$ternary$rtl.v:1490$1475_Y [4:0]
      New ports: A=2'01, B=2'10, Y={ $ternary$rtl.v:1490$1475_Y [3] $ternary$rtl.v:1490$1475_Y [1] }
      New connections: { $ternary$rtl.v:1490$1475_Y [4] $ternary$rtl.v:1490$1475_Y [2] $ternary$rtl.v:1490$1475_Y [0] } = { $ternary$rtl.v:1490$1475_Y [3] 2'11 }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1526$1534:
      Old ports: A={ \reg50 [6] \reg50 [6] \reg50 [6] \reg50 [6] \reg50 [6] \reg50 [6] \reg50 [6] \reg50 [6] \reg50 [6] \reg50 }, B={ $auto$rtlil.cc:1836:ReduceOr$3139 $auto$rtlil.cc:1836:ReduceOr$3139 $auto$rtlil.cc:1836:ReduceOr$3139 $auto$rtlil.cc:1836:ReduceOr$3139 $auto$rtlil.cc:1836:ReduceOr$3139 $auto$rtlil.cc:1836:ReduceOr$3139 $auto$rtlil.cc:1836:ReduceOr$3139 $auto$rtlil.cc:1836:ReduceOr$3139 $auto$rtlil.cc:1836:ReduceOr$3139 $auto$rtlil.cc:1836:ReduceOr$3139 $auto$rtlil.cc:1836:ReduceOr$3139 $auto$rtlil.cc:1836:ReduceOr$3139 $auto$rtlil.cc:1836:ReduceOr$3139 $auto$rtlil.cc:1836:ReduceOr$3139 $auto$rtlil.cc:1836:ReduceOr$3139 $auto$rtlil.cc:1836:ReduceOr$3139 }, Y=$ternary$rtl.v:1526$1534_Y
      New ports: A=\reg50, B={ $auto$rtlil.cc:1836:ReduceOr$3139 $auto$rtlil.cc:1836:ReduceOr$3139 $auto$rtlil.cc:1836:ReduceOr$3139 $auto$rtlil.cc:1836:ReduceOr$3139 $auto$rtlil.cc:1836:ReduceOr$3139 $auto$rtlil.cc:1836:ReduceOr$3139 $auto$rtlil.cc:1836:ReduceOr$3139 }, Y=$ternary$rtl.v:1526$1534_Y [6:0]
      New connections: $ternary$rtl.v:1526$1534_Y [15:7] = { $ternary$rtl.v:1526$1534_Y [6] $ternary$rtl.v:1526$1534_Y [6] $ternary$rtl.v:1526$1534_Y [6] $ternary$rtl.v:1526$1534_Y [6] $ternary$rtl.v:1526$1534_Y [6] $ternary$rtl.v:1526$1534_Y [6] $ternary$rtl.v:1526$1534_Y [6] $ternary$rtl.v:1526$1534_Y [6] $ternary$rtl.v:1526$1534_Y [6] }
  Optimizing cells in module \module30.
  Optimizing cells in module \module73.
    Consolidated identical input bits for $mux cell $procmux$1643:
      Old ports: A={ 6'000000 $auto$rtlil.cc:1832:Not$3286 }, B={ $ternary$rtl.v:1313$1308_Y [1] $ternary$rtl.v:1313$1308_Y [1] $ternary$rtl.v:1313$1308_Y [1] $ternary$rtl.v:1313$1308_Y [1] $ternary$rtl.v:1313$1308_Y [1] $ternary$rtl.v:1313$1308_Y }, Y=$procmux$1643_Y
      New ports: A={ 1'0 $auto$rtlil.cc:1832:Not$3286 }, B=$ternary$rtl.v:1313$1308_Y, Y=$procmux$1643_Y [1:0]
      New connections: $procmux$1643_Y [6:2] = { $procmux$1643_Y [1] $procmux$1643_Y [1] $procmux$1643_Y [1] $procmux$1643_Y [1] $procmux$1643_Y [1] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1282$1266:
      Old ports: A=7'1000010, B={ 5'00000 \reg78 [1:0] }, Y=$ternary$rtl.v:1282$1266_Y
      New ports: A=3'110, B={ 1'0 \reg78 [1:0] }, Y={ $ternary$rtl.v:1282$1266_Y [6] $ternary$rtl.v:1282$1266_Y [1:0] }
      New connections: $ternary$rtl.v:1282$1266_Y [5:2] = 4'0000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1327$1322:
      Old ports: A={ 7'0000000 $auto$wreduce.cc:455:run$2486 [0] }, B=8'10110011, Y=$auto$wreduce.cc:455:run$2488 [7:0]
      New ports: A={ 1'0 $auto$wreduce.cc:455:run$2486 [0] }, B=2'11, Y=$auto$wreduce.cc:455:run$2488 [1:0]
      New connections: $auto$wreduce.cc:455:run$2488 [7:2] = { $auto$wreduce.cc:455:run$2488 [1] 1'0 $auto$wreduce.cc:455:run$2488 [1] $auto$wreduce.cc:455:run$2488 [1] 2'00 }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1337$1341:
      Old ports: A={ 2'00 \reg78 }, B={ \wire89 [15] \wire89 [15] \wire89 [15] \wire89 [15] \wire89 [15] \wire89 [15] \wire89 [15] \wire89 [15] }, Y=\wire91
      New ports: A={ 1'0 \reg78 }, B={ \wire89 [15] \wire89 [15] \wire89 [15] \wire89 [15] \wire89 [15] \wire89 [15] \wire89 [15] }, Y=\wire91 [6:0]
      New connections: \wire91 [7] = \wire91 [6]
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1340$1345:
      Old ports: A=6'111101, B={ 5'00000 $auto$rtlil.cc:1836:ReduceOr$3339 }, Y=\wire92
      New ports: A=2'11, B={ 1'0 $auto$rtlil.cc:1836:ReduceOr$3339 }, Y={ \wire92 [2] \wire92 [0] }
      New connections: { \wire92 [5:3] \wire92 [1] } = { \wire92 [2] \wire92 [2] \wire92 [2] 1'0 }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1348$1357:
      Old ports: A={ \reg85 [8] \reg85 [8] \reg85 [8] \reg85 [8] \reg85 [8] \reg85 [8] \reg85 [8] \reg85 [8] \reg85 [8] \reg85 [8] \reg85 [8] \reg85 [8] \reg85 [8:0] }, B={ 12'000000000000 \reg80 }, Y=$ternary$rtl.v:1348$1357_Y
      New ports: A={ \reg85 [8] \reg85 [8:0] }, B={ 1'0 \reg80 }, Y=$ternary$rtl.v:1348$1357_Y [9:0]
      New connections: $ternary$rtl.v:1348$1357_Y [20:10] = { $ternary$rtl.v:1348$1357_Y [9] $ternary$rtl.v:1348$1357_Y [9] $ternary$rtl.v:1348$1357_Y [9] $ternary$rtl.v:1348$1357_Y [9] $ternary$rtl.v:1348$1357_Y [9] $ternary$rtl.v:1348$1357_Y [9] $ternary$rtl.v:1348$1357_Y [9] $ternary$rtl.v:1348$1357_Y [9] $ternary$rtl.v:1348$1357_Y [9] $ternary$rtl.v:1348$1357_Y [9] $ternary$rtl.v:1348$1357_Y [9] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1350$1363:
      Old ports: A={ \wire88 [18] \wire88 [18] \wire88 [18] \wire88 [18] \wire88 [18] \wire88 [18] \wire88 [18] \wire88 [18] \wire88 [18] \wire88 [9:0] }, B={ 6'000000 \reg79 }, Y=$ternary$rtl.v:1350$1363_Y
      New ports: A={ \wire88 [18] \wire88 [18] \wire88 [18] \wire88 [18] \wire88 [9:0] }, B={ 1'0 \reg79 }, Y=$ternary$rtl.v:1350$1363_Y [13:0]
      New connections: $ternary$rtl.v:1350$1363_Y [18:14] = { $ternary$rtl.v:1350$1363_Y [13] $ternary$rtl.v:1350$1363_Y [13] $ternary$rtl.v:1350$1363_Y [13] $ternary$rtl.v:1350$1363_Y [13] $ternary$rtl.v:1350$1363_Y [13] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1353$1374:
      Old ports: A={ 16'0000000000000000 \wire89 [15] \wire89 [15] \wire89 [15] \wire89 [15] \wire89 [15] }, B={ \reg85 [8] \reg85 [8] \reg85 [8] \reg85 [8] \reg85 [8] \reg85 [8] \reg85 [8] \reg85 [8] \reg85 [8] \reg85 [8] \reg85 [8] \reg85 [8] \reg85 [8:0] }, Y=$ternary$rtl.v:1353$1374_Y
      New ports: A={ 4'0000 \wire89 [15] \wire89 [15] \wire89 [15] \wire89 [15] \wire89 [15] }, B=\reg85 [8:0], Y=$ternary$rtl.v:1353$1374_Y [8:0]
      New connections: $ternary$rtl.v:1353$1374_Y [20:9] = { $ternary$rtl.v:1353$1374_Y [8] $ternary$rtl.v:1353$1374_Y [8] $ternary$rtl.v:1353$1374_Y [8] $ternary$rtl.v:1353$1374_Y [8] $ternary$rtl.v:1353$1374_Y [8] $ternary$rtl.v:1353$1374_Y [8] $ternary$rtl.v:1353$1374_Y [8] $ternary$rtl.v:1353$1374_Y [8] $ternary$rtl.v:1353$1374_Y [8] $ternary$rtl.v:1353$1374_Y [8] $ternary$rtl.v:1353$1374_Y [8] $ternary$rtl.v:1353$1374_Y [8] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1357$1387:
      Old ports: A={ 4'0000 $auto$rtlil.cc:1832:Not$3259 }, B={ 1'0 $ternary$rtl.v:1357$1382_Y [3:0] }, Y=\wire99
      New ports: A={ 3'000 $auto$rtlil.cc:1832:Not$3259 }, B=$ternary$rtl.v:1357$1382_Y [3:0], Y=\wire99 [3:0]
      New connections: \wire99 [4] = 1'0
  Optimizing cells in module \module73.
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1282$1268:
      Old ports: A={ 2'00 \wire77 }, B=$ternary$rtl.v:1282$1266_Y, Y=$ternary$rtl.v:1282$1268_Y [6:0]
      New ports: A={ 1'0 \wire77 }, B={ $ternary$rtl.v:1282$1266_Y [6] 3'000 $ternary$rtl.v:1282$1266_Y [1:0] }, Y={ $ternary$rtl.v:1282$1268_Y [6] $ternary$rtl.v:1282$1268_Y [4:0] }
      New connections: $ternary$rtl.v:1282$1268_Y [5] = 1'0
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1348$1360:
      Old ports: A=$ternary$rtl.v:1348$1357_Y, B={ 19'0000000000000000000 \reg79 [11:10] }, Y=$ternary$rtl.v:1348$1360_Y
      New ports: A=$ternary$rtl.v:1348$1357_Y [9:0], B={ 8'00000000 \reg79 [11:10] }, Y=$ternary$rtl.v:1348$1360_Y [9:0]
      New connections: $ternary$rtl.v:1348$1360_Y [20:10] = { $ternary$rtl.v:1348$1360_Y [9] $ternary$rtl.v:1348$1360_Y [9] $ternary$rtl.v:1348$1360_Y [9] $ternary$rtl.v:1348$1360_Y [9] $ternary$rtl.v:1348$1360_Y [9] $ternary$rtl.v:1348$1360_Y [9] $ternary$rtl.v:1348$1360_Y [9] $ternary$rtl.v:1348$1360_Y [9] $ternary$rtl.v:1348$1360_Y [9] $ternary$rtl.v:1348$1360_Y [9] $ternary$rtl.v:1348$1360_Y [9] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1350$1366:
      Old ports: A=$ternary$rtl.v:1350$1363_Y, B={ 18'000000000000000000 \wire91 [0] }, Y=$ternary$rtl.v:1350$1366_Y
      New ports: A=$ternary$rtl.v:1350$1363_Y [13:0], B={ 13'0000000000000 \wire91 [0] }, Y=$ternary$rtl.v:1350$1366_Y [13:0]
      New connections: $ternary$rtl.v:1350$1366_Y [18:14] = { $ternary$rtl.v:1350$1366_Y [13] $ternary$rtl.v:1350$1366_Y [13] $ternary$rtl.v:1350$1366_Y [13] $ternary$rtl.v:1350$1366_Y [13] $ternary$rtl.v:1350$1366_Y [13] }
  Optimizing cells in module \module73.
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $ternary$rtl.v:49$42:
      Old ports: A={ 11'00000000000 $auto$wreduce.cc:455:run$2499 [7:0] }, B={ 3'000 \wire8 }, Y=$ternary$rtl.v:49$42_Y
      New ports: A={ 8'00000000 $auto$wreduce.cc:455:run$2499 [7:0] }, B=\wire8, Y=$ternary$rtl.v:49$42_Y [15:0]
      New connections: $ternary$rtl.v:49$42_Y [18:16] = 3'000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:55$54:
      Old ports: A={ 1'0 \wire1 [3] \wire1 [3] \wire1 }, B=7'1001111, Y=$auto$wreduce.cc:455:run$2500 [6:0]
      New ports: A={ 1'0 \wire1 [3] \wire1 }, B=6'101111, Y={ $auto$wreduce.cc:455:run$2500 [6] $auto$wreduce.cc:455:run$2500 [4:0] }
      New connections: $auto$wreduce.cc:455:run$2500 [5] = $auto$wreduce.cc:455:run$2500 [4]
  Optimizing cells in module \top.
Performed a total of 67 changes.

2.20.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module106'.
Finding identical cells in module `\module13'.
Finding identical cells in module `\module207'.
Finding identical cells in module `\module30'.
Finding identical cells in module `\module73'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.20.6. Executing OPT_RMDFF pass (remove dff with constant values).

2.20.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module106..
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module207..
Finding unused cells or wires in module \module30..
Finding unused cells or wires in module \module73..
Finding unused cells or wires in module \top..

2.20.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module module106.
<suppressed ~3 debug messages>
Optimizing module module13.
<suppressed ~1 debug messages>
Optimizing module module207.
<suppressed ~14 debug messages>
Optimizing module module30.
<suppressed ~4 debug messages>
Optimizing module module73.
<suppressed ~8 debug messages>
Optimizing module top.

2.20.9. Rerunning OPT passes. (Maybe there is more to do..)

2.20.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module106..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module13..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module207..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module30..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module73..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~193 debug messages>

2.20.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module106.
  Optimizing cells in module \module13.
  Optimizing cells in module \module207.
  Optimizing cells in module \module30.
  Optimizing cells in module \module73.
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.20.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module106'.
Finding identical cells in module `\module13'.
Finding identical cells in module `\module207'.
Finding identical cells in module `\module30'.
Finding identical cells in module `\module73'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.20.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.20.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module106..
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module207..
Finding unused cells or wires in module \module30..
Finding unused cells or wires in module \module73..
Finding unused cells or wires in module \top..
Removed 0 unused cells and 8 unused wires.
<suppressed ~3 debug messages>

2.20.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module module106.
Optimizing module module13.
Optimizing module module207.
Optimizing module module30.
Optimizing module module73.
Optimizing module top.

2.20.16. Finished OPT passes. (There is nothing left to do.)

2.21. Executing TECHMAP pass (map to technology primitives).

2.21.1. Executing Verilog-2005 frontend: <techmap.v>
Parsing Verilog input from `<techmap.v>' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

2.21.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $reduce_xnor.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $mux.
Using template $paramod$constmap:0368b06915b6194227a6ab8a2cb81042f36eaf8d$paramod$08e08167188dde1c69b593935e93ee9bd41d29cc\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using extmapper simplemap for cells of type $reduce_xor.
Using template $paramod$constmap:a8532a3be3d5f948847b625cd63d6eecb249062a$paramod$7e01e9c601d43a96f422efd02cb3339152d47917\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:d4950048c4680479d93b4f1a409a67896c1f2734$paramod$61afff9e0bd45b5fe56516b4b5ef1a341a7aa251\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using extmapper simplemap for cells of type $xnor.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=4\Y_WIDTH=10 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=1\Y_WIDTH=1 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=16\Y_WIDTH=16 for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=1 for cells of type $lcu.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=16 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=10 for cells of type $lcu.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $ne.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=3\Y_WIDTH=3 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=1\Y_WIDTH=22 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=18\Y_WIDTH=18 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=19\Y_WIDTH=19 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=11\Y_WIDTH=11 for cells of type $alu.
Using extmapper simplemap for cells of type $logic_or.
Using template $paramod$constmap:5b393b8a9841fab7bcf8518b9b3adc639f91594f$paramod$840e76285e4f1e6777905c5a2086cf240ab1758a\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:d5b7a2b4fcaaebc254c32686c8fa5519a11a96ae$paramod$df7b977d846c443411d83f706a55f53e34d454be\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using template $paramod$constmap:777f1dcad0c6f3485c54b711ef9afecaed503310$paramod$0dac25bdba09e04211523c03a5d98cff8d6d5b8b\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=6\B_WIDTH=16\Y_WIDTH=16 for cells of type $alu.
Using extmapper maccmap for cells of type $macc.
  add { \reg18 \wire16 } * $logic_not$rtl.v:202$175_Y (30x1 bits, unsigned)
  add $ternary$rtl.v:236$220_Y * \reg27 (16x3 bits, unsigned)
  add $logic_and$rtl.v:133$62_Y * $ne$rtl.v:135$72_Y [0] (1x1 bits, unsigned)
  add $xor$rtl.v:181$134_Y * \reg18 (19x11 bits, unsigned)
Using extmapper simplemap for cells of type $dff.
Using template $paramod\_90_lcu\WIDTH=3 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=22 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=18 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=19 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=11 for cells of type $lcu.
Using template $paramod\_90_fa\WIDTH=16 for cells of type $fa.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=16\B_WIDTH=16\Y_WIDTH=16 for cells of type $alu.
Using template $paramod\_90_fa\WIDTH=19 for cells of type $fa.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=19\B_WIDTH=19\Y_WIDTH=19 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=2\B_WIDTH=7\Y_WIDTH=7 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=3\Y_WIDTH=3 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=2\B_WIDTH=11\Y_WIDTH=11 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=13\Y_WIDTH=13 for cells of type $alu.
  add { 3'101 $ternary$rtl.v:1490$1475_Y [4] $ternary$rtl.v:1490$1475_Y [4] 1'1 $ternary$rtl.v:1490$1475_Y [1] 1'1 } * \wire32 [4:2] (8x3 bits, unsigned)
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=5\Y_WIDTH=5 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=1\Y_WIDTH=7 for cells of type $alu.
Using template $paramod$constmap:0f64fdf2a5431a8adf57d3eae346f03a8d35185b$paramod$eec638362880c39afc8ce24519dd3e81313e9ddb\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=1\Y_WIDTH=8 for cells of type $alu.
Using template $paramod$constmap:4f895153a767b3a550d6bbe2e1d893fa779aa0aa$paramod$2daa882059d94498e9fbe7a0c54af8de8a303e87\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod\_90_lcu\WIDTH=7 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=8 for cells of type $lcu.
Using template $paramod\_90_fa\WIDTH=7 for cells of type $fa.
Using template $paramod\_90_lcu\WIDTH=13 for cells of type $lcu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=7\B_WIDTH=7\Y_WIDTH=7 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=5 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=4 for cells of type $lcu.
Using template $paramod$constmap:5278a1c892eabadb822fb988cf3db7f7e96a74fa$paramod$1eac10984ed34aa7b64617ceaca286d17d8577d8\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:4c3437c581c4569ff2c811881aa58c5eec075dd3$paramod$190b7078028aee118a1c6f5f8a4630ae45c12a59\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:24866ac388b36385df633c3ce2ad589a93d425cd$paramod$870026cb614cdda6676ab67fafd8d7e955cc7cac\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:82aef9959d46b7aa8aa2871e8ddf020fb3936c1c$paramod$f0a19e2c34e1bee939eaa9a5d894ba12474fe4b3\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$constmap:21b6ab04c7774f04ebc12938b9e6584f443ff3fd$paramod$0320d200177642bc988eaec6469f88144c090a1d\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=13\Y_WIDTH=13 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=9\Y_WIDTH=9 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=3\B_WIDTH=9\Y_WIDTH=9 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=6\B_WIDTH=9\Y_WIDTH=9 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=21\Y_WIDTH=21 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=5\Y_WIDTH=5 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=6\Y_WIDTH=6 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=21\Y_WIDTH=21 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=6\B_WIDTH=6\Y_WIDTH=6 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=9 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=21 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=6 for cells of type $lcu.
  add \wire107 * $auto$wreduce.cc:455:run$2318 [0] (16x1 bits, unsigned)
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=22\Y_WIDTH=22 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=1\Y_WIDTH=3 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=1\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=2\Y_WIDTH=2 for cells of type $alu.
Using template $paramod$constmap:edc3c86affcf8e4b7f980ce9c01b86c1e9cc5dd0$paramod$ec65528c4de48d94db5fd0b068bd73a860ec49d1\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=7\Y_WIDTH=7 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=16\B_WIDTH=2\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=15\Y_WIDTH=15 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=15\B_WIDTH=5\Y_WIDTH=15 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=15\B_WIDTH=15\Y_WIDTH=15 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=4\B_WIDTH=11\Y_WIDTH=11 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=21\Y_WIDTH=21 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=17\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=16\B_WIDTH=20\Y_WIDTH=20 for cells of type $alu.
Using template $paramod$constmap:cf329f147dbbee7f00c7a3a2a40b510d1890004d$paramod$9aaf6357b808fae09132e9cba88de6aa1e6c1601\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=20\Y_WIDTH=20 for cells of type $alu.
Using template $paramod$constmap:e7b889e4c3e85823c5380730da55b3ba1d3b3807$paramod$8ea42cc566d60e7a5422218bec4c8bdd147000d1\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
  add \reg147 * $logic_and$rtl.v:1170$1128_Y (11x1 bits, unsigned)
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=18\Y_WIDTH=18 for cells of type $alu.
Using template $paramod$constmap:7386824468eaf33ced28feaec28d99675724661c$paramod$2774fba60e7119af57a5c5ef60d9b1e91f3956fc\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:d602a6b6e6c48d0d0a68adfc703f8d9c0ddf1caf$paramod$431fce925a2445552295afa4bfa2e8080d248c42\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:e94a60cb78cea5e26d2ea20abb688c360903ca3b$paramod$5a22cc42ec78dd50410d2e85ee9ac129492c8548\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=16\Y_WIDTH=16 for cells of type $alu.
Using template $paramod$constmap:9f7dee57e595227c1a924190da615c514d11e8b3$paramod$2223edce2a49919dee3e4712aa93f59c49c6e16f\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using template $paramod$constmap:2fe59e6eaf5dc78fba17357fe6953e2048e57515$paramod$0318ce8b98d241a0c9e97648fda292dd02dc0f6b\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:2a6fe121fd240cacda51f9d160213adc8997c452$paramod$ba9face26f9b90850f6b0af3e5287e972cee3db8\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:c18f71bb6017ac38e40910f1690b20139d66f3f0$paramod$5d0cd5ffd1e35ca9d4249791b1cd7e7961ee94d9\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod\_90_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=3\B_WIDTH=10\Y_WIDTH=10 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=6\B_WIDTH=11\Y_WIDTH=11 for cells of type $alu.
Using template $paramod$constmap:644facc0c03ef4e49989d6c6fce2792f6797630d$paramod$36f00afed4c00506310b1eec334e25464243956b\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:05b58473f9a6851a45a145a07c0ab74ac63f9d6d$paramod$1934bfc9b11b10b081c006343a55d8d883d52d08\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:bf19763fcbb9d9d2b60f935ccfd2f2ee822afb9a$paramod$3b7b588addfb0128920a516a8e75771f8c43c470\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=10\Y_WIDTH=10 for cells of type $alu.
Using template $paramod$constmap:2e0c8953b75855771d258bd512630df7f7ce70b0$paramod$71a40d3816bc5d347acb3f3c9f877939b88c7a1d\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using template $paramod$constmap:3cc72f3e5319e96d7b84cf9085b03bc69222503c$paramod$99f8882d4894803121fc642cd1285c535a62a1b6\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
  add { \wire111 [7] 13'0000000000000 \reg123 [3:0] } * \reg124 (18x4 bits, unsigned)
  add \reg118 [5:2] (4 bits, signed)
  sub \wire110 [3:0] (4 bits, signed)
  sub \reg112 [3:0] (4 bits, signed)
  packed 2 (1) bits / 1 words into adder tree
  add $ternary$rtl.v:1082$978_Y * \reg123 [3:0] (22x4 bits, unsigned)
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=13\B_WIDTH=21\Y_WIDTH=21 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=11\B_WIDTH=20\Y_WIDTH=20 for cells of type $alu.
  add { \reg113 [0] \reg113 [0] \reg113 [0] \reg113 [0] \reg113 [0] \reg113 [0] \reg113 [0] \reg113 [0] \reg113 [0] \reg113 [0] \reg113 [0] } * \reg119 (11x7 bits, unsigned)
  add { 4'0000 $and$rtl.v:970$838_Y [3:0] } * $reduce_xor$rtl.v:970$839_Y (8x1 bits, unsigned)
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=7\Y_WIDTH=7 for cells of type $alu.
Using template $paramod\_90_fa\WIDTH=4 for cells of type $fa.
Using template $paramod\_90_lcu\WIDTH=2 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=17 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=15 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=20 for cells of type $lcu.
Using template $paramod\_90_fa\WIDTH=18 for cells of type $fa.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=18\B_WIDTH=18\Y_WIDTH=18 for cells of type $alu.
Using template $paramod\_90_fa\WIDTH=22 for cells of type $fa.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=22\B_WIDTH=22\Y_WIDTH=22 for cells of type $alu.
Using template $paramod\_90_fa\WIDTH=11 for cells of type $fa.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=11\B_WIDTH=11\Y_WIDTH=11 for cells of type $alu.
  add { $auto$rtlil.cc:1832:Not$2938 $ternary$rtl.v:456$316_Y } * $ne$rtl.v:452$309_Y (20x1 bits, unsigned)
  add { \reg223 [0] $logic_or$rtl.v:462$341_Y } * 1'0 (2x1 bits, unsigned)
  add 14'00000000000000 * \reg234 (14x11 bits, unsigned)
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=15\Y_WIDTH=15 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=19\B_WIDTH=6\Y_WIDTH=19 for cells of type $alu.
Using template $paramod$constmap:31d966d1ab227c16ccff38165e4f5cb905faf910$paramod$0b9f6ce0bdfb1e87ab509a397b469af66e7015c2\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=6\B_WIDTH=1\Y_WIDTH=6 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=17\Y_WIDTH=18 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=15\Y_WIDTH=15 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=1\Y_WIDTH=2 for cells of type $alu.
Using template $paramod$constmap:8e2ab81e40aab90877ff9285a43a5b4694027dc3$paramod$33099a95a771a095f416b9208137528dd168935d\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=14\B_WIDTH=14\Y_WIDTH=14 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=3\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=8\Y_WIDTH=9 for cells of type $alu.
Using template $paramod$constmap:5f80f8513543595fbc54ef984a03426a310fb61a$paramod$b7aca4e6bf5fae05874501e83ed52feb725aee2c\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:59216a0c79a01cf8d224bd08bdc544b02288698d$paramod$02024d04852c95528885a5a4017b7b7e6cbad7cd\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:7f1826245b301a588b6c61fbbcb5a3469f5ecf6f$paramod$a381aff4e86bab289df496bfedb8cdf00267c171\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:4d328d41faf2e49cb240813fa30fdb84d42424b6$paramod$3f9002bc675acab793e00dc3a190938728a8a728\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using template $paramod$constmap:cb4df30697d698c06307940c2b99175077335425$paramod$5073678253b9cf8100df58930afeb26d73b64b8a\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:aea5c66aaec5761938196489ea4125546b488171$paramod$012fcfb82b2b17adc670903f36cd9114b5986c30\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using template $paramod$constmap:977cf3850909b07cf758fa26a986a22aa89cb311$paramod$2edecf80893972bf7a69afbf7db22b993f83e05a\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=7\B_WIDTH=20\Y_WIDTH=20 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=2\B_WIDTH=10\Y_WIDTH=10 for cells of type $alu.
Using template $paramod$constmap:edc3c86affcf8e4b7f980ce9c01b86c1e9cc5dd0$paramod$b048234d02a0c313ac9a65cfe21945c958ecba1a\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:473b12553ecb40a84fd36ed8514b456b49ffb53f$paramod$0638b4677639dbabe5dc749bbd1a5531388fb8e6\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:060a70a654d22207a555d897fc50a927504e4af2$paramod$ab531f8125a93254921104d35f6981eb3957d1ff\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod\_90_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=15\B_WIDTH=15\Y_WIDTH=15 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=16\Y_WIDTH=16 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=20\B_WIDTH=20\Y_WIDTH=20 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=6\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=16\Y_WIDTH=16 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=19\Y_WIDTH=19 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=2\B_WIDTH=18\Y_WIDTH=18 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=14\B_WIDTH=21\Y_WIDTH=21 for cells of type $alu.
Using template $paramod\_90_fa\WIDTH=14 for cells of type $fa.
Using template $paramod\_90_lcu\WIDTH=14 for cells of type $lcu.
No more expansions possible.
<suppressed ~17790 debug messages>

2.22. Executing OPT pass (performing simple optimizations).

2.22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module module106.
<suppressed ~2817 debug messages>
Optimizing module module13.
<suppressed ~1026 debug messages>
Optimizing module module207.
<suppressed ~3279 debug messages>
Optimizing module module30.
<suppressed ~542 debug messages>
Optimizing module module73.
<suppressed ~739 debug messages>
Optimizing module top.
<suppressed ~193 debug messages>

2.22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module106'.
<suppressed ~2460 debug messages>
Finding identical cells in module `\module13'.
<suppressed ~804 debug messages>
Finding identical cells in module `\module207'.
<suppressed ~1077 debug messages>
Finding identical cells in module `\module30'.
<suppressed ~126 debug messages>
Finding identical cells in module `\module73'.
<suppressed ~807 debug messages>
Finding identical cells in module `\top'.
<suppressed ~39 debug messages>
Removed a total of 1771 cells.

2.22.3. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$21825 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$31138 ($_DFF_P_) from module module207.
Removing $auto$simplemap.cc:420:simplemap_dff$13862 ($_DFF_P_) from module module73.
Replaced 3 DFF cells.

2.22.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module106..
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module207..
Finding unused cells or wires in module \module30..
Finding unused cells or wires in module \module73..
Finding unused cells or wires in module \top..
Removed 1855 unused cells and 6409 unused wires.
<suppressed ~1861 debug messages>

2.22.5. Rerunning OPT passes. (Removed registers in this run.)

2.22.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module module106.
<suppressed ~275 debug messages>
Optimizing module module13.
<suppressed ~24 debug messages>
Optimizing module module207.
<suppressed ~45 debug messages>
Optimizing module module30.
<suppressed ~1 debug messages>
Optimizing module module73.
<suppressed ~47 debug messages>
Optimizing module top.
<suppressed ~4 debug messages>

2.22.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module106'.
<suppressed ~15 debug messages>
Finding identical cells in module `\module13'.
<suppressed ~9 debug messages>
Finding identical cells in module `\module207'.
<suppressed ~30 debug messages>
Finding identical cells in module `\module30'.
Finding identical cells in module `\module73'.
Finding identical cells in module `\top'.
Removed a total of 18 cells.

2.22.8. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$21427 ($_DFF_P_) from module module106.
Promoting init spec \reg186 [13:2] = 12'000000000000 to constant driver in module module106.
Promoting init spec \reg275 [20:14] = 7'0000000 to constant driver in module module207.
Promoted 2 init specs to constant drivers.
Replaced 1 DFF cells.

2.22.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module106..
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module207..
Finding unused cells or wires in module \module30..
Finding unused cells or wires in module \module73..
Finding unused cells or wires in module \top..
Removed 6 unused cells and 132 unused wires.
<suppressed ~11 debug messages>

2.22.10. Rerunning OPT passes. (Removed registers in this run.)

2.22.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module module106.
<suppressed ~91 debug messages>
Optimizing module module13.
Optimizing module module207.
Optimizing module module30.
Optimizing module module73.
Optimizing module top.

2.22.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module106'.
<suppressed ~30 debug messages>
Finding identical cells in module `\module13'.
Finding identical cells in module `\module207'.
Finding identical cells in module `\module30'.
Finding identical cells in module `\module73'.
Finding identical cells in module `\top'.
Removed a total of 10 cells.

2.22.13. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$21330 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21443 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21444 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21445 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21446 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21447 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21448 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21449 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21450 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21451 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21452 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21453 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21454 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21455 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21456 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21457 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21458 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21459 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21460 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21461 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21462 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21463 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21464 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21465 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21466 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21467 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21468 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21469 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21470 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21471 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21472 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21473 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21474 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21475 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21476 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21477 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21478 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21479 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21480 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21481 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21482 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21483 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21484 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21485 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21486 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21487 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21488 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21489 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21490 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21491 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21492 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21493 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21494 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21495 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21496 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21497 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21498 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21499 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21500 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21501 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21502 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21503 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21504 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21505 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21506 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21507 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21508 ($_DFF_P_) from module module106.
Removing $auto$simplemap.cc:420:simplemap_dff$21509 ($_DFF_P_) from module module106.
Replaced 68 DFF cells.

2.22.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module106..
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module207..
Finding unused cells or wires in module \module30..
Finding unused cells or wires in module \module73..
Finding unused cells or wires in module \top..
Removed 463 unused cells and 135 unused wires.
<suppressed ~464 debug messages>

2.22.15. Rerunning OPT passes. (Removed registers in this run.)

2.22.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module module106.
<suppressed ~48 debug messages>
Optimizing module module13.
Optimizing module module207.
Optimizing module module30.
Optimizing module module73.
Optimizing module top.

2.22.17. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module106'.
<suppressed ~27 debug messages>
Finding identical cells in module `\module13'.
Finding identical cells in module `\module207'.
Finding identical cells in module `\module30'.
Finding identical cells in module `\module73'.
Finding identical cells in module `\top'.
Removed a total of 9 cells.

2.22.18. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$21437 ($_DFF_P_) from module module106.
Replaced 1 DFF cells.

2.22.19. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module106..
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module207..
Finding unused cells or wires in module \module30..
Finding unused cells or wires in module \module73..
Finding unused cells or wires in module \top..
Removed 0 unused cells and 9 unused wires.
<suppressed ~1 debug messages>

2.22.20. Rerunning OPT passes. (Removed registers in this run.)

2.22.21. Executing OPT_EXPR pass (perform const folding).
Optimizing module module106.
<suppressed ~11 debug messages>
Optimizing module module13.
Optimizing module module207.
Optimizing module module30.
Optimizing module module73.
Optimizing module top.

2.22.22. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module106'.
Finding identical cells in module `\module13'.
Finding identical cells in module `\module207'.
Finding identical cells in module `\module30'.
Finding identical cells in module `\module73'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.22.23. Executing OPT_RMDFF pass (remove dff with constant values).

2.22.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module106..
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module207..
Finding unused cells or wires in module \module30..
Finding unused cells or wires in module \module73..
Finding unused cells or wires in module \top..
Removed 11 unused cells and 10 unused wires.
<suppressed ~12 debug messages>

2.22.25. Finished fast OPT passes.

2.23. Executing ABC pass (technology mapping using ABC).

2.23.1. Extracting gate netlist of module `\module106' to `<abc-temp-dir>/input.blif'..
Extracted 3312 gates and 3780 wires to a netlist network with 466 inputs and 407 outputs.

2.23.1.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.1.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       53
ABC RESULTS:            ANDNOT cells:      405
ABC RESULTS:              AOI3 cells:      149
ABC RESULTS:              AOI4 cells:        3
ABC RESULTS:               MUX cells:      522
ABC RESULTS:              NAND cells:      108
ABC RESULTS:               NOR cells:      137
ABC RESULTS:               NOT cells:      213
ABC RESULTS:              OAI3 cells:      106
ABC RESULTS:              OAI4 cells:        3
ABC RESULTS:                OR cells:      618
ABC RESULTS:             ORNOT cells:      126
ABC RESULTS:              XNOR cells:       58
ABC RESULTS:               XOR cells:      265
ABC RESULTS:        internal signals:     2907
ABC RESULTS:           input signals:      466
ABC RESULTS:          output signals:      407
Removing temp directory.

2.23.2. Extracting gate netlist of module `\module13' to `<abc-temp-dir>/input.blif'..
Extracted 1895 gates and 2060 wires to a netlist network with 163 inputs and 95 outputs.

2.23.2.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.2.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      141
ABC RESULTS:            ANDNOT cells:      330
ABC RESULTS:              AOI3 cells:      113
ABC RESULTS:              AOI4 cells:        2
ABC RESULTS:               MUX cells:      119
ABC RESULTS:              NAND cells:       50
ABC RESULTS:               NOR cells:       64
ABC RESULTS:               NOT cells:       89
ABC RESULTS:              OAI3 cells:       36
ABC RESULTS:              OAI4 cells:        8
ABC RESULTS:                OR cells:      261
ABC RESULTS:             ORNOT cells:       46
ABC RESULTS:              XNOR cells:      127
ABC RESULTS:               XOR cells:      232
ABC RESULTS:        internal signals:     1802
ABC RESULTS:           input signals:      163
ABC RESULTS:          output signals:       95
Removing temp directory.

2.23.3. Extracting gate netlist of module `\module207' to `<abc-temp-dir>/input.blif'..
Extracted 1326 gates and 1497 wires to a netlist network with 169 inputs and 165 outputs.

2.23.3.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.3.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       25
ABC RESULTS:            ANDNOT cells:      166
ABC RESULTS:              AOI3 cells:       31
ABC RESULTS:               MUX cells:      152
ABC RESULTS:              NAND cells:       35
ABC RESULTS:               NOR cells:       53
ABC RESULTS:               NOT cells:       46
ABC RESULTS:              OAI3 cells:       27
ABC RESULTS:                OR cells:      258
ABC RESULTS:             ORNOT cells:       27
ABC RESULTS:              XNOR cells:       20
ABC RESULTS:               XOR cells:       91
ABC RESULTS:        internal signals:     1163
ABC RESULTS:           input signals:      169
ABC RESULTS:          output signals:      165
Removing temp directory.

2.23.4. Extracting gate netlist of module `\module30' to `<abc-temp-dir>/input.blif'..
Extracted 736 gates and 884 wires to a netlist network with 146 inputs and 115 outputs.

2.23.4.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.4.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       27
ABC RESULTS:            ANDNOT cells:       99
ABC RESULTS:              AOI3 cells:       17
ABC RESULTS:               BUF cells:        5
ABC RESULTS:               MUX cells:      107
ABC RESULTS:              NAND cells:       10
ABC RESULTS:               NOR cells:       13
ABC RESULTS:               NOT cells:       29
ABC RESULTS:              OAI3 cells:       16
ABC RESULTS:              OAI4 cells:        2
ABC RESULTS:                OR cells:      114
ABC RESULTS:             ORNOT cells:       35
ABC RESULTS:              XNOR cells:       23
ABC RESULTS:               XOR cells:       56
ABC RESULTS:        internal signals:      623
ABC RESULTS:           input signals:      146
ABC RESULTS:          output signals:      115
Removing temp directory.

2.23.5. Extracting gate netlist of module `\module73' to `<abc-temp-dir>/input.blif'..
Extracted 1326 gates and 1467 wires to a netlist network with 139 inputs and 107 outputs.

2.23.5.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.5.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       22
ABC RESULTS:            ANDNOT cells:      153
ABC RESULTS:              AOI3 cells:       25
ABC RESULTS:              AOI4 cells:        4
ABC RESULTS:               MUX cells:      232
ABC RESULTS:              NAND cells:       55
ABC RESULTS:               NOR cells:       36
ABC RESULTS:               NOT cells:       64
ABC RESULTS:              OAI3 cells:       26
ABC RESULTS:              OAI4 cells:        4
ABC RESULTS:                OR cells:      296
ABC RESULTS:             ORNOT cells:       48
ABC RESULTS:              XNOR cells:       32
ABC RESULTS:               XOR cells:      104
ABC RESULTS:        internal signals:     1221
ABC RESULTS:           input signals:      139
ABC RESULTS:          output signals:      107
Removing temp directory.

2.23.6. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 381 gates and 435 wires to a netlist network with 52 inputs and 38 outputs.

2.23.6.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.6.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       11
ABC RESULTS:            ANDNOT cells:       50
ABC RESULTS:              AOI3 cells:        2
ABC RESULTS:               MUX cells:       29
ABC RESULTS:              NAND cells:       17
ABC RESULTS:               NOR cells:       24
ABC RESULTS:               NOT cells:       13
ABC RESULTS:              OAI3 cells:       14
ABC RESULTS:                OR cells:       78
ABC RESULTS:             ORNOT cells:       17
ABC RESULTS:              XNOR cells:       14
ABC RESULTS:               XOR cells:       43
ABC RESULTS:        internal signals:      345
ABC RESULTS:           input signals:       52
ABC RESULTS:          output signals:       38
Removing temp directory.

2.24. Executing OPT pass (performing simple optimizations).

2.24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module module106.
<suppressed ~51 debug messages>
Optimizing module module13.
<suppressed ~43 debug messages>
Optimizing module module207.
<suppressed ~6 debug messages>
Optimizing module module30.
<suppressed ~37 debug messages>
Optimizing module module73.
<suppressed ~55 debug messages>
Optimizing module top.
<suppressed ~2 debug messages>

2.24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module106'.
<suppressed ~39 debug messages>
Finding identical cells in module `\module13'.
Finding identical cells in module `\module207'.
<suppressed ~24 debug messages>
Finding identical cells in module `\module30'.
<suppressed ~9 debug messages>
Finding identical cells in module `\module73'.
<suppressed ~6 debug messages>
Finding identical cells in module `\top'.
Removed a total of 26 cells.

2.24.3. Executing OPT_RMDFF pass (remove dff with constant values).

2.24.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module106..
Finding unused cells or wires in module \module13..
Finding unused cells or wires in module \module207..
Finding unused cells or wires in module \module30..
Finding unused cells or wires in module \module73..
Finding unused cells or wires in module \top..
Removed 9 unused cells and 4486 unused wires.
<suppressed ~15 debug messages>

2.24.5. Finished fast OPT passes.

2.25. Executing HIERARCHY pass (managing design hierarchy).

2.26. Printing statistics.

=== module106 ===

   Number of wires:               2480
   Number of wire bits:           4518
   Number of public wires:          85
   Number of public wire bits:    1689
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3181
     $_ANDNOT_                     402
     $_AND_                         51
     $_AOI3_                       149
     $_AOI4_                         3
     $_DFF_P_                      431
     $_MUX_                        522
     $_NAND_                       108
     $_NOR_                        131
     $_NOT_                        209
     $_OAI3_                       106
     $_OAI4_                         3
     $_ORNOT_                      126
     $_OR_                         617
     $_XNOR_                        58
     $_XOR_                        265

=== module13 ===

   Number of wires:               1571
   Number of wire bits:           4641
   Number of public wires:          35
   Number of public wire bits:     721
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1703
     $_ANDNOT_                     330
     $_AND_                        141
     $_AOI3_                       113
     $_AOI4_                         2
     $_DFF_P_                       82
     $_MUX_                        119
     $_NAND_                        50
     $_NOR_                         64
     $_NOT_                         88
     $_OAI3_                        36
     $_OAI4_                         8
     $_ORNOT_                       46
     $_OR_                         261
     $_XNOR_                       127
     $_XOR_                        232
     module106                       1
     module207                       1
     module30                        1
     module73                        1

=== module207 ===

   Number of wires:                853
   Number of wire bits:           2724
   Number of public wires:          74
   Number of public wire bits:    1770
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1083
     $_ANDNOT_                     165
     $_AND_                         25
     $_AOI3_                        31
     $_DFF_P_                      160
     $_MUX_                        152
     $_NAND_                        35
     $_NOR_                         52
     $_NOT_                         46
     $_OAI3_                        27
     $_ORNOT_                       27
     $_OR_                         252
     $_XNOR_                        20
     $_XOR_                         91

=== module30 ===

   Number of wires:                479
   Number of wire bits:           1288
   Number of public wires:          39
   Number of public wire bits:     753
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                652
     $_ANDNOT_                      99
     $_AND_                         27
     $_AOI3_                        17
     $_DFF_P_                      111
     $_MUX_                        107
     $_NAND_                         9
     $_NOR_                         12
     $_NOT_                         25
     $_OAI3_                        16
     $_OAI4_                         2
     $_ORNOT_                       35
     $_OR_                         113
     $_XNOR_                        23
     $_XOR_                         56

=== module73 ===

   Number of wires:               1037
   Number of wire bits:           1729
   Number of public wires:          32
   Number of public wire bits:     628
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1192
     $_ANDNOT_                     153
     $_AND_                         22
     $_AOI3_                        25
     $_AOI4_                         4
     $_DFF_P_                       93
     $_MUX_                        232
     $_NAND_                        55
     $_NOR_                         35
     $_NOT_                         64
     $_OAI3_                        26
     $_OAI4_                         4
     $_ORNOT_                       47
     $_OR_                         296
     $_XNOR_                        32
     $_XOR_                        104

=== top ===

   Number of wires:                293
   Number of wire bits:            907
   Number of public wires:          18
   Number of public wire bits:     302
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                313
     $_ANDNOT_                      50
     $_AND_                         11
     $_AOI3_                         2
     $_MUX_                         29
     $_NAND_                        17
     $_NOR_                         24
     $_NOT_                         13
     $_OAI3_                        14
     $_ORNOT_                       17
     $_OR_                          78
     $_XNOR_                        14
     $_XOR_                         43
     module13                        1

2.27. Executing CHECK pass (checking for obvious problems).
checking module module106..
checking module module13..
checking module module207..
checking module module30..
checking module module73..
checking module top..
found and reported 0 problems.

3. Executing Verilog backend.
Dumping module `\module106'.
Dumping module `\module13'.
Dumping module `\module207'.
Dumping module `\module30'.
Dumping module `\module73'.
Dumping module `\top'.

Warnings: 17 unique messages, 17 total
End of script. Logfile hash: 70609fc640
CPU: user 14.97s system 0.02s, MEM: 109.76 MB total, 99.76 MB resident
Yosys 0.9 (git sha1 1979e0b)
Time spent: 19% 62x proc (2 sec), 15% 41x opt_merge (2 sec), ...
