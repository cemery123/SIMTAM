
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2019  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9 (git sha1 1979e0b)


-- Running command `read_verilog rtl.v; synth; write_verilog -noattr syn_yosys.v' --

1. Executing Verilog-2005 frontend: rtl.v
Parsing Verilog input from `rtl.v' to AST representation.
Generating RTLIL representation for module `\top'.
Generating RTLIL representation for module `\module172'.
Generating RTLIL representation for module `\module5'.
Generating RTLIL representation for module `\module133'.
Generating RTLIL representation for module `\module98'.
Generating RTLIL representation for module `\module63'.
Successfully finished Verilog frontend.

2. Executing SYNTH pass.

2.1. Executing HIERARCHY pass (managing design hierarchy).
Mapping positional arguments of cell module5.modinst153 (module133).
Mapping positional arguments of cell module5.modinst128 (module98).
Mapping positional arguments of cell module5.modinst84 (module63).
Warning: Resizing cell port module5.modinst153.y from 19 bits to 179 bits.
Warning: Resizing cell port module5.modinst153.wire137 from 19 bits to 11 bits.
Warning: Resizing cell port module5.modinst153.wire136 from 22 bits to 17 bits.
Warning: Resizing cell port module5.modinst128.y from 13 bits to 288 bits.
Warning: Resizing cell port module5.modinst128.wire103 from 17 bits to 16 bits.
Warning: Resizing cell port module5.modinst128.wire101 from 16 bits to 13 bits.
Warning: Resizing cell port module5.modinst128.wire100 from 19 bits to 5 bits.
Warning: Resizing cell port module5.modinst128.wire99 from 17 bits to 8 bits.
Warning: Resizing cell port module5.modinst84.y from 4 bits to 157 bits.
Warning: Resizing cell port module5.modinst84.wire68 from 19 bits to 9 bits.
Warning: Resizing cell port module5.modinst84.wire67 from 17 bits to 11 bits.
Warning: Resizing cell port module5.modinst84.wire65 from 21 bits to 5 bits.
Warning: Resizing cell port module5.modinst84.wire64 from 21 bits to 10 bits.
Warning: Resizing cell port top.modinst251.wire176 from 17 bits to 6 bits.
Warning: Resizing cell port top.modinst251.wire177 from 5 bits to 3 bits.
Warning: Resizing cell port top.modinst251.y from 9 bits to 744 bits.
Warning: Resizing cell port top.modinst245.y from 22 bits to 744 bits.
Warning: Resizing cell port top.modinst245.wire177 from 4 bits to 3 bits.
Warning: Resizing cell port top.modinst245.wire176 from 22 bits to 6 bits.
Warning: Resizing cell port top.modinst156.y from 21 bits to 886 bits.
Warning: Resizing cell port top.modinst156.wire6 from 11 bits to 9 bits.
Warning: Resizing cell port top.modinst156.wire9 from 22 bits to 9 bits.
Warning: Resizing cell port top.modinst156.wire8 from 17 bits to 7 bits.
Warning: Resizing cell port top.modinst156.wire7 from 12 bits to 3 bits.
Warning: Resizing cell port top.modinst156.wire10 from 21 bits to 19 bits.

2.2. Executing PROC pass (convert processes to netlists).

2.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\module5.$proc$rtl.v:990$907'.
Cleaned up 1 empty switch.

2.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 2 switch rules as full_case in process $proc$rtl.v:1176$1119 in module module98.
Marked 6 switch rules as full_case in process $proc$rtl.v:868$731 in module module5.
Marked 7 switch rules as full_case in process $proc$rtl.v:734$515 in module module5.
Marked 1 switch rules as full_case in process $proc$rtl.v:718$504 in module module5.
Marked 3 switch rules as full_case in process $proc$rtl.v:494$356 in module module172.
Marked 8 switch rules as full_case in process $proc$rtl.v:356$202 in module module172.
Marked 5 switch rules as full_case in process $proc$rtl.v:252$92 in module module172.
Removed a total of 0 dead cases.

2.2.3. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\module98.$proc$rtl.v:1146$1281'.
  Set init value: \reg106 = 7'0000000
Found init rule in `\module98.$proc$rtl.v:1145$1280'.
  Set init value: \reg107 = 17'00000000000000000
Found init rule in `\module98.$proc$rtl.v:1144$1279'.
  Set init value: \reg108 = 12'000000000000
Found init rule in `\module98.$proc$rtl.v:1143$1278'.
  Set init value: \reg109 = 20'00000000000000000000
Found init rule in `\module98.$proc$rtl.v:1142$1277'.
  Set init value: \reg110 = 6'000000
Found init rule in `\module98.$proc$rtl.v:1141$1276'.
  Set init value: \reg111 = 5'00000
Found init rule in `\module98.$proc$rtl.v:1140$1275'.
  Set init value: \reg112 = 20'00000000000000000000
Found init rule in `\module133.$proc$rtl.v:1074$1116'.
  Set init value: \reg139 = 14'00000000000000
Found init rule in `\module133.$proc$rtl.v:1073$1115'.
  Set init value: \reg140 = 22'0000000000000000000000
Found init rule in `\module133.$proc$rtl.v:1072$1114'.
  Set init value: \reg141 = 22'0000000000000000000000
Found init rule in `\module5.$proc$rtl.v:637$1040'.
  Set init value: \reg94 = 5'00000
Found init rule in `\module5.$proc$rtl.v:636$1039'.
  Set init value: \reg93 = 14'00000000000000
Found init rule in `\module5.$proc$rtl.v:635$1038'.
  Set init value: \reg92 = 6'000000
Found init rule in `\module5.$proc$rtl.v:634$1037'.
  Set init value: \reg91 = 3'000
Found init rule in `\module5.$proc$rtl.v:633$1036'.
  Set init value: \reg90 = 14'00000000000000
Found init rule in `\module5.$proc$rtl.v:631$1035'.
  Set init value: \reg88 = 8'00000000
Found init rule in `\module5.$proc$rtl.v:630$1034'.
  Set init value: \reg87 = 7'0000000
Found init rule in `\module5.$proc$rtl.v:629$1033'.
  Set init value: \reg86 = 17'00000000000000000
Found init rule in `\module5.$proc$rtl.v:628$1032'.
  Set init value: \reg85 = 22'0000000000000000000000
Found init rule in `\module5.$proc$rtl.v:625$1031'.
  Set init value: \reg13 = 17'00000000000000000
Found init rule in `\module5.$proc$rtl.v:624$1030'.
  Set init value: \reg14 = 19'0000000000000000000
Found init rule in `\module5.$proc$rtl.v:623$1029'.
  Set init value: \reg15 = 14'00000000000000
Found init rule in `\module5.$proc$rtl.v:622$1028'.
  Set init value: \reg16 = 15'000000000000000
Found init rule in `\module5.$proc$rtl.v:621$1027'.
  Set init value: \reg17 = 6'000000
Found init rule in `\module5.$proc$rtl.v:620$1026'.
  Set init value: \reg18 = 13'0000000000000
Found init rule in `\module5.$proc$rtl.v:619$1025'.
  Set init value: \reg19 = 11'00000000000
Found init rule in `\module5.$proc$rtl.v:618$1024'.
  Set init value: \reg20 = 14'00000000000000
Found init rule in `\module5.$proc$rtl.v:617$1023'.
  Set init value: \reg21 = 10'0000000000
Found init rule in `\module5.$proc$rtl.v:616$1022'.
  Set init value: \reg22 = 19'0000000000000000000
Found init rule in `\module5.$proc$rtl.v:615$1021'.
  Set init value: \reg23 = 21'000000000000000000000
Found init rule in `\module5.$proc$rtl.v:614$1020'.
  Set init value: \reg24 = 6'000000
Found init rule in `\module5.$proc$rtl.v:613$1019'.
  Set init value: \reg25 = 14'00000000000000
Found init rule in `\module5.$proc$rtl.v:612$1018'.
  Set init value: \reg26 = 5'00000
Found init rule in `\module5.$proc$rtl.v:611$1017'.
  Set init value: \reg27 = 5'00000
Found init rule in `\module5.$proc$rtl.v:610$1016'.
  Set init value: \reg28 = 16'0000000000000000
Found init rule in `\module5.$proc$rtl.v:609$1015'.
  Set init value: \reg29 = 11'00000000000
Found init rule in `\module5.$proc$rtl.v:608$1014'.
  Set init value: \reg30 = 19'0000000000000000000
Found init rule in `\module5.$proc$rtl.v:607$1013'.
  Set init value: \reg31 = 9'000000000
Found init rule in `\module5.$proc$rtl.v:606$1012'.
  Set init value: \reg32 = 13'0000000000000
Found init rule in `\module5.$proc$rtl.v:605$1011'.
  Set init value: \reg33 = 19'0000000000000000000
Found init rule in `\module5.$proc$rtl.v:604$1010'.
  Set init value: \reg34 = 11'00000000000
Found init rule in `\module5.$proc$rtl.v:603$1009'.
  Set init value: \reg35 = 22'0000000000000000000000
Found init rule in `\module5.$proc$rtl.v:602$1008'.
  Set init value: \reg36 = 16'0000000000000000
Found init rule in `\module5.$proc$rtl.v:601$1007'.
  Set init value: \reg37 = 8'00000000
Found init rule in `\module5.$proc$rtl.v:600$1006'.
  Set init value: \reg38 = 11'00000000000
Found init rule in `\module5.$proc$rtl.v:599$1005'.
  Set init value: \reg39 = 5'00000
Found init rule in `\module5.$proc$rtl.v:598$1004'.
  Set init value: \reg40 = 17'00000000000000000
Found init rule in `\module5.$proc$rtl.v:597$1003'.
  Set init value: \reg41 = 10'0000000000
Found init rule in `\module5.$proc$rtl.v:596$1002'.
  Set init value: \reg42 = 14'00000000000000
Found init rule in `\module5.$proc$rtl.v:595$1001'.
  Set init value: \reg43 = 18'000000000000000000
Found init rule in `\module5.$proc$rtl.v:594$1000'.
  Set init value: \reg44 = 7'0000000
Found init rule in `\module5.$proc$rtl.v:593$999'.
  Set init value: \reg45 = 22'0000000000000000000000
Found init rule in `\module5.$proc$rtl.v:592$998'.
  Set init value: \reg46 = 8'00000000
Found init rule in `\module5.$proc$rtl.v:591$997'.
  Set init value: \reg47 = 19'0000000000000000000
Found init rule in `\module5.$proc$rtl.v:590$996'.
  Set init value: \reg48 = 22'0000000000000000000000
Found init rule in `\module5.$proc$rtl.v:589$995'.
  Set init value: \reg49 = 19'0000000000000000000
Found init rule in `\module5.$proc$rtl.v:588$994'.
  Set init value: \reg50 = 12'000000000000
Found init rule in `\module5.$proc$rtl.v:587$993'.
  Set init value: \reg51 = 15'000000000000000
Found init rule in `\module5.$proc$rtl.v:586$992'.
  Set init value: \reg52 = 21'000000000000000000000
Found init rule in `\module5.$proc$rtl.v:585$991'.
  Set init value: \reg53 = 17'00000000000000000
Found init rule in `\module5.$proc$rtl.v:584$990'.
  Set init value: \reg54 = 19'0000000000000000000
Found init rule in `\module5.$proc$rtl.v:583$989'.
  Set init value: \reg55 = 6'000000
Found init rule in `\module5.$proc$rtl.v:582$988'.
  Set init value: \reg56 = 18'000000000000000000
Found init rule in `\module5.$proc$rtl.v:581$987'.
  Set init value: \reg57 = 14'00000000000000
Found init rule in `\module5.$proc$rtl.v:580$986'.
  Set init value: \reg58 = 12'000000000000
Found init rule in `\module5.$proc$rtl.v:579$985'.
  Set init value: \reg59 = 16'0000000000000000
Found init rule in `\module5.$proc$rtl.v:578$984'.
  Set init value: \reg60 = 15'000000000000000
Found init rule in `\module5.$proc$rtl.v:577$983'.
  Set init value: \reg61 = 14'00000000000000
Found init rule in `\module5.$proc$rtl.v:576$982'.
  Set init value: \reg62 = 13'0000000000000
Found init rule in `\module5.$proc$rtl.v:569$981'.
  Set init value: \reg154 = 11'00000000000
Found init rule in `\module172.$proc$rtl.v:169$503'.
  Set init value: \reg185 = 14'00000000000000
Found init rule in `\module172.$proc$rtl.v:168$502'.
  Set init value: \reg186 = 17'00000000000000000
Found init rule in `\module172.$proc$rtl.v:167$501'.
  Set init value: \reg187 = 17'00000000000000000
Found init rule in `\module172.$proc$rtl.v:166$500'.
  Set init value: \reg188 = 18'000000000000000000
Found init rule in `\module172.$proc$rtl.v:165$499'.
  Set init value: \reg189 = 6'000000
Found init rule in `\module172.$proc$rtl.v:164$498'.
  Set init value: \reg190 = 15'000000000000000
Found init rule in `\module172.$proc$rtl.v:163$497'.
  Set init value: \reg191 = 6'000000
Found init rule in `\module172.$proc$rtl.v:162$496'.
  Set init value: \reg192 = 15'000000000000000
Found init rule in `\module172.$proc$rtl.v:161$495'.
  Set init value: \reg193 = 4'0000
Found init rule in `\module172.$proc$rtl.v:160$494'.
  Set init value: \reg194 = 7'0000000
Found init rule in `\module172.$proc$rtl.v:159$493'.
  Set init value: \reg195 = 18'000000000000000000
Found init rule in `\module172.$proc$rtl.v:158$492'.
  Set init value: \reg196 = 22'0000000000000000000000
Found init rule in `\module172.$proc$rtl.v:157$491'.
  Set init value: \reg197 = 9'000000000
Found init rule in `\module172.$proc$rtl.v:156$490'.
  Set init value: \reg198 = 14'00000000000000
Found init rule in `\module172.$proc$rtl.v:155$489'.
  Set init value: \reg199 = 22'0000000000000000000000
Found init rule in `\module172.$proc$rtl.v:154$488'.
  Set init value: \reg200 = 5'00000
Found init rule in `\module172.$proc$rtl.v:153$487'.
  Set init value: \reg201 = 20'00000000000000000000
Found init rule in `\module172.$proc$rtl.v:152$486'.
  Set init value: \reg202 = 7'0000000
Found init rule in `\module172.$proc$rtl.v:149$485'.
  Set init value: \reg205 = 10'0000000000
Found init rule in `\module172.$proc$rtl.v:148$484'.
  Set init value: \reg206 = 19'0000000000000000000
Found init rule in `\module172.$proc$rtl.v:147$483'.
  Set init value: \reg207 = 5'00000
Found init rule in `\module172.$proc$rtl.v:146$482'.
  Set init value: \reg208 = 15'000000000000000
Found init rule in `\module172.$proc$rtl.v:145$481'.
  Set init value: \reg209 = 6'000000
Found init rule in `\module172.$proc$rtl.v:144$480'.
  Set init value: \reg210 = 9'000000000
Found init rule in `\module172.$proc$rtl.v:143$479'.
  Set init value: \reg211 = 5'00000
Found init rule in `\module172.$proc$rtl.v:142$478'.
  Set init value: \reg212 = 20'00000000000000000000
Found init rule in `\module172.$proc$rtl.v:141$477'.
  Set init value: \reg213 = 21'000000000000000000000
Found init rule in `\module172.$proc$rtl.v:140$476'.
  Set init value: \reg214 = 14'00000000000000
Found init rule in `\module172.$proc$rtl.v:139$475'.
  Set init value: \reg215 = 3'000
Found init rule in `\module172.$proc$rtl.v:138$474'.
  Set init value: \reg216 = 6'000000
Found init rule in `\module172.$proc$rtl.v:137$473'.
  Set init value: \reg217 = 10'0000000000
Found init rule in `\module172.$proc$rtl.v:136$472'.
  Set init value: \reg218 = 21'000000000000000000000
Found init rule in `\module172.$proc$rtl.v:135$471'.
  Set init value: \reg219 = 3'000
Found init rule in `\module172.$proc$rtl.v:134$470'.
  Set init value: \reg220 = 11'00000000000
Found init rule in `\module172.$proc$rtl.v:133$469'.
  Set init value: \reg221 = 4'0000
Found init rule in `\module172.$proc$rtl.v:132$468'.
  Set init value: \reg222 = 16'0000000000000000
Found init rule in `\module172.$proc$rtl.v:131$467'.
  Set init value: \reg223 = 17'00000000000000000
Found init rule in `\module172.$proc$rtl.v:130$466'.
  Set init value: \reg224 = 22'0000000000000000000000
Found init rule in `\module172.$proc$rtl.v:129$465'.
  Set init value: \reg225 = 4'0000
Found init rule in `\module172.$proc$rtl.v:128$464'.
  Set init value: \reg226 = 13'0000000000000
Found init rule in `\module172.$proc$rtl.v:127$463'.
  Set init value: \reg227 = 7'0000000
Found init rule in `\module172.$proc$rtl.v:126$462'.
  Set init value: \reg228 = 22'0000000000000000000000
Found init rule in `\module172.$proc$rtl.v:125$461'.
  Set init value: \reg229 = 6'000000
Found init rule in `\module172.$proc$rtl.v:124$460'.
  Set init value: \reg230 = 7'0000000
Found init rule in `\module172.$proc$rtl.v:122$459'.
  Set init value: \reg232 = 5'00000
Found init rule in `\module172.$proc$rtl.v:121$458'.
  Set init value: \reg233 = 7'0000000
Found init rule in `\module172.$proc$rtl.v:120$457'.
  Set init value: \reg234 = 17'00000000000000000
Found init rule in `\module172.$proc$rtl.v:119$456'.
  Set init value: \reg235 = 13'0000000000000
Found init rule in `\module172.$proc$rtl.v:118$455'.
  Set init value: \reg236 = 20'00000000000000000000
Found init rule in `\module172.$proc$rtl.v:117$454'.
  Set init value: \reg237 = 4'0000
Found init rule in `\module172.$proc$rtl.v:116$453'.
  Set init value: \reg238 = 13'0000000000000
Found init rule in `\module172.$proc$rtl.v:115$452'.
  Set init value: \reg239 = 20'00000000000000000000
Found init rule in `\module172.$proc$rtl.v:114$451'.
  Set init value: \reg240 = 4'0000
Found init rule in `\module172.$proc$rtl.v:113$450'.
  Set init value: \reg241 = 11'00000000000

2.2.4. Executing PROC_ARST pass (detect async resets in processes).

2.2.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\module98.$proc$rtl.v:1146$1281'.
     1/1: $1\reg106[6:0]
Creating decoders for process `\module98.$proc$rtl.v:1145$1280'.
     1/1: $1\reg107[16:0]
Creating decoders for process `\module98.$proc$rtl.v:1144$1279'.
     1/1: $1\reg108[11:0]
Creating decoders for process `\module98.$proc$rtl.v:1143$1278'.
     1/1: $1\reg109[19:0]
Creating decoders for process `\module98.$proc$rtl.v:1142$1277'.
     1/1: $1\reg110[5:0]
Creating decoders for process `\module98.$proc$rtl.v:1141$1276'.
     1/1: $1\reg111[4:0]
Creating decoders for process `\module98.$proc$rtl.v:1140$1275'.
     1/1: $1\reg112[19:0]
Creating decoders for process `\module98.$proc$rtl.v:1176$1119'.
     1/7: $0\reg106[6:0]
     2/7: $0\reg107[16:0]
     3/7: $0\reg108[11:0]
     4/7: $0\reg109[19:0]
     5/7: $0\reg110[5:0]
     6/7: $0\reg111[4:0]
     7/7: $0\reg112[19:0]
Creating decoders for process `\module133.$proc$rtl.v:1074$1116'.
     1/1: $1\reg139[13:0]
Creating decoders for process `\module133.$proc$rtl.v:1073$1115'.
     1/1: $1\reg140[21:0]
Creating decoders for process `\module133.$proc$rtl.v:1072$1114'.
     1/1: $1\reg141[21:0]
Creating decoders for process `\module133.$proc$rtl.v:1090$1043'.
     1/3: $0\reg141[21:0]
     2/3: $0\reg140[21:0]
     3/3: $0\reg139[13:0]
Creating decoders for process `\module5.$proc$rtl.v:639$1042'.
     1/1: $0\reg96[10:0]
Creating decoders for process `\module5.$proc$rtl.v:638$1041'.
     1/1: $0\reg95[5:0]
Creating decoders for process `\module5.$proc$rtl.v:637$1040'.
     1/1: $1\reg94[4:0]
Creating decoders for process `\module5.$proc$rtl.v:636$1039'.
     1/1: $1\reg93[13:0]
Creating decoders for process `\module5.$proc$rtl.v:635$1038'.
     1/1: $1\reg92[5:0]
Creating decoders for process `\module5.$proc$rtl.v:634$1037'.
     1/1: $1\reg91[2:0]
Creating decoders for process `\module5.$proc$rtl.v:633$1036'.
     1/1: $1\reg90[13:0]
Creating decoders for process `\module5.$proc$rtl.v:631$1035'.
     1/1: $1\reg88[7:0]
Creating decoders for process `\module5.$proc$rtl.v:630$1034'.
     1/1: $1\reg87[6:0]
Creating decoders for process `\module5.$proc$rtl.v:629$1033'.
     1/1: $1\reg86[16:0]
Creating decoders for process `\module5.$proc$rtl.v:628$1032'.
     1/1: $1\reg85[21:0]
Creating decoders for process `\module5.$proc$rtl.v:625$1031'.
     1/1: $1\reg13[16:0]
Creating decoders for process `\module5.$proc$rtl.v:624$1030'.
     1/1: $1\reg14[18:0]
Creating decoders for process `\module5.$proc$rtl.v:623$1029'.
     1/1: $1\reg15[13:0]
Creating decoders for process `\module5.$proc$rtl.v:622$1028'.
     1/1: $1\reg16[14:0]
Creating decoders for process `\module5.$proc$rtl.v:621$1027'.
     1/1: $1\reg17[5:0]
Creating decoders for process `\module5.$proc$rtl.v:620$1026'.
     1/1: $1\reg18[12:0]
Creating decoders for process `\module5.$proc$rtl.v:619$1025'.
     1/1: $1\reg19[10:0]
Creating decoders for process `\module5.$proc$rtl.v:618$1024'.
     1/1: $1\reg20[13:0]
Creating decoders for process `\module5.$proc$rtl.v:617$1023'.
     1/1: $1\reg21[9:0]
Creating decoders for process `\module5.$proc$rtl.v:616$1022'.
     1/1: $1\reg22[18:0]
Creating decoders for process `\module5.$proc$rtl.v:615$1021'.
     1/1: $1\reg23[20:0]
Creating decoders for process `\module5.$proc$rtl.v:614$1020'.
     1/1: $1\reg24[5:0]
Creating decoders for process `\module5.$proc$rtl.v:613$1019'.
     1/1: $1\reg25[13:0]
Creating decoders for process `\module5.$proc$rtl.v:612$1018'.
     1/1: $1\reg26[4:0]
Creating decoders for process `\module5.$proc$rtl.v:611$1017'.
     1/1: $1\reg27[4:0]
Creating decoders for process `\module5.$proc$rtl.v:610$1016'.
     1/1: $1\reg28[15:0]
Creating decoders for process `\module5.$proc$rtl.v:609$1015'.
     1/1: $1\reg29[10:0]
Creating decoders for process `\module5.$proc$rtl.v:608$1014'.
     1/1: $1\reg30[18:0]
Creating decoders for process `\module5.$proc$rtl.v:607$1013'.
     1/1: $1\reg31[8:0]
Creating decoders for process `\module5.$proc$rtl.v:606$1012'.
     1/1: $1\reg32[12:0]
Creating decoders for process `\module5.$proc$rtl.v:605$1011'.
     1/1: $1\reg33[18:0]
Creating decoders for process `\module5.$proc$rtl.v:604$1010'.
     1/1: $1\reg34[10:0]
Creating decoders for process `\module5.$proc$rtl.v:603$1009'.
     1/1: $1\reg35[21:0]
Creating decoders for process `\module5.$proc$rtl.v:602$1008'.
     1/1: $1\reg36[15:0]
Creating decoders for process `\module5.$proc$rtl.v:601$1007'.
     1/1: $1\reg37[7:0]
Creating decoders for process `\module5.$proc$rtl.v:600$1006'.
     1/1: $1\reg38[10:0]
Creating decoders for process `\module5.$proc$rtl.v:599$1005'.
     1/1: $1\reg39[4:0]
Creating decoders for process `\module5.$proc$rtl.v:598$1004'.
     1/1: $1\reg40[16:0]
Creating decoders for process `\module5.$proc$rtl.v:597$1003'.
     1/1: $1\reg41[9:0]
Creating decoders for process `\module5.$proc$rtl.v:596$1002'.
     1/1: $1\reg42[13:0]
Creating decoders for process `\module5.$proc$rtl.v:595$1001'.
     1/1: $1\reg43[17:0]
Creating decoders for process `\module5.$proc$rtl.v:594$1000'.
     1/1: $1\reg44[6:0]
Creating decoders for process `\module5.$proc$rtl.v:593$999'.
     1/1: $1\reg45[21:0]
Creating decoders for process `\module5.$proc$rtl.v:592$998'.
     1/1: $1\reg46[7:0]
Creating decoders for process `\module5.$proc$rtl.v:591$997'.
     1/1: $1\reg47[18:0]
Creating decoders for process `\module5.$proc$rtl.v:590$996'.
     1/1: $1\reg48[21:0]
Creating decoders for process `\module5.$proc$rtl.v:589$995'.
     1/1: $1\reg49[18:0]
Creating decoders for process `\module5.$proc$rtl.v:588$994'.
     1/1: $1\reg50[11:0]
Creating decoders for process `\module5.$proc$rtl.v:587$993'.
     1/1: $1\reg51[14:0]
Creating decoders for process `\module5.$proc$rtl.v:586$992'.
     1/1: $1\reg52[20:0]
Creating decoders for process `\module5.$proc$rtl.v:585$991'.
     1/1: $1\reg53[16:0]
Creating decoders for process `\module5.$proc$rtl.v:584$990'.
     1/1: $1\reg54[18:0]
Creating decoders for process `\module5.$proc$rtl.v:583$989'.
     1/1: $1\reg55[5:0]
Creating decoders for process `\module5.$proc$rtl.v:582$988'.
     1/1: $1\reg56[17:0]
Creating decoders for process `\module5.$proc$rtl.v:581$987'.
     1/1: $1\reg57[13:0]
Creating decoders for process `\module5.$proc$rtl.v:580$986'.
     1/1: $1\reg58[11:0]
Creating decoders for process `\module5.$proc$rtl.v:579$985'.
     1/1: $1\reg59[15:0]
Creating decoders for process `\module5.$proc$rtl.v:578$984'.
     1/1: $1\reg60[14:0]
Creating decoders for process `\module5.$proc$rtl.v:577$983'.
     1/1: $1\reg61[13:0]
Creating decoders for process `\module5.$proc$rtl.v:576$982'.
     1/1: $1\reg62[12:0]
Creating decoders for process `\module5.$proc$rtl.v:569$981'.
     1/1: $1\reg154[10:0]
Creating decoders for process `\module5.$proc$rtl.v:1045$966'.
     1/1: $0\reg154[10:0]
Creating decoders for process `\module5.$proc$rtl.v:990$907'.
     1/5: $0\reg94[4:0]
     2/5: $0\reg93[13:0]
     3/5: $0\reg92[5:0]
     4/5: $0\reg91[2:0]
     5/5: $0\reg90[13:0]
Creating decoders for process `\module5.$proc$rtl.v:971$871'.
     1/4: $0\reg88[7:0]
     2/4: $0\reg87[6:0]
     3/4: $0\reg86[16:0]
     4/4: $0\reg85[21:0]
Creating decoders for process `\module5.$proc$rtl.v:868$731'.
     1/19: $0\reg62[12:0]
     2/19: $0\reg44[6:0]
     3/19: $0\reg45[21:0]
     4/19: $0\reg46[7:0]
     5/19: $0\reg47[18:0]
     6/19: $0\reg48[21:0]
     7/19: $0\reg49[18:0]
     8/19: $0\reg50[11:0]
     9/19: $0\reg51[14:0]
    10/19: $0\reg52[20:0]
    11/19: $0\reg53[16:0]
    12/19: $0\reg54[18:0]
    13/19: $0\reg55[5:0]
    14/19: $0\reg56[17:0]
    15/19: $0\reg57[13:0]
    16/19: $0\reg58[11:0]
    17/19: $0\reg59[15:0]
    18/19: $0\reg60[14:0]
    19/19: $0\reg61[13:0]
Creating decoders for process `\module5.$proc$rtl.v:861$718'.
     1/2: $0\reg43[17:0]
     2/2: $0\reg42[13:0]
Creating decoders for process `\module5.$proc$rtl.v:734$515'.
     1/26: $0\reg35[21:0]
     2/26: $0\reg29[10:0]
     3/26: $0\reg16[14:0]
     4/26: $0\reg17[5:0]
     5/26: $0\reg18[12:0]
     6/26: $0\reg19[10:0]
     7/26: $0\reg20[13:0]
     8/26: $0\reg21[9:0]
     9/26: $0\reg22[18:0]
    10/26: $0\reg23[20:0]
    11/26: $0\reg24[5:0]
    12/26: $0\reg25[13:0]
    13/26: $0\reg26[4:0]
    14/26: $0\reg27[4:0]
    15/26: $0\reg28[15:0]
    16/26: $0\reg30[18:0]
    17/26: $0\reg31[8:0]
    18/26: $0\reg32[12:0]
    19/26: $0\reg33[18:0]
    20/26: $0\reg34[10:0]
    21/26: $0\reg36[15:0]
    22/26: $0\reg37[7:0]
    23/26: $0\reg38[10:0]
    24/26: $0\reg39[4:0]
    25/26: $0\reg40[16:0]
    26/26: $0\reg41[9:0]
Creating decoders for process `\module5.$proc$rtl.v:718$504'.
     1/3: $0\reg15[13:0]
     2/3: $0\reg13[16:0]
     3/3: $0\reg14[18:0]
Creating decoders for process `\module172.$proc$rtl.v:169$503'.
     1/1: $1\reg185[13:0]
Creating decoders for process `\module172.$proc$rtl.v:168$502'.
     1/1: $1\reg186[16:0]
Creating decoders for process `\module172.$proc$rtl.v:167$501'.
     1/1: $1\reg187[16:0]
Creating decoders for process `\module172.$proc$rtl.v:166$500'.
     1/1: $1\reg188[17:0]
Creating decoders for process `\module172.$proc$rtl.v:165$499'.
     1/1: $1\reg189[5:0]
Creating decoders for process `\module172.$proc$rtl.v:164$498'.
     1/1: $1\reg190[14:0]
Creating decoders for process `\module172.$proc$rtl.v:163$497'.
     1/1: $1\reg191[5:0]
Creating decoders for process `\module172.$proc$rtl.v:162$496'.
     1/1: $1\reg192[14:0]
Creating decoders for process `\module172.$proc$rtl.v:161$495'.
     1/1: $1\reg193[3:0]
Creating decoders for process `\module172.$proc$rtl.v:160$494'.
     1/1: $1\reg194[6:0]
Creating decoders for process `\module172.$proc$rtl.v:159$493'.
     1/1: $1\reg195[17:0]
Creating decoders for process `\module172.$proc$rtl.v:158$492'.
     1/1: $1\reg196[21:0]
Creating decoders for process `\module172.$proc$rtl.v:157$491'.
     1/1: $1\reg197[8:0]
Creating decoders for process `\module172.$proc$rtl.v:156$490'.
     1/1: $1\reg198[13:0]
Creating decoders for process `\module172.$proc$rtl.v:155$489'.
     1/1: $1\reg199[21:0]
Creating decoders for process `\module172.$proc$rtl.v:154$488'.
     1/1: $1\reg200[4:0]
Creating decoders for process `\module172.$proc$rtl.v:153$487'.
     1/1: $1\reg201[19:0]
Creating decoders for process `\module172.$proc$rtl.v:152$486'.
     1/1: $1\reg202[6:0]
Creating decoders for process `\module172.$proc$rtl.v:149$485'.
     1/1: $1\reg205[9:0]
Creating decoders for process `\module172.$proc$rtl.v:148$484'.
     1/1: $1\reg206[18:0]
Creating decoders for process `\module172.$proc$rtl.v:147$483'.
     1/1: $1\reg207[4:0]
Creating decoders for process `\module172.$proc$rtl.v:146$482'.
     1/1: $1\reg208[14:0]
Creating decoders for process `\module172.$proc$rtl.v:145$481'.
     1/1: $1\reg209[5:0]
Creating decoders for process `\module172.$proc$rtl.v:144$480'.
     1/1: $1\reg210[8:0]
Creating decoders for process `\module172.$proc$rtl.v:143$479'.
     1/1: $1\reg211[4:0]
Creating decoders for process `\module172.$proc$rtl.v:142$478'.
     1/1: $1\reg212[19:0]
Creating decoders for process `\module172.$proc$rtl.v:141$477'.
     1/1: $1\reg213[20:0]
Creating decoders for process `\module172.$proc$rtl.v:140$476'.
     1/1: $1\reg214[13:0]
Creating decoders for process `\module172.$proc$rtl.v:139$475'.
     1/1: $1\reg215[2:0]
Creating decoders for process `\module172.$proc$rtl.v:138$474'.
     1/1: $1\reg216[5:0]
Creating decoders for process `\module172.$proc$rtl.v:137$473'.
     1/1: $1\reg217[9:0]
Creating decoders for process `\module172.$proc$rtl.v:136$472'.
     1/1: $1\reg218[20:0]
Creating decoders for process `\module172.$proc$rtl.v:135$471'.
     1/1: $1\reg219[2:0]
Creating decoders for process `\module172.$proc$rtl.v:134$470'.
     1/1: $1\reg220[10:0]
Creating decoders for process `\module172.$proc$rtl.v:133$469'.
     1/1: $1\reg221[3:0]
Creating decoders for process `\module172.$proc$rtl.v:132$468'.
     1/1: $1\reg222[15:0]
Creating decoders for process `\module172.$proc$rtl.v:131$467'.
     1/1: $1\reg223[16:0]
Creating decoders for process `\module172.$proc$rtl.v:130$466'.
     1/1: $1\reg224[21:0]
Creating decoders for process `\module172.$proc$rtl.v:129$465'.
     1/1: $1\reg225[3:0]
Creating decoders for process `\module172.$proc$rtl.v:128$464'.
     1/1: $1\reg226[12:0]
Creating decoders for process `\module172.$proc$rtl.v:127$463'.
     1/1: $1\reg227[6:0]
Creating decoders for process `\module172.$proc$rtl.v:126$462'.
     1/1: $1\reg228[21:0]
Creating decoders for process `\module172.$proc$rtl.v:125$461'.
     1/1: $1\reg229[5:0]
Creating decoders for process `\module172.$proc$rtl.v:124$460'.
     1/1: $1\reg230[6:0]
Creating decoders for process `\module172.$proc$rtl.v:122$459'.
     1/1: $1\reg232[4:0]
Creating decoders for process `\module172.$proc$rtl.v:121$458'.
     1/1: $1\reg233[6:0]
Creating decoders for process `\module172.$proc$rtl.v:120$457'.
     1/1: $1\reg234[16:0]
Creating decoders for process `\module172.$proc$rtl.v:119$456'.
     1/1: $1\reg235[12:0]
Creating decoders for process `\module172.$proc$rtl.v:118$455'.
     1/1: $1\reg236[19:0]
Creating decoders for process `\module172.$proc$rtl.v:117$454'.
     1/1: $1\reg237[3:0]
Creating decoders for process `\module172.$proc$rtl.v:116$453'.
     1/1: $1\reg238[12:0]
Creating decoders for process `\module172.$proc$rtl.v:115$452'.
     1/1: $1\reg239[19:0]
Creating decoders for process `\module172.$proc$rtl.v:114$451'.
     1/1: $1\reg240[3:0]
Creating decoders for process `\module172.$proc$rtl.v:113$450'.
     1/1: $1\reg241[10:0]
Creating decoders for process `\module172.$proc$rtl.v:494$356'.
     1/10: $0\reg232[4:0]
     2/10: $0\reg233[6:0]
     3/10: $0\reg240[3:0]
     4/10: $0\reg241[10:0]
     5/10: $0\reg234[16:0]
     6/10: $0\reg235[12:0]
     7/10: $0\reg236[19:0]
     8/10: $0\reg237[3:0]
     9/10: $0\reg238[12:0]
    10/10: $0\reg239[19:0]
Creating decoders for process `\module172.$proc$rtl.v:356$202'.
     1/23: $0\reg230[6:0]
     2/23: $0\reg208[14:0]
     3/23: $0\reg209[5:0]
     4/23: $0\reg210[8:0]
     5/23: $0\reg211[4:0]
     6/23: $0\reg212[19:0]
     7/23: $0\reg213[20:0]
     8/23: $0\reg214[13:0]
     9/23: $0\reg215[2:0]
    10/23: $0\reg216[5:0]
    11/23: $0\reg217[9:0]
    12/23: $0\reg218[20:0]
    13/23: $0\reg219[2:0]
    14/23: $0\reg220[10:0]
    15/23: $0\reg221[3:0]
    16/23: $0\reg222[15:0]
    17/23: $0\reg223[16:0]
    18/23: $0\reg224[21:0]
    19/23: $0\reg225[3:0]
    20/23: $0\reg226[12:0]
    21/23: $0\reg227[6:0]
    22/23: $0\reg228[21:0]
    23/23: $0\reg229[5:0]
Creating decoders for process `\module172.$proc$rtl.v:350$201'.
     1/3: $0\reg207[4:0]
     2/3: $0\reg206[18:0]
     3/3: $0\reg205[9:0]
Creating decoders for process `\module172.$proc$rtl.v:252$92'.
     1/18: $0\reg202[6:0]
     2/18: $0\reg185[13:0]
     3/18: $0\reg186[16:0]
     4/18: $0\reg187[16:0]
     5/18: $0\reg188[17:0]
     6/18: $0\reg189[5:0]
     7/18: $0\reg190[14:0]
     8/18: $0\reg191[5:0]
     9/18: $0\reg192[14:0]
    10/18: $0\reg193[3:0]
    11/18: $0\reg194[6:0]
    12/18: $0\reg195[17:0]
    13/18: $0\reg196[21:0]
    14/18: $0\reg197[8:0]
    15/18: $0\reg198[13:0]
    16/18: $0\reg199[21:0]
    17/18: $0\reg200[4:0]
    18/18: $0\reg201[19:0]

2.2.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\module5.\reg96' from process `\module5.$proc$rtl.v:639$1042'.
No latch inferred for signal `\module5.\reg95' from process `\module5.$proc$rtl.v:638$1041'.

2.2.7. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\module98.\reg112' using process `\module98.$proc$rtl.v:1176$1119'.
  created $dff cell `$procdff$1866' with positive edge clock.
Creating register for signal `\module98.\reg111' using process `\module98.$proc$rtl.v:1176$1119'.
  created $dff cell `$procdff$1867' with positive edge clock.
Creating register for signal `\module98.\reg110' using process `\module98.$proc$rtl.v:1176$1119'.
  created $dff cell `$procdff$1868' with positive edge clock.
Creating register for signal `\module98.\reg109' using process `\module98.$proc$rtl.v:1176$1119'.
  created $dff cell `$procdff$1869' with positive edge clock.
Creating register for signal `\module98.\reg108' using process `\module98.$proc$rtl.v:1176$1119'.
  created $dff cell `$procdff$1870' with positive edge clock.
Creating register for signal `\module98.\reg107' using process `\module98.$proc$rtl.v:1176$1119'.
  created $dff cell `$procdff$1871' with positive edge clock.
Creating register for signal `\module98.\reg106' using process `\module98.$proc$rtl.v:1176$1119'.
  created $dff cell `$procdff$1872' with positive edge clock.
Creating register for signal `\module133.\reg141' using process `\module133.$proc$rtl.v:1090$1043'.
  created $dff cell `$procdff$1873' with positive edge clock.
Creating register for signal `\module133.\reg140' using process `\module133.$proc$rtl.v:1090$1043'.
  created $dff cell `$procdff$1874' with positive edge clock.
Creating register for signal `\module133.\reg139' using process `\module133.$proc$rtl.v:1090$1043'.
  created $dff cell `$procdff$1875' with positive edge clock.
Creating register for signal `\module5.\reg154' using process `\module5.$proc$rtl.v:1045$966'.
  created $dff cell `$procdff$1876' with positive edge clock.
Creating register for signal `\module5.\reg90' using process `\module5.$proc$rtl.v:990$907'.
  created $dff cell `$procdff$1877' with positive edge clock.
Creating register for signal `\module5.\reg91' using process `\module5.$proc$rtl.v:990$907'.
  created $dff cell `$procdff$1878' with positive edge clock.
Creating register for signal `\module5.\reg92' using process `\module5.$proc$rtl.v:990$907'.
  created $dff cell `$procdff$1879' with positive edge clock.
Creating register for signal `\module5.\reg93' using process `\module5.$proc$rtl.v:990$907'.
  created $dff cell `$procdff$1880' with positive edge clock.
Creating register for signal `\module5.\reg94' using process `\module5.$proc$rtl.v:990$907'.
  created $dff cell `$procdff$1881' with positive edge clock.
Creating register for signal `\module5.\reg85' using process `\module5.$proc$rtl.v:971$871'.
  created $dff cell `$procdff$1882' with positive edge clock.
Creating register for signal `\module5.\reg86' using process `\module5.$proc$rtl.v:971$871'.
  created $dff cell `$procdff$1883' with positive edge clock.
Creating register for signal `\module5.\reg87' using process `\module5.$proc$rtl.v:971$871'.
  created $dff cell `$procdff$1884' with positive edge clock.
Creating register for signal `\module5.\reg88' using process `\module5.$proc$rtl.v:971$871'.
  created $dff cell `$procdff$1885' with positive edge clock.
Creating register for signal `\module5.\reg62' using process `\module5.$proc$rtl.v:868$731'.
  created $dff cell `$procdff$1886' with positive edge clock.
Creating register for signal `\module5.\reg61' using process `\module5.$proc$rtl.v:868$731'.
  created $dff cell `$procdff$1887' with positive edge clock.
Creating register for signal `\module5.\reg60' using process `\module5.$proc$rtl.v:868$731'.
  created $dff cell `$procdff$1888' with positive edge clock.
Creating register for signal `\module5.\reg59' using process `\module5.$proc$rtl.v:868$731'.
  created $dff cell `$procdff$1889' with positive edge clock.
Creating register for signal `\module5.\reg58' using process `\module5.$proc$rtl.v:868$731'.
  created $dff cell `$procdff$1890' with positive edge clock.
Creating register for signal `\module5.\reg57' using process `\module5.$proc$rtl.v:868$731'.
  created $dff cell `$procdff$1891' with positive edge clock.
Creating register for signal `\module5.\reg56' using process `\module5.$proc$rtl.v:868$731'.
  created $dff cell `$procdff$1892' with positive edge clock.
Creating register for signal `\module5.\reg55' using process `\module5.$proc$rtl.v:868$731'.
  created $dff cell `$procdff$1893' with positive edge clock.
Creating register for signal `\module5.\reg54' using process `\module5.$proc$rtl.v:868$731'.
  created $dff cell `$procdff$1894' with positive edge clock.
Creating register for signal `\module5.\reg53' using process `\module5.$proc$rtl.v:868$731'.
  created $dff cell `$procdff$1895' with positive edge clock.
Creating register for signal `\module5.\reg52' using process `\module5.$proc$rtl.v:868$731'.
  created $dff cell `$procdff$1896' with positive edge clock.
Creating register for signal `\module5.\reg51' using process `\module5.$proc$rtl.v:868$731'.
  created $dff cell `$procdff$1897' with positive edge clock.
Creating register for signal `\module5.\reg50' using process `\module5.$proc$rtl.v:868$731'.
  created $dff cell `$procdff$1898' with positive edge clock.
Creating register for signal `\module5.\reg49' using process `\module5.$proc$rtl.v:868$731'.
  created $dff cell `$procdff$1899' with positive edge clock.
Creating register for signal `\module5.\reg48' using process `\module5.$proc$rtl.v:868$731'.
  created $dff cell `$procdff$1900' with positive edge clock.
Creating register for signal `\module5.\reg47' using process `\module5.$proc$rtl.v:868$731'.
  created $dff cell `$procdff$1901' with positive edge clock.
Creating register for signal `\module5.\reg46' using process `\module5.$proc$rtl.v:868$731'.
  created $dff cell `$procdff$1902' with positive edge clock.
Creating register for signal `\module5.\reg45' using process `\module5.$proc$rtl.v:868$731'.
  created $dff cell `$procdff$1903' with positive edge clock.
Creating register for signal `\module5.\reg44' using process `\module5.$proc$rtl.v:868$731'.
  created $dff cell `$procdff$1904' with positive edge clock.
Creating register for signal `\module5.\reg43' using process `\module5.$proc$rtl.v:861$718'.
  created $dff cell `$procdff$1905' with positive edge clock.
Creating register for signal `\module5.\reg42' using process `\module5.$proc$rtl.v:861$718'.
  created $dff cell `$procdff$1906' with positive edge clock.
Creating register for signal `\module5.\reg41' using process `\module5.$proc$rtl.v:734$515'.
  created $dff cell `$procdff$1907' with positive edge clock.
Creating register for signal `\module5.\reg40' using process `\module5.$proc$rtl.v:734$515'.
  created $dff cell `$procdff$1908' with positive edge clock.
Creating register for signal `\module5.\reg39' using process `\module5.$proc$rtl.v:734$515'.
  created $dff cell `$procdff$1909' with positive edge clock.
Creating register for signal `\module5.\reg38' using process `\module5.$proc$rtl.v:734$515'.
  created $dff cell `$procdff$1910' with positive edge clock.
Creating register for signal `\module5.\reg37' using process `\module5.$proc$rtl.v:734$515'.
  created $dff cell `$procdff$1911' with positive edge clock.
Creating register for signal `\module5.\reg36' using process `\module5.$proc$rtl.v:734$515'.
  created $dff cell `$procdff$1912' with positive edge clock.
Creating register for signal `\module5.\reg35' using process `\module5.$proc$rtl.v:734$515'.
  created $dff cell `$procdff$1913' with positive edge clock.
Creating register for signal `\module5.\reg34' using process `\module5.$proc$rtl.v:734$515'.
  created $dff cell `$procdff$1914' with positive edge clock.
Creating register for signal `\module5.\reg33' using process `\module5.$proc$rtl.v:734$515'.
  created $dff cell `$procdff$1915' with positive edge clock.
Creating register for signal `\module5.\reg32' using process `\module5.$proc$rtl.v:734$515'.
  created $dff cell `$procdff$1916' with positive edge clock.
Creating register for signal `\module5.\reg31' using process `\module5.$proc$rtl.v:734$515'.
  created $dff cell `$procdff$1917' with positive edge clock.
Creating register for signal `\module5.\reg30' using process `\module5.$proc$rtl.v:734$515'.
  created $dff cell `$procdff$1918' with positive edge clock.
Creating register for signal `\module5.\reg29' using process `\module5.$proc$rtl.v:734$515'.
  created $dff cell `$procdff$1919' with positive edge clock.
Creating register for signal `\module5.\reg28' using process `\module5.$proc$rtl.v:734$515'.
  created $dff cell `$procdff$1920' with positive edge clock.
Creating register for signal `\module5.\reg27' using process `\module5.$proc$rtl.v:734$515'.
  created $dff cell `$procdff$1921' with positive edge clock.
Creating register for signal `\module5.\reg26' using process `\module5.$proc$rtl.v:734$515'.
  created $dff cell `$procdff$1922' with positive edge clock.
Creating register for signal `\module5.\reg25' using process `\module5.$proc$rtl.v:734$515'.
  created $dff cell `$procdff$1923' with positive edge clock.
Creating register for signal `\module5.\reg24' using process `\module5.$proc$rtl.v:734$515'.
  created $dff cell `$procdff$1924' with positive edge clock.
Creating register for signal `\module5.\reg23' using process `\module5.$proc$rtl.v:734$515'.
  created $dff cell `$procdff$1925' with positive edge clock.
Creating register for signal `\module5.\reg22' using process `\module5.$proc$rtl.v:734$515'.
  created $dff cell `$procdff$1926' with positive edge clock.
Creating register for signal `\module5.\reg21' using process `\module5.$proc$rtl.v:734$515'.
  created $dff cell `$procdff$1927' with positive edge clock.
Creating register for signal `\module5.\reg20' using process `\module5.$proc$rtl.v:734$515'.
  created $dff cell `$procdff$1928' with positive edge clock.
Creating register for signal `\module5.\reg19' using process `\module5.$proc$rtl.v:734$515'.
  created $dff cell `$procdff$1929' with positive edge clock.
Creating register for signal `\module5.\reg18' using process `\module5.$proc$rtl.v:734$515'.
  created $dff cell `$procdff$1930' with positive edge clock.
Creating register for signal `\module5.\reg17' using process `\module5.$proc$rtl.v:734$515'.
  created $dff cell `$procdff$1931' with positive edge clock.
Creating register for signal `\module5.\reg16' using process `\module5.$proc$rtl.v:734$515'.
  created $dff cell `$procdff$1932' with positive edge clock.
Creating register for signal `\module5.\reg15' using process `\module5.$proc$rtl.v:718$504'.
  created $dff cell `$procdff$1933' with positive edge clock.
Creating register for signal `\module5.\reg14' using process `\module5.$proc$rtl.v:718$504'.
  created $dff cell `$procdff$1934' with positive edge clock.
Creating register for signal `\module5.\reg13' using process `\module5.$proc$rtl.v:718$504'.
  created $dff cell `$procdff$1935' with positive edge clock.
Creating register for signal `\module172.\reg239' using process `\module172.$proc$rtl.v:494$356'.
  created $dff cell `$procdff$1936' with positive edge clock.
Creating register for signal `\module172.\reg238' using process `\module172.$proc$rtl.v:494$356'.
  created $dff cell `$procdff$1937' with positive edge clock.
Creating register for signal `\module172.\reg237' using process `\module172.$proc$rtl.v:494$356'.
  created $dff cell `$procdff$1938' with positive edge clock.
Creating register for signal `\module172.\reg236' using process `\module172.$proc$rtl.v:494$356'.
  created $dff cell `$procdff$1939' with positive edge clock.
Creating register for signal `\module172.\reg235' using process `\module172.$proc$rtl.v:494$356'.
  created $dff cell `$procdff$1940' with positive edge clock.
Creating register for signal `\module172.\reg234' using process `\module172.$proc$rtl.v:494$356'.
  created $dff cell `$procdff$1941' with positive edge clock.
Creating register for signal `\module172.\reg241' using process `\module172.$proc$rtl.v:494$356'.
  created $dff cell `$procdff$1942' with positive edge clock.
Creating register for signal `\module172.\reg240' using process `\module172.$proc$rtl.v:494$356'.
  created $dff cell `$procdff$1943' with positive edge clock.
Creating register for signal `\module172.\reg233' using process `\module172.$proc$rtl.v:494$356'.
  created $dff cell `$procdff$1944' with positive edge clock.
Creating register for signal `\module172.\reg232' using process `\module172.$proc$rtl.v:494$356'.
  created $dff cell `$procdff$1945' with positive edge clock.
Creating register for signal `\module172.\reg230' using process `\module172.$proc$rtl.v:356$202'.
  created $dff cell `$procdff$1946' with positive edge clock.
Creating register for signal `\module172.\reg229' using process `\module172.$proc$rtl.v:356$202'.
  created $dff cell `$procdff$1947' with positive edge clock.
Creating register for signal `\module172.\reg228' using process `\module172.$proc$rtl.v:356$202'.
  created $dff cell `$procdff$1948' with positive edge clock.
Creating register for signal `\module172.\reg227' using process `\module172.$proc$rtl.v:356$202'.
  created $dff cell `$procdff$1949' with positive edge clock.
Creating register for signal `\module172.\reg226' using process `\module172.$proc$rtl.v:356$202'.
  created $dff cell `$procdff$1950' with positive edge clock.
Creating register for signal `\module172.\reg225' using process `\module172.$proc$rtl.v:356$202'.
  created $dff cell `$procdff$1951' with positive edge clock.
Creating register for signal `\module172.\reg224' using process `\module172.$proc$rtl.v:356$202'.
  created $dff cell `$procdff$1952' with positive edge clock.
Creating register for signal `\module172.\reg223' using process `\module172.$proc$rtl.v:356$202'.
  created $dff cell `$procdff$1953' with positive edge clock.
Creating register for signal `\module172.\reg222' using process `\module172.$proc$rtl.v:356$202'.
  created $dff cell `$procdff$1954' with positive edge clock.
Creating register for signal `\module172.\reg221' using process `\module172.$proc$rtl.v:356$202'.
  created $dff cell `$procdff$1955' with positive edge clock.
Creating register for signal `\module172.\reg220' using process `\module172.$proc$rtl.v:356$202'.
  created $dff cell `$procdff$1956' with positive edge clock.
Creating register for signal `\module172.\reg219' using process `\module172.$proc$rtl.v:356$202'.
  created $dff cell `$procdff$1957' with positive edge clock.
Creating register for signal `\module172.\reg218' using process `\module172.$proc$rtl.v:356$202'.
  created $dff cell `$procdff$1958' with positive edge clock.
Creating register for signal `\module172.\reg217' using process `\module172.$proc$rtl.v:356$202'.
  created $dff cell `$procdff$1959' with positive edge clock.
Creating register for signal `\module172.\reg216' using process `\module172.$proc$rtl.v:356$202'.
  created $dff cell `$procdff$1960' with positive edge clock.
Creating register for signal `\module172.\reg215' using process `\module172.$proc$rtl.v:356$202'.
  created $dff cell `$procdff$1961' with positive edge clock.
Creating register for signal `\module172.\reg214' using process `\module172.$proc$rtl.v:356$202'.
  created $dff cell `$procdff$1962' with positive edge clock.
Creating register for signal `\module172.\reg213' using process `\module172.$proc$rtl.v:356$202'.
  created $dff cell `$procdff$1963' with positive edge clock.
Creating register for signal `\module172.\reg212' using process `\module172.$proc$rtl.v:356$202'.
  created $dff cell `$procdff$1964' with positive edge clock.
Creating register for signal `\module172.\reg211' using process `\module172.$proc$rtl.v:356$202'.
  created $dff cell `$procdff$1965' with positive edge clock.
Creating register for signal `\module172.\reg210' using process `\module172.$proc$rtl.v:356$202'.
  created $dff cell `$procdff$1966' with positive edge clock.
Creating register for signal `\module172.\reg209' using process `\module172.$proc$rtl.v:356$202'.
  created $dff cell `$procdff$1967' with positive edge clock.
Creating register for signal `\module172.\reg208' using process `\module172.$proc$rtl.v:356$202'.
  created $dff cell `$procdff$1968' with positive edge clock.
Creating register for signal `\module172.\reg207' using process `\module172.$proc$rtl.v:350$201'.
  created $dff cell `$procdff$1969' with positive edge clock.
Creating register for signal `\module172.\reg206' using process `\module172.$proc$rtl.v:350$201'.
  created $dff cell `$procdff$1970' with positive edge clock.
Creating register for signal `\module172.\reg205' using process `\module172.$proc$rtl.v:350$201'.
  created $dff cell `$procdff$1971' with positive edge clock.
Creating register for signal `\module172.\reg202' using process `\module172.$proc$rtl.v:252$92'.
  created $dff cell `$procdff$1972' with positive edge clock.
Creating register for signal `\module172.\reg201' using process `\module172.$proc$rtl.v:252$92'.
  created $dff cell `$procdff$1973' with positive edge clock.
Creating register for signal `\module172.\reg200' using process `\module172.$proc$rtl.v:252$92'.
  created $dff cell `$procdff$1974' with positive edge clock.
Creating register for signal `\module172.\reg199' using process `\module172.$proc$rtl.v:252$92'.
  created $dff cell `$procdff$1975' with positive edge clock.
Creating register for signal `\module172.\reg198' using process `\module172.$proc$rtl.v:252$92'.
  created $dff cell `$procdff$1976' with positive edge clock.
Creating register for signal `\module172.\reg197' using process `\module172.$proc$rtl.v:252$92'.
  created $dff cell `$procdff$1977' with positive edge clock.
Creating register for signal `\module172.\reg196' using process `\module172.$proc$rtl.v:252$92'.
  created $dff cell `$procdff$1978' with positive edge clock.
Creating register for signal `\module172.\reg195' using process `\module172.$proc$rtl.v:252$92'.
  created $dff cell `$procdff$1979' with positive edge clock.
Creating register for signal `\module172.\reg194' using process `\module172.$proc$rtl.v:252$92'.
  created $dff cell `$procdff$1980' with positive edge clock.
Creating register for signal `\module172.\reg193' using process `\module172.$proc$rtl.v:252$92'.
  created $dff cell `$procdff$1981' with positive edge clock.
Creating register for signal `\module172.\reg192' using process `\module172.$proc$rtl.v:252$92'.
  created $dff cell `$procdff$1982' with positive edge clock.
Creating register for signal `\module172.\reg191' using process `\module172.$proc$rtl.v:252$92'.
  created $dff cell `$procdff$1983' with positive edge clock.
Creating register for signal `\module172.\reg190' using process `\module172.$proc$rtl.v:252$92'.
  created $dff cell `$procdff$1984' with positive edge clock.
Creating register for signal `\module172.\reg189' using process `\module172.$proc$rtl.v:252$92'.
  created $dff cell `$procdff$1985' with positive edge clock.
Creating register for signal `\module172.\reg188' using process `\module172.$proc$rtl.v:252$92'.
  created $dff cell `$procdff$1986' with positive edge clock.
Creating register for signal `\module172.\reg187' using process `\module172.$proc$rtl.v:252$92'.
  created $dff cell `$procdff$1987' with positive edge clock.
Creating register for signal `\module172.\reg186' using process `\module172.$proc$rtl.v:252$92'.
  created $dff cell `$procdff$1988' with positive edge clock.
Creating register for signal `\module172.\reg185' using process `\module172.$proc$rtl.v:252$92'.
  created $dff cell `$procdff$1989' with positive edge clock.

2.2.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `module98.$proc$rtl.v:1146$1281'.
Removing empty process `module98.$proc$rtl.v:1145$1280'.
Removing empty process `module98.$proc$rtl.v:1144$1279'.
Removing empty process `module98.$proc$rtl.v:1143$1278'.
Removing empty process `module98.$proc$rtl.v:1142$1277'.
Removing empty process `module98.$proc$rtl.v:1141$1276'.
Removing empty process `module98.$proc$rtl.v:1140$1275'.
Found and cleaned up 2 empty switches in `\module98.$proc$rtl.v:1176$1119'.
Removing empty process `module98.$proc$rtl.v:1176$1119'.
Removing empty process `module133.$proc$rtl.v:1074$1116'.
Removing empty process `module133.$proc$rtl.v:1073$1115'.
Removing empty process `module133.$proc$rtl.v:1072$1114'.
Removing empty process `module133.$proc$rtl.v:1090$1043'.
Removing empty process `module5.$proc$rtl.v:639$1042'.
Removing empty process `module5.$proc$rtl.v:638$1041'.
Removing empty process `module5.$proc$rtl.v:637$1040'.
Removing empty process `module5.$proc$rtl.v:636$1039'.
Removing empty process `module5.$proc$rtl.v:635$1038'.
Removing empty process `module5.$proc$rtl.v:634$1037'.
Removing empty process `module5.$proc$rtl.v:633$1036'.
Removing empty process `module5.$proc$rtl.v:631$1035'.
Removing empty process `module5.$proc$rtl.v:630$1034'.
Removing empty process `module5.$proc$rtl.v:629$1033'.
Removing empty process `module5.$proc$rtl.v:628$1032'.
Removing empty process `module5.$proc$rtl.v:625$1031'.
Removing empty process `module5.$proc$rtl.v:624$1030'.
Removing empty process `module5.$proc$rtl.v:623$1029'.
Removing empty process `module5.$proc$rtl.v:622$1028'.
Removing empty process `module5.$proc$rtl.v:621$1027'.
Removing empty process `module5.$proc$rtl.v:620$1026'.
Removing empty process `module5.$proc$rtl.v:619$1025'.
Removing empty process `module5.$proc$rtl.v:618$1024'.
Removing empty process `module5.$proc$rtl.v:617$1023'.
Removing empty process `module5.$proc$rtl.v:616$1022'.
Removing empty process `module5.$proc$rtl.v:615$1021'.
Removing empty process `module5.$proc$rtl.v:614$1020'.
Removing empty process `module5.$proc$rtl.v:613$1019'.
Removing empty process `module5.$proc$rtl.v:612$1018'.
Removing empty process `module5.$proc$rtl.v:611$1017'.
Removing empty process `module5.$proc$rtl.v:610$1016'.
Removing empty process `module5.$proc$rtl.v:609$1015'.
Removing empty process `module5.$proc$rtl.v:608$1014'.
Removing empty process `module5.$proc$rtl.v:607$1013'.
Removing empty process `module5.$proc$rtl.v:606$1012'.
Removing empty process `module5.$proc$rtl.v:605$1011'.
Removing empty process `module5.$proc$rtl.v:604$1010'.
Removing empty process `module5.$proc$rtl.v:603$1009'.
Removing empty process `module5.$proc$rtl.v:602$1008'.
Removing empty process `module5.$proc$rtl.v:601$1007'.
Removing empty process `module5.$proc$rtl.v:600$1006'.
Removing empty process `module5.$proc$rtl.v:599$1005'.
Removing empty process `module5.$proc$rtl.v:598$1004'.
Removing empty process `module5.$proc$rtl.v:597$1003'.
Removing empty process `module5.$proc$rtl.v:596$1002'.
Removing empty process `module5.$proc$rtl.v:595$1001'.
Removing empty process `module5.$proc$rtl.v:594$1000'.
Removing empty process `module5.$proc$rtl.v:593$999'.
Removing empty process `module5.$proc$rtl.v:592$998'.
Removing empty process `module5.$proc$rtl.v:591$997'.
Removing empty process `module5.$proc$rtl.v:590$996'.
Removing empty process `module5.$proc$rtl.v:589$995'.
Removing empty process `module5.$proc$rtl.v:588$994'.
Removing empty process `module5.$proc$rtl.v:587$993'.
Removing empty process `module5.$proc$rtl.v:586$992'.
Removing empty process `module5.$proc$rtl.v:585$991'.
Removing empty process `module5.$proc$rtl.v:584$990'.
Removing empty process `module5.$proc$rtl.v:583$989'.
Removing empty process `module5.$proc$rtl.v:582$988'.
Removing empty process `module5.$proc$rtl.v:581$987'.
Removing empty process `module5.$proc$rtl.v:580$986'.
Removing empty process `module5.$proc$rtl.v:579$985'.
Removing empty process `module5.$proc$rtl.v:578$984'.
Removing empty process `module5.$proc$rtl.v:577$983'.
Removing empty process `module5.$proc$rtl.v:576$982'.
Removing empty process `module5.$proc$rtl.v:569$981'.
Removing empty process `module5.$proc$rtl.v:1045$966'.
Removing empty process `module5.$proc$rtl.v:990$907'.
Removing empty process `module5.$proc$rtl.v:971$871'.
Found and cleaned up 6 empty switches in `\module5.$proc$rtl.v:868$731'.
Removing empty process `module5.$proc$rtl.v:868$731'.
Removing empty process `module5.$proc$rtl.v:861$718'.
Found and cleaned up 7 empty switches in `\module5.$proc$rtl.v:734$515'.
Removing empty process `module5.$proc$rtl.v:734$515'.
Found and cleaned up 1 empty switch in `\module5.$proc$rtl.v:718$504'.
Removing empty process `module5.$proc$rtl.v:718$504'.
Removing empty process `module172.$proc$rtl.v:169$503'.
Removing empty process `module172.$proc$rtl.v:168$502'.
Removing empty process `module172.$proc$rtl.v:167$501'.
Removing empty process `module172.$proc$rtl.v:166$500'.
Removing empty process `module172.$proc$rtl.v:165$499'.
Removing empty process `module172.$proc$rtl.v:164$498'.
Removing empty process `module172.$proc$rtl.v:163$497'.
Removing empty process `module172.$proc$rtl.v:162$496'.
Removing empty process `module172.$proc$rtl.v:161$495'.
Removing empty process `module172.$proc$rtl.v:160$494'.
Removing empty process `module172.$proc$rtl.v:159$493'.
Removing empty process `module172.$proc$rtl.v:158$492'.
Removing empty process `module172.$proc$rtl.v:157$491'.
Removing empty process `module172.$proc$rtl.v:156$490'.
Removing empty process `module172.$proc$rtl.v:155$489'.
Removing empty process `module172.$proc$rtl.v:154$488'.
Removing empty process `module172.$proc$rtl.v:153$487'.
Removing empty process `module172.$proc$rtl.v:152$486'.
Removing empty process `module172.$proc$rtl.v:149$485'.
Removing empty process `module172.$proc$rtl.v:148$484'.
Removing empty process `module172.$proc$rtl.v:147$483'.
Removing empty process `module172.$proc$rtl.v:146$482'.
Removing empty process `module172.$proc$rtl.v:145$481'.
Removing empty process `module172.$proc$rtl.v:144$480'.
Removing empty process `module172.$proc$rtl.v:143$479'.
Removing empty process `module172.$proc$rtl.v:142$478'.
Removing empty process `module172.$proc$rtl.v:141$477'.
Removing empty process `module172.$proc$rtl.v:140$476'.
Removing empty process `module172.$proc$rtl.v:139$475'.
Removing empty process `module172.$proc$rtl.v:138$474'.
Removing empty process `module172.$proc$rtl.v:137$473'.
Removing empty process `module172.$proc$rtl.v:136$472'.
Removing empty process `module172.$proc$rtl.v:135$471'.
Removing empty process `module172.$proc$rtl.v:134$470'.
Removing empty process `module172.$proc$rtl.v:133$469'.
Removing empty process `module172.$proc$rtl.v:132$468'.
Removing empty process `module172.$proc$rtl.v:131$467'.
Removing empty process `module172.$proc$rtl.v:130$466'.
Removing empty process `module172.$proc$rtl.v:129$465'.
Removing empty process `module172.$proc$rtl.v:128$464'.
Removing empty process `module172.$proc$rtl.v:127$463'.
Removing empty process `module172.$proc$rtl.v:126$462'.
Removing empty process `module172.$proc$rtl.v:125$461'.
Removing empty process `module172.$proc$rtl.v:124$460'.
Removing empty process `module172.$proc$rtl.v:122$459'.
Removing empty process `module172.$proc$rtl.v:121$458'.
Removing empty process `module172.$proc$rtl.v:120$457'.
Removing empty process `module172.$proc$rtl.v:119$456'.
Removing empty process `module172.$proc$rtl.v:118$455'.
Removing empty process `module172.$proc$rtl.v:117$454'.
Removing empty process `module172.$proc$rtl.v:116$453'.
Removing empty process `module172.$proc$rtl.v:115$452'.
Removing empty process `module172.$proc$rtl.v:114$451'.
Removing empty process `module172.$proc$rtl.v:113$450'.
Found and cleaned up 3 empty switches in `\module172.$proc$rtl.v:494$356'.
Removing empty process `module172.$proc$rtl.v:494$356'.
Found and cleaned up 8 empty switches in `\module172.$proc$rtl.v:356$202'.
Removing empty process `module172.$proc$rtl.v:356$202'.
Removing empty process `module172.$proc$rtl.v:350$201'.
Found and cleaned up 5 empty switches in `\module172.$proc$rtl.v:252$92'.
Removing empty process `module172.$proc$rtl.v:252$92'.
Cleaned up 32 empty switches.

2.3. Executing OPT_EXPR pass (perform const folding).
Optimizing module module63.
<suppressed ~12 debug messages>
Optimizing module module98.
<suppressed ~22 debug messages>
Optimizing module module133.
<suppressed ~14 debug messages>
Optimizing module module5.
<suppressed ~76 debug messages>
Optimizing module module172.
<suppressed ~77 debug messages>
Optimizing module top.
<suppressed ~10 debug messages>

2.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module63..
Finding unused cells or wires in module \module98..
Finding unused cells or wires in module \module133..
Finding unused cells or wires in module \module5..
Finding unused cells or wires in module \module172..
Finding unused cells or wires in module \top..
Removed 204 unused cells and 961 unused wires.
<suppressed ~347 debug messages>

2.5. Executing CHECK pass (checking for obvious problems).
checking module module133..
checking module module172..
checking module module5..
checking module module63..
checking module module98..
checking module top..
found and reported 0 problems.

2.6. Executing OPT pass (performing simple optimizations).

2.6.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module module133.
Optimizing module module172.
Optimizing module module5.
Optimizing module module63.
Optimizing module module98.
Optimizing module top.

2.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module133'.
Finding identical cells in module `\module172'.
<suppressed ~12 debug messages>
Finding identical cells in module `\module5'.
<suppressed ~51 debug messages>
Finding identical cells in module `\module63'.
Finding identical cells in module `\module98'.
<suppressed ~6 debug messages>
Finding identical cells in module `\top'.
<suppressed ~9 debug messages>
Removed a total of 26 cells.

2.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module133..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module172..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $ternary$rtl.v:984$889.
Running muxtree optimizer on module \module63..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module98..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 1 multiplexer ports.
<suppressed ~190 debug messages>

2.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module133.
    New input vector for $reduce_or cell $reduce_or$rtl.v:1098$1062: { $neg$rtl.v:1098$1061_Y [0] $neg$rtl.v:1098$1061_Y [1] $neg$rtl.v:1098$1061_Y [2] $neg$rtl.v:1098$1061_Y [3] $neg$rtl.v:1098$1061_Y [4] $neg$rtl.v:1098$1061_Y [5] $neg$rtl.v:1098$1061_Y [6] $neg$rtl.v:1098$1061_Y [7] $neg$rtl.v:1098$1061_Y [8] $neg$rtl.v:1098$1061_Y [9] $neg$rtl.v:1098$1061_Y [10] $neg$rtl.v:1098$1061_Y [11] $neg$rtl.v:1098$1061_Y [12] $neg$rtl.v:1098$1061_Y [13] $neg$rtl.v:1098$1061_Y [14] $neg$rtl.v:1098$1061_Y [15] $neg$rtl.v:1098$1061_Y [16] $neg$rtl.v:1098$1061_Y [17] $neg$rtl.v:1098$1061_Y [18] $neg$rtl.v:1098$1061_Y [19] $neg$rtl.v:1098$1061_Y [20] $neg$rtl.v:1098$1061_Y [21] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1092$1044: { \wire137 [0] \wire137 [1] \wire137 [2] \wire137 [3] \wire137 [4] \wire137 [5] \wire137 [6] \wire137 [7] \wire137 [8] \wire137 [9] \wire137 [10] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1105$1085: { $ternary$rtl.v:1105$1082_Y [0] $ternary$rtl.v:1105$1082_Y [1] $ternary$rtl.v:1105$1082_Y [2] $ternary$rtl.v:1105$1082_Y [3] $ternary$rtl.v:1105$1082_Y [4] $ternary$rtl.v:1105$1082_Y [5] $ternary$rtl.v:1105$1082_Y [6] $ternary$rtl.v:1105$1082_Y [7] $ternary$rtl.v:1105$1082_Y [8] $ternary$rtl.v:1105$1082_Y [9] $ternary$rtl.v:1105$1082_Y [10] $ternary$rtl.v:1105$1082_Y [11] $ternary$rtl.v:1105$1082_Y [12] $ternary$rtl.v:1105$1082_Y [13] $ternary$rtl.v:1105$1082_Y [14] $ternary$rtl.v:1105$1082_Y [15] $ternary$rtl.v:1105$1082_Y [16] $ternary$rtl.v:1105$1082_Y [17] $ternary$rtl.v:1105$1082_Y [18] $ternary$rtl.v:1105$1082_Y [19] $ternary$rtl.v:1105$1082_Y [20] $ternary$rtl.v:1105$1082_Y [21] $shr$rtl.v:1103$1084_Y }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1102$1069: { \wire135 [0] \wire135 [1] \wire135 [2] \wire135 [3] \wire135 [4] \wire135 [5] \wire135 [6] \wire135 [7] \wire135 [8] \wire135 [9] \wire135 [10] \wire135 [11] \wire135 [12] \wire135 [13] \wire135 [14] $reduce_xor$rtl.v:1102$1068_Y }
  Optimizing cells in module \module133.
  Optimizing cells in module \module172.
    New input vector for $reduce_or cell $reduce_or$rtl.v:553$441: { $ternary$rtl.v:553$440_Y [0] $ternary$rtl.v:553$440_Y [1] $ternary$rtl.v:553$440_Y [2] $ternary$rtl.v:553$440_Y [3] $ternary$rtl.v:553$440_Y [4] $ternary$rtl.v:553$440_Y [5] $ternary$rtl.v:553$440_Y [6] $ternary$rtl.v:553$440_Y [7] $ternary$rtl.v:553$440_Y [8] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:418$287: { $ternary$rtl.v:418$286_Y [0] $ternary$rtl.v:418$286_Y [1] $ternary$rtl.v:418$286_Y [2] $ternary$rtl.v:418$286_Y [3] $ternary$rtl.v:418$286_Y [4] $ternary$rtl.v:418$286_Y [5] $ternary$rtl.v:418$286_Y [6] $ternary$rtl.v:418$286_Y [7] $ternary$rtl.v:418$286_Y [8] $ternary$rtl.v:418$286_Y [9] $ternary$rtl.v:418$286_Y [10] $ternary$rtl.v:418$286_Y [11] $ternary$rtl.v:418$286_Y [12] $ternary$rtl.v:418$286_Y [13] $ternary$rtl.v:418$286_Y [14] $ternary$rtl.v:418$286_Y [15] $ternary$rtl.v:418$286_Y [16] $ternary$rtl.v:418$286_Y [17] $ternary$rtl.v:418$286_Y [18] $ternary$rtl.v:418$286_Y [19] $ternary$rtl.v:418$286_Y [20] $ternary$rtl.v:418$286_Y [21] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:405$257: { $shr$rtl.v:405$256_Y [0] $shr$rtl.v:405$256_Y [1] $shr$rtl.v:405$256_Y [2] $shr$rtl.v:405$256_Y [3] $shr$rtl.v:405$256_Y [4] $shr$rtl.v:405$256_Y [5] $shr$rtl.v:405$256_Y [6] $shr$rtl.v:405$256_Y [7] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:398$246: { \reg215 [0] \reg215 [1] \reg215 [2] \reg199 [0] \reg199 [1] \reg199 [2] \reg199 [3] \reg199 [4] \reg199 [5] \reg199 [6] \reg199 [7] \reg199 [8] \reg199 [9] \reg199 [10] \reg199 [11] \reg199 [12] \reg199 [13] \reg199 [14] \reg199 [15] \reg199 [16] \reg199 [17] \reg199 [18] \reg199 [19] \reg199 [20] \reg199 [21] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:511$379: { \wire179 [10] \wire179 [11] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:449$309: { \reg192 [0] \reg192 [1] \reg192 [2] \reg192 [3] \reg192 [4] \reg192 [5] \reg192 [6] \reg192 [7] \reg192 [8] \reg192 [9] \reg192 [10] \reg192 [11] \reg192 [12] \reg192 [13] \reg192 [14] }
  Optimizing cells in module \module172.
  Optimizing cells in module \module5.
    New input vector for $reduce_or cell $reduce_or$rtl.v:989$905: { \reg37 [0] \reg37 [1] \reg37 [2] \reg37 [3] \reg37 [4] \reg37 [5] \reg37 [6] \reg37 [7] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:989$903: { \wire10 [0] \wire10 [1] \wire10 [2] \wire10 [3] \wire10 [4] \wire10 [5] \wire10 [6] \wire10 [7] \wire10 [8] \wire10 [9] \wire10 [10] \wire10 [11] \wire10 [12] \wire10 [13] \wire10 [14] \wire10 [15] \wire10 [16] \wire10 [17] \wire10 [18] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:932$836: { \reg31 [0] \reg31 [1] \reg31 [2] \reg31 [3] \reg31 [4] \reg31 [5] \reg31 [6] \reg31 [7] \reg31 [8] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:898$779: { \reg27 [0] \reg27 [1] \reg27 [2] \reg27 [3] \reg27 [4] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:882$751: { \reg30 [1] \reg30 [2] \reg30 [3] \reg30 [4] \reg30 [5] \reg30 [6] \reg30 [7] \reg30 [8] \reg30 [9] \reg30 [10] \reg30 [11] \reg30 [12] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:857$714: { \reg25 [0] \reg25 [1] \reg25 [2] \reg25 [3] \reg25 [4] \reg25 [5] \reg25 [6] \reg25 [7] \reg25 [8] \reg25 [9] \reg25 [10] \reg25 [11] \reg25 [12] \reg25 [13] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:850$706: { $ternary$rtl.v:850$705_Y [0] $ternary$rtl.v:850$705_Y [1] $ternary$rtl.v:850$705_Y [2] $ternary$rtl.v:850$705_Y [3] $ternary$rtl.v:850$705_Y [4] $ternary$rtl.v:850$705_Y [5] $ternary$rtl.v:850$705_Y [6] $ternary$rtl.v:850$705_Y [7] $ternary$rtl.v:850$705_Y [8] $ternary$rtl.v:850$705_Y [9] $ternary$rtl.v:850$705_Y [10] $ternary$rtl.v:850$705_Y [11] $ternary$rtl.v:850$705_Y [12] $ternary$rtl.v:850$705_Y [13] $ternary$rtl.v:850$705_Y [14] $ternary$rtl.v:850$705_Y [15] $ternary$rtl.v:850$705_Y [16] $ternary$rtl.v:850$705_Y [17] $ternary$rtl.v:850$705_Y [18] $ternary$rtl.v:850$705_Y [19] $ternary$rtl.v:850$705_Y [20] $ternary$rtl.v:850$705_Y [21] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:803$613: { \reg29 [0] \reg29 [1] \reg29 [2] \reg29 [3] \reg29 [4] \reg29 [5] \reg29 [6] \reg29 [7] \reg29 [8] \reg29 [9] \reg29 [10] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:801$608: { \reg28 [3] \reg28 [4] \reg28 [5] \reg28 [6] \reg28 [7] \reg28 [8] \reg28 [9] \reg28 [10] \reg28 [11] \reg28 [12] \reg28 [13] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1007$933: { \reg32 [0] \reg32 [1] \reg32 [2] \reg32 [3] \reg32 [4] \reg32 [5] \reg32 [6] \reg32 [7] \reg32 [8] \reg32 [9] \reg32 [10] \reg32 [11] \reg32 [12] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:945$855: { $xor$rtl.v:945$854_Y [0] $xor$rtl.v:945$854_Y [1] $xor$rtl.v:945$854_Y [2] $xor$rtl.v:945$854_Y [3] $xor$rtl.v:945$854_Y [4] $xor$rtl.v:945$854_Y [5] $xor$rtl.v:945$854_Y [6] $xor$rtl.v:945$854_Y [7] $xor$rtl.v:945$854_Y [8] $xor$rtl.v:945$854_Y [9] $xor$rtl.v:945$854_Y [10] $xor$rtl.v:945$854_Y [11] $xor$rtl.v:945$854_Y [12] $xor$rtl.v:945$854_Y [13] $xor$rtl.v:945$854_Y [14] $xor$rtl.v:945$854_Y [15] $xor$rtl.v:945$854_Y [16] $xor$rtl.v:945$854_Y [17] $xor$rtl.v:945$854_Y [18] $xor$rtl.v:945$854_Y [19] $xor$rtl.v:945$854_Y [20] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:942$849: { \wire7 [0] \wire7 [1] \wire7 [2] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:937$848: { \reg25 [0] \reg25 [1] \reg25 [2] \reg25 [3] \reg25 [4] \reg25 [5] \reg25 [6] \reg25 [7] \reg25 [8] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:903$788: { \reg43 [0] \reg43 [1] \reg43 [2] \reg43 [3] \reg43 [4] \reg43 [5] \reg43 [6] \reg43 [7] \reg43 [8] \reg43 [9] \reg43 [10] \reg43 [11] \reg43 [12] \reg43 [13] \reg43 [14] \reg43 [15] \reg43 [16] \reg43 [17] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:875$744: { \reg17 [0] \reg17 [1] \reg17 [2] \reg17 [3] \reg17 [4] \reg17 [5] $logic_not$rtl.v:1007$934_Y }
    New input vector for $reduce_and cell $reduce_and$rtl.v:854$709: { \reg35 [0] \reg35 [1] \reg35 [2] \reg35 [3] \reg35 [4] \reg35 [5] \reg35 [6] \reg35 [7] \reg35 [8] \reg35 [9] \reg35 [10] \reg35 [11] \reg35 [12] \reg35 [13] \reg35 [14] \reg35 [15] \reg35 [16] \reg35 [17] \reg35 [18] \reg35 [19] \reg35 [20] \reg35 [21] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:816$654: { \reg30 [0] \reg30 [1] \reg30 [2] \reg30 [3] \reg30 [4] \reg30 [5] \reg30 [6] \reg30 [7] \reg30 [8] \reg30 [9] \reg30 [10] \reg30 [11] \reg30 [12] \reg30 [13] \reg30 [14] \reg30 [15] \reg30 [16] \reg30 [17] \reg30 [18] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:802$611: { $neg$rtl.v:802$610_Y [0] $neg$rtl.v:802$610_Y [1] $neg$rtl.v:802$610_Y [2] $neg$rtl.v:802$610_Y [3] $neg$rtl.v:802$610_Y [4] $neg$rtl.v:802$610_Y [5] $neg$rtl.v:802$610_Y [6] $neg$rtl.v:802$610_Y [7] $neg$rtl.v:802$610_Y [8] $neg$rtl.v:802$610_Y [9] $neg$rtl.v:802$610_Y [10] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:763$559: { \reg25 [1] \reg25 [2] \reg25 [3] \reg25 [4] \reg25 [5] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:753$542: { \wire7 [0] \wire7 [1] \wire7 [2] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:729$510: { \reg14 [0] \reg14 [1] \reg14 [2] \reg14 [3] \reg14 [4] \reg14 [5] \reg14 [6] \reg14 [7] \reg14 [8] \reg14 [9] \reg14 [10] \reg14 [11] \reg14 [12] \reg14 [13] \reg14 [14] \reg14 [15] \reg14 [16] \reg14 [17] \reg14 [18] }
  Optimizing cells in module \module5.
  Optimizing cells in module \module63.
    New input vector for $reduce_or cell $reduce_or$rtl.v:1309$1297: { \wire72 [0] \wire72 [1] \wire72 [2] \wire72 [3] \wire72 [4] \wire72 [5] \wire72 [6] \wire72 [7] \wire72 [8] \wire72 [9] \wire72 [10] \wire72 [11] \wire72 [12] \wire72 [13] \wire72 [14] \wire72 [15] \wire72 [16] \wire72 [17] \wire72 [18] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1315$1312: { \wire68 [0] \wire68 [1] \wire68 [2] \wire68 [3] \wire68 [4] \wire68 [5] \wire68 [6] \wire68 [7] \wire68 [8] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1310$1302: { $or$rtl.v:1310$1301_Y [0] $or$rtl.v:1310$1301_Y [1] $or$rtl.v:1310$1301_Y [2] $or$rtl.v:1310$1301_Y [3] $or$rtl.v:1310$1301_Y [4] $or$rtl.v:1310$1301_Y [5] $or$rtl.v:1310$1301_Y [6] $or$rtl.v:1310$1301_Y [7] $or$rtl.v:1310$1301_Y [8] $or$rtl.v:1310$1301_Y [9] $or$rtl.v:1310$1301_Y [10] $or$rtl.v:1310$1301_Y [11] $or$rtl.v:1310$1301_Y [12] $or$rtl.v:1310$1301_Y [13] $or$rtl.v:1310$1301_Y [14] $or$rtl.v:1310$1301_Y [15] $or$rtl.v:1310$1301_Y [16] $or$rtl.v:1310$1301_Y [17] $or$rtl.v:1310$1301_Y [18] $or$rtl.v:1310$1301_Y [19] }
  Optimizing cells in module \module63.
  Optimizing cells in module \module98.
    New input vector for $reduce_or cell $reduce_or$rtl.v:1253$1254: { \wire122 [0] \wire122 [1] \wire122 [2] \wire122 [3] \wire122 [4] \wire122 [5] \wire122 [6] \wire122 [7] \wire122 [8] \wire122 [9] \wire122 [10] \wire122 [11] \wire122 [12] \wire122 [13] \wire122 [14] \wire122 [15] \wire122 [16] \wire122 [17] \wire122 [18] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1232$1217: { $ternary$rtl.v:1232$1216_Y [0] $ternary$rtl.v:1232$1216_Y [1] $ternary$rtl.v:1232$1216_Y [2] $ternary$rtl.v:1232$1216_Y [3] $ternary$rtl.v:1232$1216_Y [4] $ternary$rtl.v:1232$1216_Y [5] $ternary$rtl.v:1232$1216_Y [6] $ternary$rtl.v:1232$1216_Y [7] $ternary$rtl.v:1232$1216_Y [8] $ternary$rtl.v:1232$1216_Y [9] $ternary$rtl.v:1232$1216_Y [10] $ternary$rtl.v:1232$1216_Y [11] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1218$1189: { \wire100 [0] \wire100 [1] \wire100 [2] \wire100 [3] \wire100 [4] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1217$1187: { \reg107 [1] \reg107 [2] \reg107 [3] \reg107 [4] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:1196$1145: { \wire103 [0] \wire103 [1] \wire103 [2] \wire103 [3] \wire103 [4] \wire103 [5] \wire103 [6] \wire103 [7] \wire103 [8] \wire103 [9] \wire103 [10] \wire103 [11] \wire103 [12] \wire103 [13] \wire103 [14] \wire103 [15] \wire105 [0] \wire105 [1] \wire105 [2] \wire105 [3] \wire105 [4] \wire105 [5] \wire105 [6] \wire105 [7] \wire105 [8] \wire105 [9] \wire105 [10] \wire105 [11] \wire105 [12] \wire105 [13] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1257$1270: { $sub$rtl.v:1257$1269_Y [0] $sub$rtl.v:1257$1269_Y [1] $sub$rtl.v:1257$1269_Y [2] $sub$rtl.v:1257$1269_Y [3] $sub$rtl.v:1257$1269_Y [4] $sub$rtl.v:1257$1269_Y [5] $sub$rtl.v:1257$1269_Y [6] $sub$rtl.v:1257$1269_Y [7] $sub$rtl.v:1257$1269_Y [8] $sub$rtl.v:1257$1269_Y [9] $sub$rtl.v:1257$1269_Y [10] $sub$rtl.v:1257$1269_Y [11] $sub$rtl.v:1257$1269_Y [12] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1247$1242: { \wire120 [0] \wire120 [1] \wire120 [2] \wire120 [3] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1245$1236: { \wire105 [1] \wire105 [2] \wire105 [3] \wire105 [4] \wire105 [5] \wire105 [6] \wire105 [7] \wire105 [8] \wire105 [9] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1235$1228: { $shr$rtl.v:1235$1227_Y [0] $shr$rtl.v:1235$1227_Y [1] $shr$rtl.v:1235$1227_Y [2] $shr$rtl.v:1235$1227_Y [3] $shr$rtl.v:1235$1227_Y [4] $shr$rtl.v:1235$1227_Y [5] $shr$rtl.v:1235$1227_Y [6] $shr$rtl.v:1235$1227_Y [7] $shr$rtl.v:1235$1227_Y [8] $shr$rtl.v:1235$1227_Y [9] $shr$rtl.v:1235$1227_Y [10] $shr$rtl.v:1235$1227_Y [11] $shr$rtl.v:1235$1227_Y [12] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1234$1219: { \wire105 [0] \wire105 [1] \wire105 [2] \wire105 [3] \wire105 [4] \wire105 [5] \wire105 [6] \wire105 [7] \wire105 [8] \wire105 [9] \wire105 [10] \wire105 [11] \wire105 [12] \wire105 [13] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1230$1208: { \reg112 [0] \reg112 [1] \reg112 [2] \reg112 [3] \reg112 [4] \reg112 [5] \reg112 [6] \reg112 [7] \reg112 [8] \reg112 [9] \reg112 [10] \reg112 [11] \reg112 [12] \reg112 [13] \reg112 [14] \reg112 [15] \reg112 [16] \reg112 [17] \reg112 [18] \reg112 [19] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1226$1200: { \wire103 [0] \wire103 [1] \wire103 [2] \wire103 [3] \wire103 [4] \wire103 [5] \wire103 [6] \wire103 [7] \wire103 [8] \wire103 [9] \wire103 [10] \wire103 [11] \wire103 [12] \wire103 [13] \wire103 [14] \wire103 [15] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1225$1199: { \wire103 [0] \wire103 [1] \wire103 [2] \wire103 [3] \wire103 [4] \wire103 [5] \wire103 [6] \wire103 [7] \wire103 [8] \wire103 [9] \wire103 [10] \wire103 [11] \wire103 [12] \wire103 [13] \wire103 [14] \wire103 [15] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1197$1149: { \wire99 [0] \wire99 [1] \wire99 [2] \wire99 [3] \wire99 [4] \wire99 [5] \wire99 [6] \wire99 [7] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:1183$1125: { $ternary$rtl.v:1183$1124_Y [0] $ternary$rtl.v:1183$1124_Y [1] $ternary$rtl.v:1183$1124_Y [2] $ternary$rtl.v:1183$1124_Y [3] $ternary$rtl.v:1183$1124_Y [4] $ternary$rtl.v:1183$1124_Y [5] $ternary$rtl.v:1183$1124_Y [6] $ternary$rtl.v:1183$1124_Y [7] $ternary$rtl.v:1183$1124_Y [8] $ternary$rtl.v:1183$1124_Y [9] $ternary$rtl.v:1183$1124_Y [10] $ternary$rtl.v:1183$1124_Y [11] $ternary$rtl.v:1183$1124_Y [12] $ternary$rtl.v:1183$1124_Y [13] $ternary$rtl.v:1183$1124_Y [14] $ternary$rtl.v:1183$1124_Y [15] }
  Optimizing cells in module \module98.
  Optimizing cells in module \top.
    New input vector for $reduce_or cell $reduce_or$rtl.v:78$36: { \wire1 [0] \wire1 [1] \wire1 [2] \wire1 [3] \wire1 [4] \wire1 [5] \wire1 [6] \wire1 [7] \wire1 [8] \wire1 [9] \wire1 [10] }
    New input vector for $reduce_or cell $reduce_or$rtl.v:74$33: { $sub$rtl.v:74$32_Y [0] $sub$rtl.v:74$32_Y [1] $sub$rtl.v:74$32_Y [2] $sub$rtl.v:74$32_Y [3] $sub$rtl.v:74$32_Y [4] $sub$rtl.v:74$32_Y [5] $sub$rtl.v:74$32_Y [6] $sub$rtl.v:74$32_Y [7] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:98$82: { $not$rtl.v:98$81_Y [0] $not$rtl.v:98$81_Y [1] $not$rtl.v:98$81_Y [2] $not$rtl.v:98$81_Y [3] }
    New input vector for $reduce_and cell $reduce_and$rtl.v:79$41: { \wire4 [2] \wire4 [3] \wire4 [4] \wire4 [5] \wire4 [6] }
  Optimizing cells in module \top.
Performed a total of 53 changes.

2.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module133'.
Finding identical cells in module `\module172'.
Finding identical cells in module `\module5'.
Finding identical cells in module `\module63'.
Finding identical cells in module `\module98'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.6.6. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $procdff$1973 ($dff) from module module172.
Removing $procdff$1974 ($dff) from module module172.
Removing $procdff$1975 ($dff) from module module172.
Removing $procdff$1976 ($dff) from module module172.
Removing $procdff$1977 ($dff) from module module172.
Removing $procdff$1978 ($dff) from module module172.
Removing $procdff$1979 ($dff) from module module172.
Removing $procdff$1980 ($dff) from module module172.
Removing $procdff$1981 ($dff) from module module172.
Removing $procdff$1982 ($dff) from module module172.
Removing $procdff$1983 ($dff) from module module172.
Removing $procdff$1984 ($dff) from module module172.
Promoting init spec \reg239 = 20'00000000000000000000 to constant driver in module module172.
Promoting init spec \reg238 = 13'0000000000000 to constant driver in module module172.
Promoting init spec \reg237 = 4'0000 to constant driver in module module172.
Promoting init spec \reg241 = 11'00000000000 to constant driver in module module172.
Promoting init spec \reg240 = 4'0000 to constant driver in module module172.
Removing $procdff$1887 ($dff) from module module5.
Removing $procdff$1926 ($dff) from module module5.
Promoting init spec \reg154 = 11'00000000000 to constant driver in module module5.
Promoted 6 init specs to constant drivers.
Replaced 14 DFF cells.

2.6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module133..
Finding unused cells or wires in module \module172..
Finding unused cells or wires in module \module5..
Finding unused cells or wires in module \module63..
Finding unused cells or wires in module \module98..
Finding unused cells or wires in module \top..
Removed 1 unused cells and 28 unused wires.
<suppressed ~5 debug messages>

2.6.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module module133.
Optimizing module module172.
<suppressed ~57 debug messages>
Optimizing module module5.
<suppressed ~13 debug messages>
Optimizing module module63.
Optimizing module module98.
Optimizing module top.

2.6.9. Rerunning OPT passes. (Maybe there is more to do..)

2.6.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module133..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module172..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$1633.
    dead port 2/2 on $mux $procmux$1633.
    dead port 1/2 on $mux $procmux$1639.
    dead port 2/2 on $mux $procmux$1639.
    dead port 1/2 on $mux $procmux$1645.
    dead port 2/2 on $mux $procmux$1645.
    dead port 1/2 on $mux $procmux$1654.
    dead port 2/2 on $mux $procmux$1654.
    dead port 1/2 on $mux $procmux$1663.
    dead port 2/2 on $mux $procmux$1663.
    dead port 1/2 on $mux $ternary$rtl.v:399$252.
    dead port 2/2 on $mux $ternary$rtl.v:399$252.
    dead port 1/2 on $mux $ternary$rtl.v:412$268.
    dead port 2/2 on $mux $ternary$rtl.v:412$268.
    dead port 1/2 on $mux $ternary$rtl.v:413$272.
    dead port 2/2 on $mux $ternary$rtl.v:413$272.
    dead port 1/2 on $mux $ternary$rtl.v:413$277.
    dead port 2/2 on $mux $ternary$rtl.v:413$277.
    dead port 1/2 on $mux $ternary$rtl.v:452$312.
    dead port 2/2 on $mux $ternary$rtl.v:452$312.
    dead port 1/2 on $mux $ternary$rtl.v:510$374.
    dead port 2/2 on $mux $ternary$rtl.v:510$374.
    dead port 1/2 on $mux $ternary$rtl.v:510$376.
    dead port 2/2 on $mux $ternary$rtl.v:510$376.
Running muxtree optimizer on module \module5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $ternary$rtl.v:762$557.
    dead port 2/2 on $mux $ternary$rtl.v:762$557.
    dead port 1/2 on $mux $ternary$rtl.v:762$558.
    dead port 2/2 on $mux $ternary$rtl.v:762$558.
Running muxtree optimizer on module \module63..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module98..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 28 multiplexer ports.
<suppressed ~175 debug messages>

2.6.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module133.
  Optimizing cells in module \module172.
    New input vector for $reduce_or cell $reduce_or$rtl.v:398$246: { \reg215 [0] \reg215 [1] \reg215 [2] }
  Optimizing cells in module \module172.
  Optimizing cells in module \module5.
  Optimizing cells in module \module63.
  Optimizing cells in module \module98.
  Optimizing cells in module \top.
Performed a total of 1 changes.

2.6.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module133'.
Finding identical cells in module `\module172'.
<suppressed ~3 debug messages>
Finding identical cells in module `\module5'.
Finding identical cells in module `\module63'.
Finding identical cells in module `\module98'.
Finding identical cells in module `\top'.
Removed a total of 1 cells.

2.6.13. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $procdff$1967 ($dff) from module module172.
Removing $procdff$1968 ($dff) from module module172.
Removing $procdff$1969 ($dff) from module module172.
Removing $procdff$1971 ($dff) from module module172.
Removing $procdff$1972 ($dff) from module module172.
Removing $procdff$1958 ($dff) from module module172.
Removing $procdff$1919 ($dff) from module module5.
Removing $procdff$1920 ($dff) from module module5.
Removing $procdff$1921 ($dff) from module module5.
Removing $procdff$1922 ($dff) from module module5.
Replaced 10 DFF cells.

2.6.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module133..
Finding unused cells or wires in module \module172..
Finding unused cells or wires in module \module5..
Finding unused cells or wires in module \module63..
Finding unused cells or wires in module \module98..
Finding unused cells or wires in module \top..
Removed 40 unused cells and 119 unused wires.
<suppressed ~46 debug messages>

2.6.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module module133.
Optimizing module module172.
<suppressed ~29 debug messages>
Optimizing module module5.
<suppressed ~25 debug messages>
Optimizing module module63.
Optimizing module module98.
Optimizing module top.

2.6.16. Rerunning OPT passes. (Maybe there is more to do..)

2.6.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module133..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module172..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $ternary$rtl.v:435$302.
    dead port 2/2 on $mux $ternary$rtl.v:435$302.
    dead port 1/2 on $mux $ternary$rtl.v:504$362.
    dead port 2/2 on $mux $ternary$rtl.v:504$362.
Running muxtree optimizer on module \module5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $ternary$rtl.v:792$594.
    dead port 2/2 on $mux $ternary$rtl.v:792$594.
    dead port 1/2 on $mux $ternary$rtl.v:805$616.
    dead port 2/2 on $mux $ternary$rtl.v:805$616.
    dead port 1/2 on $mux $ternary$rtl.v:850$708.
    dead port 2/2 on $mux $ternary$rtl.v:850$708.
Running muxtree optimizer on module \module63..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module98..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 10 multiplexer ports.
<suppressed ~152 debug messages>

2.6.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module133.
  Optimizing cells in module \module172.
  Optimizing cells in module \module5.
  Optimizing cells in module \module63.
  Optimizing cells in module \module98.
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.6.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module133'.
Finding identical cells in module `\module172'.
Finding identical cells in module `\module5'.
Finding identical cells in module `\module63'.
Finding identical cells in module `\module98'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.6.20. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $procdff$1952 ($dff) from module module172.
Removing $procdff$1953 ($dff) from module module172.
Removing $procdff$1954 ($dff) from module module172.
Removing $procdff$1955 ($dff) from module module172.
Replaced 4 DFF cells.

2.6.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module133..
Finding unused cells or wires in module \module172..
Finding unused cells or wires in module \module5..
Finding unused cells or wires in module \module63..
Finding unused cells or wires in module \module98..
Finding unused cells or wires in module \top..
Removed 38 unused cells and 94 unused wires.
<suppressed ~41 debug messages>

2.6.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module module133.
Optimizing module module172.
<suppressed ~14 debug messages>
Optimizing module module5.
Optimizing module module63.
Optimizing module module98.
Optimizing module top.

2.6.23. Rerunning OPT passes. (Maybe there is more to do..)

2.6.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module133..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module172..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module63..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module98..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~141 debug messages>

2.6.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module133.
  Optimizing cells in module \module172.
  Optimizing cells in module \module5.
  Optimizing cells in module \module63.
  Optimizing cells in module \module98.
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.6.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module133'.
Finding identical cells in module `\module172'.
Finding identical cells in module `\module5'.
Finding identical cells in module `\module63'.
Finding identical cells in module `\module98'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.6.27. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $procdff$1939 ($dff) from module module172.
Replaced 1 DFF cells.

2.6.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module133..
Finding unused cells or wires in module \module172..
Finding unused cells or wires in module \module5..
Finding unused cells or wires in module \module63..
Finding unused cells or wires in module \module98..
Finding unused cells or wires in module \top..
Removed 6 unused cells and 18 unused wires.
<suppressed ~7 debug messages>

2.6.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module module133.
Optimizing module module172.
Optimizing module module5.
Optimizing module module63.
Optimizing module module98.
Optimizing module top.

2.6.30. Rerunning OPT passes. (Maybe there is more to do..)

2.6.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module133..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module172..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module63..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module98..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~139 debug messages>

2.6.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module133.
  Optimizing cells in module \module172.
  Optimizing cells in module \module5.
  Optimizing cells in module \module63.
  Optimizing cells in module \module98.
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.6.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module133'.
Finding identical cells in module `\module172'.
Finding identical cells in module `\module5'.
Finding identical cells in module `\module63'.
Finding identical cells in module `\module98'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.6.34. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $procdff$1940 ($dff) from module module172.
Replaced 1 DFF cells.

2.6.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module133..
Finding unused cells or wires in module \module172..
Finding unused cells or wires in module \module5..
Finding unused cells or wires in module \module63..
Finding unused cells or wires in module \module98..
Finding unused cells or wires in module \top..
Removed 1 unused cells and 1 unused wires.
<suppressed ~2 debug messages>

2.6.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module module133.
Optimizing module module172.
Optimizing module module5.
Optimizing module module63.
Optimizing module module98.
Optimizing module top.

2.6.37. Rerunning OPT passes. (Maybe there is more to do..)

2.6.38. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module133..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module172..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module63..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module98..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~138 debug messages>

2.6.39. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module133.
  Optimizing cells in module \module172.
  Optimizing cells in module \module5.
  Optimizing cells in module \module63.
  Optimizing cells in module \module98.
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.6.40. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module133'.
Finding identical cells in module `\module172'.
Finding identical cells in module `\module5'.
Finding identical cells in module `\module63'.
Finding identical cells in module `\module98'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.6.41. Executing OPT_RMDFF pass (remove dff with constant values).

2.6.42. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module133..
Finding unused cells or wires in module \module172..
Finding unused cells or wires in module \module5..
Finding unused cells or wires in module \module63..
Finding unused cells or wires in module \module98..
Finding unused cells or wires in module \top..

2.6.43. Executing OPT_EXPR pass (perform const folding).
Optimizing module module133.
Optimizing module module172.
Optimizing module module5.
Optimizing module module63.
Optimizing module module98.
Optimizing module top.

2.6.44. Finished OPT passes. (There is nothing left to do.)

2.7. Executing WREDUCE pass (reducing word size of cells).
Removed top 8 bits (of 19) from port B of cell module133.$eq$rtl.v:1095$1053 ($eq).
Removed top 7 bits (of 8) from port B of cell module133.$le$rtl.v:1102$1073 ($le).
Removed top 5 bits (of 6) from port A of cell module133.$not$rtl.v:1102$1074 ($not).
Removed top 3 bits (of 22) from mux cell module133.$ternary$rtl.v:1105$1082 ($mux).
Removed top 11 bits (of 12) from port B of cell module133.$gt$rtl.v:1108$1096 ($gt).
Removed top 16 bits (of 17) from port A of cell module133.$shr$rtl.v:1112$1102 ($shr).
Removed top 16 bits (of 17) from port B of cell module133.$shr$rtl.v:1112$1102 ($shr).
Removed top 1 bits (of 22) from mux cell module133.$ternary$rtl.v:1114$1112 ($mux).
Removed top 21 bits (of 22) from FF cell module133.$procdff$1873 ($dff).
Removed top 21 bits (of 22) from FF cell module133.$procdff$1874 ($dff).
Removed top 13 bits (of 14) from FF cell module133.$procdff$1875 ($dff).
Removed top 20 bits (of 22) from port A of cell module133.$xnor$rtl.v:1096$1056 ($xnor).
Removed top 21 bits (of 22) from port A of cell module133.$neg$rtl.v:1098$1061 ($neg).
Removed top 17 bits (of 22) from mux cell module133.$ternary$rtl.v:1104$1079 ($mux).
Removed top 13 bits (of 14) from port A of cell module133.$mul$rtl.v:1108$1089 ($mul).
Removed top 7 bits (of 14) from port Y of cell module133.$mul$rtl.v:1108$1089 ($mul).
Removed top 15 bits (of 21) from mux cell module133.$ternary$rtl.v:1114$1112 ($mux).
Removed top 13 bits (of 14) from wire module133.$0\reg139[13:0].
Removed top 21 bits (of 22) from wire module133.$0\reg140[21:0].
Removed top 21 bits (of 22) from wire module133.$0\reg141[21:0].
Removed top 2 bits (of 3) from wire module133.$eq$rtl.v:1095$1053_Y.
Removed top 7 bits (of 8) from wire module133.$logic_not$rtl.v:1102$1072_Y.
Removed top 7 bits (of 14) from wire module133.$mul$rtl.v:1108$1089_Y.
Removed top 13 bits (of 14) from wire module133.$reduce_xnor$rtl.v:1108$1093_Y.
Removed top 5 bits (of 6) from wire module133.$reduce_xor$rtl.v:1102$1070_Y.
Removed top 1 bits (of 17) from wire module133.$sshr$rtl.v:1092$1046_Y.
Removed top 17 bits (of 22) from wire module133.$ternary$rtl.v:1104$1079_Y.
Removed top 3 bits (of 22) from wire module133.$ternary$rtl.v:1105$1082_Y.
Removed top 16 bits (of 22) from wire module133.$ternary$rtl.v:1114$1112_Y.
Removed top 16 bits (of 17) from wire module133.wire142.
Removed top 16 bits (of 17) from wire module133.wire145.
Removed top 13 bits (of 14) from wire module133.wire146.
Removed top 15 bits (of 21) from wire module133.wire148.
Removed top 21 bits (of 22) from wire module133.wire149.
Removed top 6 bits (of 7) from port A of cell module172.$gt$rtl.v:246$89 ($gt).
Removed top 13 bits (of 14) from port A of cell module172.$shl$rtl.v:249$91 ($shl).
Removed top 12 bits (of 13) from port B of cell module172.$shl$rtl.v:249$91 ($shl).
Removed top 24 bits (of 25) from port B of cell module172.$ge$rtl.v:265$100 ($ge).
Removed top 21 bits (of 22) from port A of cell module172.$gt$rtl.v:263$97 ($gt).
Removed top 10 bits (of 18) from port A of cell module172.$eq$rtl.v:348$197 ($eq).
Removed top 17 bits (of 18) from port B of cell module172.$eq$rtl.v:348$197 ($eq).
Removed top 5 bits (of 20) from mux cell module172.$ternary$rtl.v:349$200 ($mux).
Removed top 13 bits (of 14) from port A of cell module172.$or$rtl.v:374$219 ($or).
Removed top 19 bits (of 20) from port A of cell module172.$sshr$rtl.v:375$226 ($sshr).
Removed top 27 bits (of 29) from mux cell module172.$ternary$rtl.v:380$229 ($mux).
Removed top 14 bits (of 17) from mux cell module172.$ternary$rtl.v:400$249 ($mux).
Removed top 3 bits (of 4) from port A of cell module172.$not$rtl.v:457$318 ($not).
Removed top 1 bits (of 8) from mux cell module172.$ternary$rtl.v:464$335 ($mux).
Removed top 5 bits (of 12) from port A of cell module172.$xnor$rtl.v:458$319 ($xnor).
Removed top 6 bits (of 12) from port B of cell module172.$xnor$rtl.v:458$319 ($xnor).
Removed top 12 bits (of 13) from port B of cell module172.$ge$rtl.v:464$331 ($ge).
Removed top 3 bits (of 8) from mux cell module172.$ternary$rtl.v:464$333 ($mux).
Removed top 5 bits (of 6) from port A of cell module172.$xnor$rtl.v:517$382 ($xnor).
Removed top 19 bits (of 20) from mux cell module172.$ternary$rtl.v:519$392 ($mux).
Removed top 19 bits (of 20) from mux cell module172.$ternary$rtl.v:519$394 ($mux).
Removed top 19 bits (of 20) from port B of cell module172.$shr$rtl.v:519$395 ($shr).
Removed top 3 bits (of 8) from port Y of cell module172.$shr$rtl.v:519$395 ($shr).
Removed top 19 bits (of 26) from port Y of cell module172.$sshl$rtl.v:523$401 ($sshl).
Removed top 1 bits (of 6) from port Y of cell module172.$neg$rtl.v:554$446 ($neg).
Removed top 1 bits (of 6) from port A of cell module172.$neg$rtl.v:554$446 ($neg).
Removed top 4 bits (of 6) from port A of cell module172.$xnor$rtl.v:554$445 ($xnor).
Removed top 1 bits (of 6) from port Y of cell module172.$xnor$rtl.v:554$445 ($xnor).
Removed top 16 bits (of 18) from mux cell module172.$procmux$1787 ($mux).
Removed top 5 bits (of 6) from FF cell module172.$procdff$1947 ($dff).
Removed top 16 bits (of 22) from FF cell module172.$procdff$1948 ($dff).
Removed top 12 bits (of 13) from FF cell module172.$procdff$1950 ($dff).
Removed top 3 bits (of 11) from FF cell module172.$procdff$1956 ($dff).
Removed top 9 bits (of 10) from FF cell module172.$procdff$1959 ($dff).
Removed top 2 bits (of 6) from FF cell module172.$procdff$1960 ($dff).
Removed top 1 bits (of 3) from FF cell module172.$procdff$1961 ($dff).
Removed top 6 bits (of 14) from FF cell module172.$procdff$1962 ($dff).
Removed top 17 bits (of 21) from FF cell module172.$procdff$1963 ($dff).
Removed top 8 bits (of 9) from FF cell module172.$procdff$1966 ($dff).
Removed top 18 bits (of 19) from FF cell module172.$procdff$1970 ($dff).
Removed top 16 bits (of 18) from FF cell module172.$procdff$1986 ($dff).
Removed top 16 bits (of 17) from FF cell module172.$procdff$1987 ($dff).
Removed top 9 bits (of 17) from FF cell module172.$procdff$1988 ($dff).
Removed top 13 bits (of 14) from FF cell module172.$procdff$1989 ($dff).
Removed top 16 bits (of 17) from port A of cell module172.$add$rtl.v:456$314 ($add).
Removed top 8 bits (of 17) from port B of cell module172.$add$rtl.v:456$314 ($add).
Removed top 7 bits (of 17) from port Y of cell module172.$add$rtl.v:456$314 ($add).
Removed top 8 bits (of 9) from port A of cell module172.$ne$rtl.v:457$317 ($ne).
Removed top 6 bits (of 14) from mux cell module172.$ternary$rtl.v:460$328 ($mux).
Removed top 5 bits (of 6) from port A of cell module172.$ne$rtl.v:517$383 ($ne).
Removed top 3 bits (of 15) from port B of cell module172.$xor$rtl.v:523$399 ($xor).
Removed top 3 bits (of 15) from port Y of cell module172.$xor$rtl.v:523$399 ($xor).
Removed top 2 bits (of 6) from FF cell module172.$procdff$1948 ($dff).
Removed top 3 bits (of 4) from FF cell module172.$procdff$1963 ($dff).
Removed top 16 bits (of 18) from wire module172.$0\reg188[17:0].
Removed top 1 bits (of 3) from wire module172.$0\reg215[2:0].
Removed top 12 bits (of 13) from wire module172.$0\reg226[12:0].
Removed top 13 bits (of 14) from wire module172.$logic_not$rtl.v:374$217_Y.
Removed top 5 bits (of 6) from wire module172.$logic_not$rtl.v:517$381_Y.
Removed top 13 bits (of 14) from wire module172.$lt$rtl.v:249$90_Y.
Removed top 3 bits (of 4) from wire module172.$ne$rtl.v:457$317_Y.
Removed top 19 bits (of 20) from wire module172.$ne$rtl.v:517$383_Y.
Removed top 1 bits (of 6) from wire module172.$neg$rtl.v:554$446_Y.
Removed top 6 bits (of 14) from wire module172.$ternary$rtl.v:460$328_Y.
Removed top 3 bits (of 8) from wire module172.$ternary$rtl.v:464$333_Y.
Removed top 19 bits (of 20) from wire module172.$ternary$rtl.v:519$392_Y.
Removed top 3 bits (of 15) from wire module172.$xor$rtl.v:523$399_Y.
Removed top 17 bits (of 18) from wire module172.wire179.
Removed top 21 bits (of 22) from wire module172.wire180.
Removed top 12 bits (of 13) from wire module172.wire181.
Removed top 5 bits (of 8) from port B of cell module5.$le$rtl.v:727$506 ($le).
Removed top 5 bits (of 14) from mux cell module5.$ternary$rtl.v:732$514 ($mux).
Removed top 14 bits (of 15) from port B of cell module5.$sub$rtl.v:740$521 ($sub).
Removed top 6 bits (of 7) from port A of cell module5.$xor$rtl.v:741$524 ($xor).
Removed top 6 bits (of 7) from port B of cell module5.$xor$rtl.v:741$524 ($xor).
Removed top 6 bits (of 7) from port Y of cell module5.$xor$rtl.v:741$524 ($xor).
Removed top 6 bits (of 7) from port B of cell module5.$sub$rtl.v:741$525 ($sub).
Removed top 1 bits (of 7) from port Y of cell module5.$sub$rtl.v:741$525 ($sub).
Removed top 1 bits (of 7) from port A of cell module5.$sub$rtl.v:741$525 ($sub).
Removed top 8 bits (of 16) from port B of cell module5.$xnor$rtl.v:748$528 ($xnor).
Removed top 15 bits (of 16) from port A of cell module5.$shl$rtl.v:771$563 ($shl).
Removed top 7 bits (of 26) from port A of cell module5.$or$rtl.v:771$568 ($or).
Removed top 6 bits (of 19) from mux cell module5.$ternary$rtl.v:800$601 ($mux).
Removed top 6 bits (of 19) from mux cell module5.$ternary$rtl.v:800$607 ($mux).
Removed top 4 bits (of 19) from mux cell module5.$ternary$rtl.v:809$627 ($mux).
Removed top 6 bits (of 19) from mux cell module5.$ternary$rtl.v:810$637 ($mux).
Removed top 5 bits (of 6) from port A of cell module5.$lt$rtl.v:813$644 ($lt).
Removed top 15 bits (of 16) from port A of cell module5.$or$rtl.v:832$665 ($or).
Removed top 8 bits (of 16) from port Y of cell module5.$or$rtl.v:832$665 ($or).
Removed top 3 bits (of 10) from mux cell module5.$ternary$rtl.v:836$675 ($mux).
Removed top 7 bits (of 15) from mux cell module5.$ternary$rtl.v:842$694 ($mux).
Removed top 20 bits (of 21) from port B of cell module5.$eq$rtl.v:854$710 ($eq).
Removed top 1 bits (of 11) from mux cell module5.$ternary$rtl.v:858$717 ($mux).
Removed top 9 bits (of 17) from port A of cell module5.$neg$rtl.v:865$726 ($neg).
Removed top 7 bits (of 21) from mux cell module5.$ternary$rtl.v:864$724 ($mux).
Removed top 10 bits (of 28) from mux cell module5.$ternary$rtl.v:866$730 ($mux).
Removed top 21 bits (of 28) from port Y of cell module5.$and$rtl.v:888$763 ($and).
Removed top 21 bits (of 28) from port A of cell module5.$and$rtl.v:888$763 ($and).
Removed top 21 bits (of 28) from port B of cell module5.$and$rtl.v:888$763 ($and).
Removed top 21 bits (of 28) from mux cell module5.$ternary$rtl.v:887$758 ($mux).
Removed top 9 bits (of 28) from port A of cell module5.$xor$rtl.v:888$762 ($xor).
Removed top 11 bits (of 28) from port B of cell module5.$xor$rtl.v:888$762 ($xor).
Removed top 21 bits (of 28) from port Y of cell module5.$xor$rtl.v:888$762 ($xor).
Removed top 12 bits (of 19) from port A of cell module5.$xor$rtl.v:888$762 ($xor).
Removed top 10 bits (of 17) from port B of cell module5.$xor$rtl.v:888$762 ($xor).
Removed top 3 bits (of 14) from mux cell module5.$ternary$rtl.v:893$776 ($mux).
Removed top 6 bits (of 7) from mux cell module5.$ternary$rtl.v:898$784 ($mux).
Removed top 5 bits (of 16) from mux cell module5.$ternary$rtl.v:907$799 ($mux).
Removed top 11 bits (of 19) from port Y of cell module5.$xor$rtl.v:903$792 ($xor).
Removed top 6 bits (of 14) from port A of cell module5.$xor$rtl.v:903$792 ($xor).
Removed top 11 bits (of 19) from port B of cell module5.$xor$rtl.v:903$792 ($xor).
Removed top 6 bits (of 16) from port A of cell module5.$or$rtl.v:907$800 ($or).
Removed top 5 bits (of 16) from port B of cell module5.$or$rtl.v:907$800 ($or).
Removed top 5 bits (of 16) from port Y of cell module5.$or$rtl.v:907$800 ($or).
Removed top 18 bits (of 19) from port A of cell module5.$shr$rtl.v:917$807 ($shr).
Removed top 8 bits (of 16) from port A of cell module5.$shr$rtl.v:919$812 ($shr).
Removed top 1 bits (of 16) from mux cell module5.$ternary$rtl.v:919$814 ($mux).
Removed top 8 bits (of 14) from port A of cell module5.$neg$rtl.v:925$824 ($neg).
Removed top 4 bits (of 5) from port A of cell module5.$shl$rtl.v:920$828 ($shl).
Removed top 8 bits (of 13) from port A of cell module5.$xnor$rtl.v:920$829 ($xnor).
Removed top 18 bits (of 27) from port B of cell module5.$or$rtl.v:926$835 ($or).
Removed top 6 bits (of 27) from port Y of cell module5.$or$rtl.v:926$835 ($or).
Removed top 6 bits (of 27) from port A of cell module5.$or$rtl.v:926$835 ($or).
Removed top 22 bits (of 41) from mux cell module5.$ternary$rtl.v:933$838 ($mux).
Removed top 8 bits (of 13) from mux cell module5.$ternary$rtl.v:941$852 ($mux).
Removed top 5 bits (of 13) from port A of cell module5.$mul$rtl.v:945$857 ($mul).
Removed top 12 bits (of 13) from port B of cell module5.$or$rtl.v:945$856 ($or).
Removed top 1 bits (of 13) from port Y of cell module5.$not$rtl.v:945$858 ($not).
Removed top 1 bits (of 13) from port A of cell module5.$not$rtl.v:945$858 ($not).
Removed top 1 bits (of 17) from mux cell module5.$ternary$rtl.v:947$862 ($mux).
Removed top 11 bits (of 19) from port A of cell module5.$xnor$rtl.v:978$884 ($xnor).
Removed top 2 bits (of 19) from port Y of cell module5.$xnor$rtl.v:978$884 ($xnor).
Removed top 12 bits (of 13) from port B of cell module5.$or$rtl.v:980$886 ($or).
Removed top 23 bits (of 40) from mux cell module5.$ternary$rtl.v:984$891 ($mux).
Removed top 39 bits (of 46) from mux cell module5.$ternary$rtl.v:985$895 ($mux).
Removed top 15 bits (of 16) from port A of cell module5.$gt$rtl.v:986$900 ($gt).
Removed top 15 bits (of 16) from port B of cell module5.$gt$rtl.v:986$900 ($gt).
Removed top 8 bits (of 16) from mux cell module5.$ternary$rtl.v:1005$925 ($mux).
Removed top 5 bits (of 13) from mux cell module5.$ternary$rtl.v:1002$919 ($mux).
Removed top 8 bits (of 16) from mux cell module5.$ternary$rtl.v:1005$928 ($mux).
Removed top 7 bits (of 16) from mux cell module5.$ternary$rtl.v:1007$937 ($mux).
Removed top 7 bits (of 16) from mux cell module5.$ternary$rtl.v:1007$939 ($mux).
Removed top 15 bits (of 16) from port A of cell module5.$ge$rtl.v:1007$940 ($ge).
Removed top 7 bits (of 16) from port B of cell module5.$ge$rtl.v:1007$940 ($ge).
Removed top 27 bits (of 30) from port A of cell module5.$or$rtl.v:1037$948 ($or).
Removed top 23 bits (of 30) from port Y of cell module5.$or$rtl.v:1037$948 ($or).
Removed top 23 bits (of 30) from port B of cell module5.$or$rtl.v:1037$948 ($or).
Removed top 20 bits (of 23) from mux cell module5.$ternary$rtl.v:1033$943 ($mux).
Removed top 21 bits (of 30) from port B of cell module5.$and$rtl.v:1037$947 ($and).
Removed top 23 bits (of 30) from port Y of cell module5.$and$rtl.v:1037$947 ($and).
Removed top 23 bits (of 30) from port A of cell module5.$and$rtl.v:1037$947 ($and).
Removed top 2 bits (of 9) from port B of cell module5.$and$rtl.v:1037$947 ($and).
Removed top 11 bits (of 22) from mux cell module5.$procmux$1376 ($mux).
Removed top 11 bits (of 22) from mux cell module5.$procmux$1378 ($mux).
Removed top 2 bits (of 8) from mux cell module5.$procmux$1385 ($mux).
Removed top 8 bits (of 16) from mux cell module5.$procmux$1540 ($mux).
Removed top 8 bits (of 16) from mux cell module5.$procmux$1543 ($mux).
Removed top 7 bits (of 14) from FF cell module5.$procdff$1877 ($dff).
Removed top 12 bits (of 14) from FF cell module5.$procdff$1880 ($dff).
Removed top 4 bits (of 5) from FF cell module5.$procdff$1881 ($dff).
Removed top 17 bits (of 22) from FF cell module5.$procdff$1882 ($dff).
Removed top 14 bits (of 15) from FF cell module5.$procdff$1888 ($dff).
Removed top 2 bits (of 17) from FF cell module5.$procdff$1895 ($dff).
Removed top 11 bits (of 22) from FF cell module5.$procdff$1903 ($dff).
Removed top 8 bits (of 16) from FF cell module5.$procdff$1912 ($dff).
Removed top 21 bits (of 22) from FF cell module5.$procdff$1913 ($dff).
Removed top 10 bits (of 11) from FF cell module5.$procdff$1914 ($dff).
Removed top 17 bits (of 19) from FF cell module5.$procdff$1915 ($dff).
Removed top 8 bits (of 9) from FF cell module5.$procdff$1917 ($dff).
Removed top 6 bits (of 19) from FF cell module5.$procdff$1918 ($dff).
Removed top 5 bits (of 14) from FF cell module5.$procdff$1933 ($dff).
Removed top 5 bits (of 14) from port B of cell module5.$gt$rtl.v:750$537 ($gt).
Removed top 5 bits (of 14) from port A of cell module5.$lt$rtl.v:800$603 ($lt).
Removed top 5 bits (of 14) from port B of cell module5.$lt$rtl.v:800$603 ($lt).
Removed top 10 bits (of 11) from port A of cell module5.$neg$rtl.v:802$610 ($neg).
Removed top 8 bits (of 9) from port B of cell module5.$mul$rtl.v:809$628 ($mul).
Removed top 6 bits (of 19) from mux cell module5.$ternary$rtl.v:810$634 ($mux).
Removed top 21 bits (of 22) from port A of cell module5.$ge$rtl.v:832$664 ($ge).
Removed top 6 bits (of 19) from mux cell module5.$ternary$rtl.v:834$668 ($mux).
Removed top 7 bits (of 15) from mux cell module5.$ternary$rtl.v:842$691 ($mux).
Removed top 7 bits (of 21) from mux cell module5.$ternary$rtl.v:864$721 ($mux).
Removed top 10 bits (of 11) from port A of cell module5.$xnor$rtl.v:887$756 ($xnor).
Removed top 21 bits (of 28) from port Y of cell module5.$xnor$rtl.v:887$756 ($xnor).
Removed top 12 bits (of 19) from mux cell module5.$ternary$rtl.v:887$761 ($mux).
Removed top 11 bits (of 19) from port Y of cell module5.$shl$rtl.v:903$791 ($shl).
Removed top 21 bits (of 22) from port B of cell module5.$shr$rtl.v:917$807 ($shr).
Removed top 1 bits (of 16) from port Y of cell module5.$shr$rtl.v:919$812 ($shr).
Removed top 6 bits (of 13) from port Y of cell module5.$xnor$rtl.v:920$829 ($xnor).
Removed top 2 bits (of 14) from mux cell module5.$ternary$rtl.v:934$841 ($mux).
Removed top 1 bits (of 13) from port Y of cell module5.$mul$rtl.v:945$857 ($mul).
Removed top 2 bits (of 17) from port A of cell module5.$xor$rtl.v:947$861 ($xor).
Removed top 2 bits (of 17) from port Y of cell module5.$xor$rtl.v:947$861 ($xor).
Removed top 6 bits (of 13) from port Y of cell module5.$or$rtl.v:980$886 ($or).
Removed top 6 bits (of 13) from port A of cell module5.$or$rtl.v:980$886 ($or).
Removed top 10 bits (of 17) from mux cell module5.$ternary$rtl.v:984$891 ($mux).
Removed top 13 bits (of 22) from mux cell module5.$ternary$rtl.v:1002$916 ($mux).
Removed top 20 bits (of 23) from port Y of cell module5.$shr$rtl.v:1032$941 ($shr).
Removed top 6 bits (of 7) from port B of cell module5.$and$rtl.v:1037$947 ($and).
Removed top 1 bits (of 11) from mux cell module5.$procmux$1376 ($mux).
Removed top 1 bits (of 11) from mux cell module5.$procmux$1378 ($mux).
Removed top 1 bits (of 11) from FF cell module5.$procdff$1903 ($dff).
Removed top 3 bits (of 15) from mux cell module5.$ternary$rtl.v:809$627 ($mux).
Removed top 6 bits (of 19) from mux cell module5.$ternary$rtl.v:810$632 ($mux).
Removed top 7 bits (of 15) from port Y of cell module5.$xnor$rtl.v:842$688 ($xnor).
Removed top 5 bits (of 14) from wire module5.$0\reg15[13:0].
Removed top 6 bits (of 19) from wire module5.$0\reg30[18:0].
Removed top 6 bits (of 13) from wire module5.$0\reg32[12:0].
Removed top 21 bits (of 22) from wire module5.$0\reg35[21:0].
Removed top 8 bits (of 16) from wire module5.$0\reg36[15:0].
Removed top 2 bits (of 8) from wire module5.$0\reg37[7:0].
Removed top 2 bits (of 11) from wire module5.$0\reg38[10:0].
Removed top 3 bits (of 17) from wire module5.$0\reg40[16:0].
Removed top 12 bits (of 22) from wire module5.$0\reg45[21:0].
Removed top 17 bits (of 22) from wire module5.$0\reg85[21:0].
Removed top 4 bits (of 5) from wire module5.$0\reg94[4:0].
Removed top 23 bits (of 30) from wire module5.$and$rtl.v:1037$947_Y.
Removed top 21 bits (of 28) from wire module5.$and$rtl.v:888$763_Y.
Removed top 13 bits (of 14) from wire module5.$gt$rtl.v:750$537_Y.
Removed top 18 bits (of 19) from wire module5.$gt$rtl.v:810$629_Y.
Removed top 4 bits (of 5) from wire module5.$logic_not$rtl.v:855$712_Y.
Removed top 16 bits (of 17) from wire module5.$logic_not$rtl.v:857$715_Y.
Removed top 25 bits (of 26) from wire module5.$logic_or$rtl.v:771$564_Y.
Removed top 5 bits (of 6) from wire module5.$ne$rtl.v:771$569_Y.
Removed top 23 bits (of 30) from wire module5.$or$rtl.v:1037$948_Y.
Removed top 8 bits (of 16) from wire module5.$or$rtl.v:832$665_Y.
Removed top 6 bits (of 19) from wire module5.$pos$rtl.v:810$635_Y.
Removed top 12 bits (of 22) from wire module5.$procmux$1376_Y.
Removed top 2 bits (of 8) from wire module5.$procmux$1385_Y.
Removed top 8 bits (of 16) from wire module5.$procmux$1540_Y.
Removed top 8 bits (of 11) from wire module5.$procmux$1552_Y.
Removed top 5 bits (of 6) from wire module5.$reduce_and$rtl.v:753$542_Y.
Removed top 10 bits (of 11) from wire module5.$reduce_or$rtl.v:749$536_Y.
Removed top 1 bits (of 7) from wire module5.$sub$rtl.v:741$525_Y.
Removed top 6 bits (of 19) from wire module5.$ternary$rtl.v:800$601_Y.
Removed top 7 bits (of 19) from wire module5.$ternary$rtl.v:809$627_Y.
Removed top 6 bits (of 19) from wire module5.$ternary$rtl.v:810$632_Y.
Removed top 6 bits (of 19) from wire module5.$ternary$rtl.v:834$668_Y.
Removed top 3 bits (of 10) from wire module5.$ternary$rtl.v:836$675_Y.
Removed top 7 bits (of 15) from wire module5.$ternary$rtl.v:842$690_Y.
Removed top 7 bits (of 15) from wire module5.$ternary$rtl.v:842$691_Y.
Removed top 7 bits (of 15) from wire module5.$ternary$rtl.v:842$694_Y.
Removed top 1 bits (of 11) from wire module5.$ternary$rtl.v:858$717_Y.
Removed top 7 bits (of 21) from wire module5.$ternary$rtl.v:864$721_Y.
Removed top 11 bits (of 21) from wire module5.$ternary$rtl.v:864$724_Y.
Removed top 21 bits (of 28) from wire module5.$ternary$rtl.v:887$758_Y.
Removed top 12 bits (of 19) from wire module5.$ternary$rtl.v:887$761_Y.
Removed top 21 bits (of 28) from wire module5.$xnor$rtl.v:887$756_Y.
Removed top 6 bits (of 7) from wire module5.$xor$rtl.v:741$524_Y.
Removed top 21 bits (of 28) from wire module5.$xor$rtl.v:888$762_Y.
Removed top 19 bits (of 21) from wire module5.wire12.
Removed top 2 bits (of 13) from wire module5.wire127.
Removed top 8 bits (of 15) from wire module5.wire129.
Removed top 15 bits (of 21) from port A of cell module63.$le$rtl.v:1303$1283 ($le).
Removed top 10 bits (of 11) from port B of cell module63.$add$rtl.v:1303$1284 ($add).
Removed top 12 bits (of 31) from mux cell module63.$ternary$rtl.v:1303$1287 ($mux).
Removed top 10 bits (of 19) from port A of cell module63.$neg$rtl.v:1304$1289 ($neg).
Removed top 11 bits (of 20) from port A of cell module63.$or$rtl.v:1310$1301 ($or).
Removed top 10 bits (of 11) from mux cell module63.$ternary$rtl.v:1310$1303 ($mux).
Removed top 15 bits (of 21) from port A of cell module63.$ge$rtl.v:1313$1308 ($ge).
Removed top 16 bits (of 21) from mux cell module63.$ternary$rtl.v:1313$1307 ($mux).
Removed top 10 bits (of 11) from wire module63.$le$rtl.v:1303$1283_Y.
Removed top 10 bits (of 11) from wire module63.$reduce_and$rtl.v:1310$1302_Y.
Removed top 16 bits (of 21) from wire module63.$ternary$rtl.v:1313$1307_Y.
Removed top 16 bits (of 21) from wire module63.wire69.
Removed top 3 bits (of 19) from wire module63.wire72.
Removed top 10 bits (of 13) from wire module63.wire75.
Removed top 6 bits (of 7) from wire module63.wire77.
Removed top 16 bits (of 17) from wire module63.wire79.
Removed top 1 bits (of 19) from port A of cell module98.$xnor$rtl.v:1175$1117 ($xnor).
Removed top 17 bits (of 19) from port B of cell module98.$xnor$rtl.v:1175$1117 ($xnor).
Removed top 17 bits (of 19) from port B of cell module98.$sub$rtl.v:1175$1118 ($sub).
Removed top 5 bits (of 19) from port Y of cell module98.$sub$rtl.v:1175$1118 ($sub).
Removed top 5 bits (of 19) from port A of cell module98.$sub$rtl.v:1175$1118 ($sub).
Removed top 15 bits (of 16) from port A of cell module98.$not$rtl.v:1183$1127 ($not).
Removed top 4 bits (of 16) from mux cell module98.$ternary$rtl.v:1183$1130 ($mux).
Removed top 19 bits (of 20) from port A of cell module98.$or$rtl.v:1186$1137 ($or).
Removed top 12 bits (of 20) from port B of cell module98.$or$rtl.v:1186$1137 ($or).
Removed top 12 bits (of 20) from port Y of cell module98.$or$rtl.v:1186$1137 ($or).
Removed top 8 bits (of 17) from mux cell module98.$ternary$rtl.v:1197$1148 ($mux).
Removed top 8 bits (of 17) from port A of cell module98.$xnor$rtl.v:1197$1150 ($xnor).
Removed top 16 bits (of 17) from port B of cell module98.$xnor$rtl.v:1197$1150 ($xnor).
Removed top 17 bits (of 19) from port B of cell module98.$gt$rtl.v:1207$1168 ($gt).
Removed top 6 bits (of 7) from port A of cell module98.$gt$rtl.v:1207$1172 ($gt).
Removed top 2 bits (of 14) from mux cell module98.$ternary$rtl.v:1212$1180 ($mux).
Removed top 13 bits (of 14) from port A of cell module98.$or$rtl.v:1215$1186 ($or).
Removed top 9 bits (of 14) from port Y of cell module98.$or$rtl.v:1215$1186 ($or).
Removed top 9 bits (of 14) from port B of cell module98.$or$rtl.v:1215$1186 ($or).
Removed top 17 bits (of 19) from port B of cell module98.$sshr$rtl.v:1221$1196 ($sshr).
Removed top 19 bits (of 20) from mux cell module98.$ternary$rtl.v:1221$1198 ($mux).
Removed top 17 bits (of 19) from port A of cell module98.$shr$rtl.v:1227$1202 ($shr).
Removed top 1 bits (of 7) from mux cell module98.$ternary$rtl.v:1230$1213 ($mux).
Removed top 11 bits (of 17) from mux cell module98.$ternary$rtl.v:1249$1246 ($mux).
Removed top 15 bits (of 22) from port A of cell module98.$sub$rtl.v:1238$1232 ($sub).
Removed top 17 bits (of 22) from port B of cell module98.$sub$rtl.v:1238$1232 ($sub).
Removed top 9 bits (of 22) from port Y of cell module98.$sub$rtl.v:1238$1232 ($sub).
Removed top 12 bits (of 17) from port A of cell module98.$xnor$rtl.v:1241$1233 ($xnor).
Removed top 16 bits (of 20) from mux cell module98.$ternary$rtl.v:1242$1235 ($mux).
Removed top 10 bits (of 17) from mux cell module98.$ternary$rtl.v:1249$1248 ($mux).
Removed top 16 bits (of 17) from port A of cell module98.$sub$rtl.v:1249$1253 ($sub).
Removed top 10 bits (of 17) from port A of cell module98.$gt$rtl.v:1249$1251 ($gt).
Removed top 16 bits (of 17) from port B of cell module98.$gt$rtl.v:1249$1251 ($gt).
Removed top 6 bits (of 14) from port A of cell module98.$add$rtl.v:1257$1266 ($add).
Removed top 3 bits (of 4) from port B of cell module98.$le$rtl.v:1257$1267 ($le).
Removed top 5 bits (of 6) from port B of cell module98.$sub$rtl.v:1257$1269 ($sub).
Removed top 9 bits (of 13) from mux cell module98.$ternary$rtl.v:1258$1273 ($mux).
Removed top 5 bits (of 19) from port Y of cell module98.$xnor$rtl.v:1175$1117 ($xnor).
Removed top 4 bits (of 16) from port Y of cell module98.$not$rtl.v:1183$1128 ($not).
Removed top 4 bits (of 16) from port A of cell module98.$not$rtl.v:1183$1128 ($not).
Removed top 4 bits (of 16) from port Y of cell module98.$not$rtl.v:1183$1127 ($not).
Removed top 6 bits (of 7) from wire module98.$gt$rtl.v:1207$1168_Y.
Removed top 11 bits (of 12) from wire module98.$gt$rtl.v:1207$1172_Y.
Removed top 16 bits (of 17) from wire module98.$gt$rtl.v:1249$1251_Y.
Removed top 12 bits (of 13) from wire module98.$le$rtl.v:1257$1267_Y.
Removed top 15 bits (of 16) from wire module98.$logic_not$rtl.v:1183$1126_Y.
Removed top 19 bits (of 20) from wire module98.$logic_not$rtl.v:1218$1190_Y.
Removed top 19 bits (of 20) from wire module98.$logic_or$rtl.v:1184$1131_Y.
Removed top 19 bits (of 20) from wire module98.$logic_or$rtl.v:1221$1197_Y.
Removed top 4 bits (of 16) from wire module98.$not$rtl.v:1183$1127_Y.
Removed top 4 bits (of 16) from wire module98.$not$rtl.v:1183$1128_Y.
Removed top 12 bits (of 20) from wire module98.$or$rtl.v:1186$1137_Y.
Removed top 9 bits (of 14) from wire module98.$or$rtl.v:1215$1186_Y.
Removed top 16 bits (of 17) from wire module98.$reduce_and$rtl.v:1197$1149_Y.
Removed top 4 bits (of 5) from wire module98.$reduce_and$rtl.v:1226$1200_Y.
Removed top 4 bits (of 5) from wire module98.$reduce_and$rtl.v:1230$1208_Y.
Removed top 11 bits (of 12) from wire module98.$reduce_xor$rtl.v:1202$1153_Y.
Removed top 4 bits (of 16) from wire module98.$ternary$rtl.v:1183$1130_Y.
Removed top 1 bits (of 8) from wire module98.$ternary$rtl.v:1186$1136_Y.
Removed top 8 bits (of 17) from wire module98.$ternary$rtl.v:1197$1148_Y.
Removed top 2 bits (of 14) from wire module98.$ternary$rtl.v:1212$1180_Y.
Removed top 19 bits (of 20) from wire module98.$ternary$rtl.v:1221$1198_Y.
Removed top 11 bits (of 17) from wire module98.$ternary$rtl.v:1249$1246_Y.
Removed top 10 bits (of 17) from wire module98.$ternary$rtl.v:1249$1248_Y.
Removed top 14 bits (of 21) from port Y of cell top.$xor$rtl.v:61$1 ($xor).
Removed top 3 bits (of 10) from port A of cell top.$xor$rtl.v:61$1 ($xor).
Removed top 14 bits (of 21) from port B of cell top.$xor$rtl.v:61$1 ($xor).
Removed top 4 bits (of 21) from port B of cell top.$gt$rtl.v:62$6 ($gt).
Removed top 20 bits (of 21) from port B of cell top.$sub$rtl.v:62$7 ($sub).
Removed top 2 bits (of 21) from port Y of cell top.$sub$rtl.v:62$7 ($sub).
Removed top 2 bits (of 21) from port A of cell top.$sub$rtl.v:62$7 ($sub).
Removed top 5 bits (of 7) from mux cell top.$ternary$rtl.v:70$15 ($mux).
Removed top 3 bits (of 10) from port A of cell top.$gt$rtl.v:70$16 ($gt).
Removed top 2 bits (of 8) from mux cell top.$ternary$rtl.v:71$25 ($mux).
Removed top 2 bits (of 8) from mux cell top.$ternary$rtl.v:71$22 ($mux).
Removed top 14 bits (of 22) from mux cell top.$ternary$rtl.v:78$39 ($mux).
Removed top 5 bits (of 22) from mux cell top.$ternary$rtl.v:78$40 ($mux).
Removed top 1 bits (of 5) from port Y of cell top.$not$rtl.v:82$45 ($not).
Removed top 1 bits (of 5) from port A of cell top.$not$rtl.v:82$45 ($not).
Removed top 1 bits (of 5) from mux cell top.$ternary$rtl.v:82$44 ($mux).
Removed top 20 bits (of 21) from port A of cell top.$sshr$rtl.v:86$57 ($sshr).
Removed top 12 bits (of 19) from port A of cell top.$xnor$rtl.v:88$62 ($xnor).
Removed top 18 bits (of 19) from port B of cell top.$xnor$rtl.v:88$62 ($xnor).
Removed top 3 bits (of 4) from port A of cell top.$shr$rtl.v:93$76 ($shr).
Removed top 18 bits (of 19) from port B of cell top.$xnor$rtl.v:88$64 ($xnor).
Removed top 15 bits (of 19) from port Y of cell top.$xnor$rtl.v:88$64 ($xnor).
Removed top 3 bits (of 20) from port A of cell top.$sshr$rtl.v:92$71 ($sshr).
Removed top 9 bits (of 10) from port A of cell top.$xnor$rtl.v:96$80 ($xnor).
Removed top 9 bits (of 10) from port B of cell top.$xnor$rtl.v:96$80 ($xnor).
Removed top 2 bits (of 8) from mux cell top.$ternary$rtl.v:71$20 ($mux).
Removed top 2 bits (of 8) from mux cell top.$ternary$rtl.v:71$18 ($mux).
Removed top 20 bits (of 21) from wire top.$gt$rtl.v:62$6_Y.
Removed top 7 bits (of 8) from wire top.$gt$rtl.v:70$16_Y.
Removed top 20 bits (of 21) from wire top.$logic_not$rtl.v:84$50_Y.
Removed top 18 bits (of 19) from wire top.$ne$rtl.v:88$61_Y.
Removed top 4 bits (of 5) from wire top.$reduce_xnor$rtl.v:82$43_Y.
Removed top 9 bits (of 10) from wire top.$reduce_xor$rtl.v:96$79_Y.
Removed top 5 bits (of 7) from wire top.$ternary$rtl.v:70$15_Y.
Removed top 2 bits (of 8) from wire top.$ternary$rtl.v:71$18_Y.
Removed top 2 bits (of 8) from wire top.$ternary$rtl.v:71$20_Y.
Removed top 2 bits (of 8) from wire top.$ternary$rtl.v:71$22_Y.
Removed top 14 bits (of 22) from wire top.$ternary$rtl.v:78$39_Y.
Removed top 1 bits (of 5) from wire top.$ternary$rtl.v:82$44_Y.
Removed top 5 bits (of 22) from wire top.wire163.
Removed top 18 bits (of 19) from wire top.wire164.
Removed top 12 bits (of 13) from wire top.wire249.

2.8. Executing PEEPOPT pass (run peephole optimizers).

2.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module133..
Finding unused cells or wires in module \module172..
Finding unused cells or wires in module \module5..
Finding unused cells or wires in module \module63..
Finding unused cells or wires in module \module98..
Finding unused cells or wires in module \top..
Removed 0 unused cells and 149 unused wires.
<suppressed ~6 debug messages>

2.10. Executing TECHMAP pass (map to technology primitives).

2.10.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

2.10.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~648 debug messages>

2.11. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module module133:
  creating $macc model for $mul$rtl.v:1108$1089 ($mul).
  creating $macc model for $neg$rtl.v:1098$1061 ($neg).
  creating $alu model for $macc $neg$rtl.v:1098$1061.
  creating $macc cell for $mul$rtl.v:1108$1089: $auto$alumacc.cc:354:replace_macc$2117
  creating $alu model for $gt$rtl.v:1092$1048 ($gt): new $alu
  creating $alu model for $gt$rtl.v:1096$1060 ($gt): new $alu
  creating $alu model for $gt$rtl.v:1108$1096 ($gt): new $alu
  creating $alu model for $le$rtl.v:1102$1073 ($le): new $alu
  creating $alu cell for $le$rtl.v:1102$1073: $auto$alumacc.cc:474:replace_alu$2122
  creating $alu cell for $gt$rtl.v:1108$1096: $auto$alumacc.cc:474:replace_alu$2135
  creating $alu cell for $gt$rtl.v:1096$1060: $auto$alumacc.cc:474:replace_alu$2140
  creating $alu cell for $gt$rtl.v:1092$1048: $auto$alumacc.cc:474:replace_alu$2151
  creating $alu cell for $neg$rtl.v:1098$1061: $auto$alumacc.cc:474:replace_alu$2162
  created 5 $alu and 1 $macc cells.
Extracting $alu and $macc cells in module module172:
  creating $macc model for $add$rtl.v:456$314 ($add).
  creating $macc model for $neg$rtl.v:496$357 ($neg).
  creating $macc model for $neg$rtl.v:554$446 ($neg).
  creating $alu model for $macc $neg$rtl.v:554$446.
  creating $alu model for $macc $neg$rtl.v:496$357.
  creating $alu model for $macc $add$rtl.v:456$314.
  creating $alu model for $ge$rtl.v:265$100 ($ge): new $alu
  creating $alu model for $ge$rtl.v:464$331 ($ge): new $alu
  creating $alu model for $gt$rtl.v:246$89 ($gt): new $alu
  creating $alu model for $gt$rtl.v:263$97 ($gt): new $alu
  creating $alu model for $lt$rtl.v:249$90 ($lt): new $alu
  creating $alu cell for $lt$rtl.v:249$90: $auto$alumacc.cc:474:replace_alu$2170
  creating $alu cell for $gt$rtl.v:263$97: $auto$alumacc.cc:474:replace_alu$2175
  creating $alu cell for $gt$rtl.v:246$89: $auto$alumacc.cc:474:replace_alu$2186
  creating $alu cell for $ge$rtl.v:464$331: $auto$alumacc.cc:474:replace_alu$2197
  creating $alu cell for $ge$rtl.v:265$100: $auto$alumacc.cc:474:replace_alu$2206
  creating $alu cell for $add$rtl.v:456$314: $auto$alumacc.cc:474:replace_alu$2215
  creating $alu cell for $neg$rtl.v:496$357: $auto$alumacc.cc:474:replace_alu$2218
  creating $alu cell for $neg$rtl.v:554$446: $auto$alumacc.cc:474:replace_alu$2221
  created 8 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module module5:
  creating $macc model for $mul$rtl.v:809$628 ($mul).
  creating $macc model for $mul$rtl.v:926$833 ($mul).
  creating $macc model for $mul$rtl.v:945$857 ($mul).
  creating $macc model for $neg$rtl.v:800$595 ($neg).
  creating $macc model for $neg$rtl.v:802$610 ($neg).
  creating $macc model for $neg$rtl.v:805$621 ($neg).
  creating $macc model for $neg$rtl.v:865$726 ($neg).
  creating $macc model for $neg$rtl.v:925$824 ($neg).
  creating $macc model for $sub$rtl.v:740$521 ($sub).
  creating $macc model for $sub$rtl.v:741$525 ($sub).
  creating $macc model for $sub$rtl.v:974$875 ($sub).
  creating $alu model for $macc $sub$rtl.v:974$875.
  creating $alu model for $macc $sub$rtl.v:741$525.
  creating $alu model for $macc $sub$rtl.v:740$521.
  creating $alu model for $macc $neg$rtl.v:925$824.
  creating $alu model for $macc $neg$rtl.v:865$726.
  creating $alu model for $macc $neg$rtl.v:805$621.
  creating $alu model for $macc $neg$rtl.v:802$610.
  creating $alu model for $macc $neg$rtl.v:800$595.
  creating $macc cell for $mul$rtl.v:945$857: $auto$alumacc.cc:354:replace_macc$2224
  creating $macc cell for $mul$rtl.v:926$833: $auto$alumacc.cc:354:replace_macc$2225
  creating $macc cell for $mul$rtl.v:809$628: $auto$alumacc.cc:354:replace_macc$2226
  creating $alu model for $ge$rtl.v:1007$940 ($ge): new $alu
  creating $alu model for $ge$rtl.v:832$664 ($ge): new $alu
  creating $alu model for $gt$rtl.v:750$537 ($gt): new $alu
  creating $alu model for $gt$rtl.v:810$629 ($gt): new $alu
  creating $alu model for $gt$rtl.v:815$647 ($gt): new $alu
  creating $alu model for $gt$rtl.v:921$815 ($gt): new $alu
  creating $alu model for $gt$rtl.v:986$900 ($gt): new $alu
  creating $alu model for $le$rtl.v:727$506 ($le): new $alu
  creating $alu model for $le$rtl.v:819$659 ($le): new $alu
  creating $alu model for $lt$rtl.v:800$603 ($lt): new $alu
  creating $alu model for $lt$rtl.v:813$644 ($lt): new $alu
  creating $alu cell for $lt$rtl.v:813$644: $auto$alumacc.cc:474:replace_alu$2238
  creating $alu cell for $lt$rtl.v:800$603: $auto$alumacc.cc:474:replace_alu$2243
  creating $alu cell for $le$rtl.v:819$659: $auto$alumacc.cc:474:replace_alu$2248
  creating $alu cell for $le$rtl.v:727$506: $auto$alumacc.cc:474:replace_alu$2261
  creating $alu cell for $gt$rtl.v:986$900: $auto$alumacc.cc:474:replace_alu$2276
  creating $alu cell for $gt$rtl.v:921$815: $auto$alumacc.cc:474:replace_alu$2287
  creating $alu cell for $gt$rtl.v:815$647: $auto$alumacc.cc:474:replace_alu$2292
  creating $alu cell for $gt$rtl.v:810$629: $auto$alumacc.cc:474:replace_alu$2303
  creating $alu cell for $gt$rtl.v:750$537: $auto$alumacc.cc:474:replace_alu$2314
  creating $alu cell for $ge$rtl.v:832$664: $auto$alumacc.cc:474:replace_alu$2325
  creating $alu cell for $ge$rtl.v:1007$940: $auto$alumacc.cc:474:replace_alu$2338
  creating $alu cell for $neg$rtl.v:800$595: $auto$alumacc.cc:474:replace_alu$2351
  creating $alu cell for $neg$rtl.v:802$610: $auto$alumacc.cc:474:replace_alu$2354
  creating $alu cell for $neg$rtl.v:805$621: $auto$alumacc.cc:474:replace_alu$2357
  creating $alu cell for $neg$rtl.v:865$726: $auto$alumacc.cc:474:replace_alu$2360
  creating $alu cell for $neg$rtl.v:925$824: $auto$alumacc.cc:474:replace_alu$2363
  creating $alu cell for $sub$rtl.v:740$521: $auto$alumacc.cc:474:replace_alu$2366
  creating $alu cell for $sub$rtl.v:741$525: $auto$alumacc.cc:474:replace_alu$2369
  creating $alu cell for $sub$rtl.v:974$875: $auto$alumacc.cc:474:replace_alu$2372
  created 19 $alu and 3 $macc cells.
Extracting $alu and $macc cells in module module63:
  creating $macc model for $add$rtl.v:1303$1284 ($add).
  creating $macc model for $neg$rtl.v:1304$1289 ($neg).
  creating $macc model for $neg$rtl.v:1311$1304 ($neg).
  creating $alu model for $macc $neg$rtl.v:1311$1304.
  creating $alu model for $macc $neg$rtl.v:1304$1289.
  creating $alu model for $macc $add$rtl.v:1303$1284.
  creating $alu model for $ge$rtl.v:1313$1308 ($ge): new $alu
  creating $alu model for $le$rtl.v:1303$1283 ($le): new $alu
  creating $alu cell for $le$rtl.v:1303$1283: $auto$alumacc.cc:474:replace_alu$2377
  creating $alu cell for $ge$rtl.v:1313$1308: $auto$alumacc.cc:474:replace_alu$2388
  creating $alu cell for $add$rtl.v:1303$1284: $auto$alumacc.cc:474:replace_alu$2403
  creating $alu cell for $neg$rtl.v:1304$1289: $auto$alumacc.cc:474:replace_alu$2406
  creating $alu cell for $neg$rtl.v:1311$1304: $auto$alumacc.cc:474:replace_alu$2409
  created 5 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module module98:
  creating $macc model for $add$rtl.v:1257$1266 ($add).
  creating $macc model for $neg$rtl.v:1182$1121 ($neg).
  creating $macc model for $neg$rtl.v:1200$1152 ($neg).
  creating $macc model for $neg$rtl.v:1257$1268 ($neg).
  creating $macc model for $sub$rtl.v:1175$1118 ($sub).
  creating $macc model for $sub$rtl.v:1213$1182 ($sub).
  creating $macc model for $sub$rtl.v:1238$1232 ($sub).
  creating $macc model for $sub$rtl.v:1249$1253 ($sub).
  creating $macc model for $sub$rtl.v:1257$1269 ($sub).
  merging $macc model for $neg$rtl.v:1257$1268 into $sub$rtl.v:1257$1269.
  creating $alu model for $macc $sub$rtl.v:1249$1253.
  creating $alu model for $macc $sub$rtl.v:1238$1232.
  creating $alu model for $macc $sub$rtl.v:1213$1182.
  creating $alu model for $macc $sub$rtl.v:1175$1118.
  creating $alu model for $macc $neg$rtl.v:1200$1152.
  creating $alu model for $macc $neg$rtl.v:1182$1121.
  creating $alu model for $macc $add$rtl.v:1257$1266.
  creating $macc cell for $sub$rtl.v:1257$1269: $auto$alumacc.cc:354:replace_macc$2412
  creating $alu model for $gt$rtl.v:1207$1168 ($gt): new $alu
  creating $alu model for $gt$rtl.v:1207$1172 ($gt): new $alu
  creating $alu model for $gt$rtl.v:1249$1251 ($gt): new $alu
  creating $alu model for $le$rtl.v:1257$1267 ($le): new $alu
  creating $alu cell for $le$rtl.v:1257$1267: $auto$alumacc.cc:474:replace_alu$2417
  creating $alu cell for $gt$rtl.v:1249$1251: $auto$alumacc.cc:474:replace_alu$2430
  creating $alu cell for $gt$rtl.v:1207$1172: $auto$alumacc.cc:474:replace_alu$2435
  creating $alu cell for $gt$rtl.v:1207$1168: $auto$alumacc.cc:474:replace_alu$2446
  creating $alu cell for $add$rtl.v:1257$1266: $auto$alumacc.cc:474:replace_alu$2451
  creating $alu cell for $neg$rtl.v:1182$1121: $auto$alumacc.cc:474:replace_alu$2454
  creating $alu cell for $neg$rtl.v:1200$1152: $auto$alumacc.cc:474:replace_alu$2457
  creating $alu cell for $sub$rtl.v:1175$1118: $auto$alumacc.cc:474:replace_alu$2460
  creating $alu cell for $sub$rtl.v:1213$1182: $auto$alumacc.cc:474:replace_alu$2463
  creating $alu cell for $sub$rtl.v:1238$1232: $auto$alumacc.cc:474:replace_alu$2466
  creating $alu cell for $sub$rtl.v:1249$1253: $auto$alumacc.cc:474:replace_alu$2469
  created 11 $alu and 1 $macc cells.
Extracting $alu and $macc cells in module top:
  creating $macc model for $neg$rtl.v:88$63 ($neg).
  creating $macc model for $sub$rtl.v:62$7 ($sub).
  creating $macc model for $sub$rtl.v:74$32 ($sub).
  creating $alu model for $macc $sub$rtl.v:74$32.
  creating $alu model for $macc $sub$rtl.v:62$7.
  creating $alu model for $macc $neg$rtl.v:88$63.
  creating $alu model for $gt$rtl.v:62$6 ($gt): new $alu
  creating $alu model for $gt$rtl.v:70$16 ($gt): new $alu
  creating $alu cell for $gt$rtl.v:70$16: $auto$alumacc.cc:474:replace_alu$2474
  creating $alu cell for $gt$rtl.v:62$6: $auto$alumacc.cc:474:replace_alu$2485
  creating $alu cell for $neg$rtl.v:88$63: $auto$alumacc.cc:474:replace_alu$2490
  creating $alu cell for $sub$rtl.v:62$7: $auto$alumacc.cc:474:replace_alu$2493
  creating $alu cell for $sub$rtl.v:74$32: $auto$alumacc.cc:474:replace_alu$2496
  created 5 $alu and 0 $macc cells.

2.12. Executing SHARE pass (SAT-based resource sharing).
Found 7 cells in module module5 that may be considered for resource sharing.
  Analyzing resource sharing options for $sshr$rtl.v:902$787 ($sshr):
    Found 1 activation_patterns using ctrl signal { $procmux$1382_CMP $procmux$1373_CMP }.
    No candidates found.
  Analyzing resource sharing options for $sshr$rtl.v:729$511 ($sshr):
    Found 1 activation_patterns using ctrl signal { $auto$rtlil.cc:1836:ReduceOr$2275 $procmux$1571_CMP }.
    No candidates found.
  Analyzing resource sharing options for $shr$rtl.v:919$812 ($shr):
    Found 1 activation_patterns using ctrl signal { $procmux$1373_CMP $reduce_xnor$rtl.v:917$808_Y }.
    No candidates found.
  Analyzing resource sharing options for $shr$rtl.v:917$807 ($shr):
    Found 1 activation_patterns using ctrl signal $procmux$1373_CMP.
    No candidates found.
  Analyzing resource sharing options for $shl$rtl.v:903$791 ($shl):
    Found 1 activation_patterns using ctrl signal { $procmux$1382_CMP $procmux$1373_CMP }.
    Found 1 candidates: $shl$rtl.v:834$669
    Analyzing resource sharing with $shl$rtl.v:834$669 ($shl):
      Found 1 activation_patterns using ctrl signal { $procmux$1544_CMP $procmux$1541_CMP }.
      Forbidden control signals for this pair of cells: { $reduce_bool$rtl.v:842$692_Y $logic_or$rtl.v:834$670_Y }
      Activation pattern for cell $shl$rtl.v:903$791: { $procmux$1382_CMP $procmux$1373_CMP } = 2'10
      Activation pattern for cell $shl$rtl.v:834$669: { $procmux$1544_CMP $procmux$1541_CMP } = 2'00
      Size of SAT problem: 8 cells, 322 variables, 770 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { $procmux$1544_CMP $procmux$1541_CMP $procmux$1382_CMP $procmux$1373_CMP } = 4'0010
  Analyzing resource sharing options for $shl$rtl.v:834$669 ($shl):
    Found 1 activation_patterns using ctrl signal { $procmux$1544_CMP $procmux$1541_CMP }.
    No candidates found.
  Analyzing resource sharing options for $shl$rtl.v:771$563 ($shl):
    Found 1 activation_patterns using ctrl signal { $procmux$1460_CMP $reduce_bool$rtl.v:771$565_Y }.
    No candidates found.
Found 2 cells in module module98 that may be considered for resource sharing.
  Analyzing resource sharing options for $sshr$rtl.v:1221$1196 ($sshr):
    Found 1 activation_patterns using ctrl signal { $reduce_or$rtl.v:1217$1187_Y $procmux$1337_CMP }.
    No candidates found.
  Analyzing resource sharing options for $shr$rtl.v:1227$1202 ($shr):
    Found 1 activation_patterns using ctrl signal { $reduce_bool$rtl.v:1227$1206_Y $reduce_bool$rtl.v:1227$1203_Y }.
    No candidates found.
Found 2 cells in module top that may be considered for resource sharing.
  Analyzing resource sharing options for $sshr$rtl.v:92$71 ($sshr):
    Found 1 activation_patterns using ctrl signal $reduce_bool$rtl.v:71$24_Y.
    No candidates found.
  Analyzing resource sharing options for $sshl$rtl.v:77$35 ($sshl):
    Found 1 activation_patterns using ctrl signal $reduce_or$rtl.v:74$33_Y.
    No candidates found.

2.13. Executing OPT pass (performing simple optimizations).

2.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module module133.
<suppressed ~10 debug messages>
Optimizing module module172.
<suppressed ~3 debug messages>
Optimizing module module5.
<suppressed ~12 debug messages>
Optimizing module module63.
Optimizing module module98.
<suppressed ~5 debug messages>
Optimizing module top.

2.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module133'.
Finding identical cells in module `\module172'.
<suppressed ~9 debug messages>
Finding identical cells in module `\module5'.
<suppressed ~3 debug messages>
Finding identical cells in module `\module63'.
Finding identical cells in module `\module98'.
<suppressed ~3 debug messages>
Finding identical cells in module `\top'.
Removed a total of 5 cells.

2.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module133..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $ternary$rtl.v:1105$1082.
    dead port 2/2 on $mux $ternary$rtl.v:1105$1082.
Running muxtree optimizer on module \module172..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module63..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module98..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $ternary$rtl.v:1226$1201: { 4'0000 $auto$wreduce.cc:455:run$2092 [0] } -> 5'00001
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 2 multiplexer ports.
<suppressed ~135 debug messages>

2.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module133.
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2143: { $auto$alumacc.cc:490:replace_alu$2141 [0] $auto$alumacc.cc:490:replace_alu$2141 [1] $auto$alumacc.cc:490:replace_alu$2141 [2] $auto$alumacc.cc:490:replace_alu$2141 [3] $auto$alumacc.cc:490:replace_alu$2141 [4] $auto$alumacc.cc:490:replace_alu$2141 [5] $auto$alumacc.cc:490:replace_alu$2141 [6] $auto$alumacc.cc:490:replace_alu$2141 [7] $auto$alumacc.cc:490:replace_alu$2141 [8] $auto$alumacc.cc:490:replace_alu$2141 [9] $auto$alumacc.cc:490:replace_alu$2141 [10] $auto$alumacc.cc:490:replace_alu$2141 [11] $auto$alumacc.cc:490:replace_alu$2141 [12] $auto$alumacc.cc:490:replace_alu$2141 [13] $auto$alumacc.cc:490:replace_alu$2141 [14] $auto$alumacc.cc:490:replace_alu$2141 [15] $auto$alumacc.cc:490:replace_alu$2141 [16] $auto$alumacc.cc:490:replace_alu$2141 [17] $auto$alumacc.cc:490:replace_alu$2141 [18] $auto$alumacc.cc:490:replace_alu$2141 [19] $auto$alumacc.cc:490:replace_alu$2141 [20] $auto$alumacc.cc:490:replace_alu$2141 [21] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2125: { $auto$alumacc.cc:490:replace_alu$2123 [0] $auto$alumacc.cc:490:replace_alu$2123 [1] $auto$alumacc.cc:490:replace_alu$2123 [2] $auto$alumacc.cc:490:replace_alu$2123 [3] $auto$alumacc.cc:490:replace_alu$2123 [4] $auto$alumacc.cc:490:replace_alu$2123 [5] $auto$alumacc.cc:490:replace_alu$2123 [6] $auto$alumacc.cc:490:replace_alu$2123 [7] }
  Optimizing cells in module \module133.
  Optimizing cells in module \module172.
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$2204: { $auto$rtlil.cc:1832:Not$2201 $auto$rtlil.cc:1835:ReduceAnd$2203 }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2202: { $auto$alumacc.cc:490:replace_alu$2198 [0] $auto$alumacc.cc:490:replace_alu$2198 [1] $auto$alumacc.cc:490:replace_alu$2198 [2] $auto$alumacc.cc:490:replace_alu$2198 [3] $auto$alumacc.cc:490:replace_alu$2198 [4] $auto$alumacc.cc:490:replace_alu$2198 [5] $auto$alumacc.cc:490:replace_alu$2198 [6] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2211: { $auto$alumacc.cc:490:replace_alu$2207 [0] $auto$alumacc.cc:490:replace_alu$2207 [1] $auto$alumacc.cc:490:replace_alu$2207 [2] $auto$alumacc.cc:490:replace_alu$2207 [3] $auto$alumacc.cc:490:replace_alu$2207 [4] $auto$alumacc.cc:490:replace_alu$2207 [5] $auto$alumacc.cc:490:replace_alu$2207 [6] $auto$alumacc.cc:490:replace_alu$2207 [7] $auto$alumacc.cc:490:replace_alu$2207 [8] $auto$alumacc.cc:490:replace_alu$2207 [9] $auto$alumacc.cc:490:replace_alu$2207 [10] $auto$alumacc.cc:490:replace_alu$2207 [11] $auto$alumacc.cc:490:replace_alu$2207 [12] $auto$alumacc.cc:490:replace_alu$2207 [13] $auto$alumacc.cc:490:replace_alu$2207 [14] $auto$alumacc.cc:490:replace_alu$2207 [15] $auto$alumacc.cc:490:replace_alu$2207 [16] $auto$alumacc.cc:490:replace_alu$2207 [17] $auto$alumacc.cc:490:replace_alu$2207 [18] $auto$alumacc.cc:490:replace_alu$2207 [19] $auto$alumacc.cc:490:replace_alu$2207 [20] $auto$alumacc.cc:490:replace_alu$2207 [21] $auto$alumacc.cc:490:replace_alu$2207 [22] $auto$alumacc.cc:490:replace_alu$2207 [23] $auto$alumacc.cc:490:replace_alu$2207 [24] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2178: { $auto$alumacc.cc:490:replace_alu$2176 [0] $auto$alumacc.cc:490:replace_alu$2176 [1] $auto$alumacc.cc:490:replace_alu$2176 [2] $auto$alumacc.cc:490:replace_alu$2176 [3] $auto$alumacc.cc:490:replace_alu$2176 [4] $auto$alumacc.cc:490:replace_alu$2176 [5] $auto$alumacc.cc:490:replace_alu$2176 [6] $auto$alumacc.cc:490:replace_alu$2176 [7] $auto$alumacc.cc:490:replace_alu$2176 [8] $auto$alumacc.cc:490:replace_alu$2176 [9] $auto$alumacc.cc:490:replace_alu$2176 [10] $auto$alumacc.cc:490:replace_alu$2176 [11] $auto$alumacc.cc:490:replace_alu$2176 [12] $auto$alumacc.cc:490:replace_alu$2176 [13] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2189: { $auto$alumacc.cc:490:replace_alu$2187 [0] $auto$alumacc.cc:490:replace_alu$2187 [1] $auto$alumacc.cc:490:replace_alu$2187 [2] $auto$alumacc.cc:490:replace_alu$2187 [3] $auto$alumacc.cc:490:replace_alu$2187 [4] $auto$alumacc.cc:490:replace_alu$2187 [5] $auto$alumacc.cc:490:replace_alu$2187 [6] }
  Optimizing cells in module \module172.
  Optimizing cells in module \module5.
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$2259: { $auto$rtlil.cc:1832:Not$2258 $auto$rtlil.cc:1835:ReduceAnd$2252 }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$2274: { $auto$rtlil.cc:1832:Not$2273 $auto$rtlil.cc:1835:ReduceAnd$2265 }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$2336: { $auto$rtlil.cc:1832:Not$2335 $auto$rtlil.cc:1835:ReduceAnd$2329 }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2341: { $auto$alumacc.cc:490:replace_alu$2339 [0] $auto$alumacc.cc:490:replace_alu$2339 [1] $auto$alumacc.cc:490:replace_alu$2339 [2] $auto$alumacc.cc:490:replace_alu$2339 [3] $auto$alumacc.cc:490:replace_alu$2339 [4] $auto$alumacc.cc:490:replace_alu$2339 [5] $auto$alumacc.cc:490:replace_alu$2339 [6] $auto$alumacc.cc:490:replace_alu$2339 [7] $auto$alumacc.cc:490:replace_alu$2339 [8] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2328: { $auto$alumacc.cc:490:replace_alu$2326 [0] $auto$alumacc.cc:490:replace_alu$2326 [1] $auto$alumacc.cc:490:replace_alu$2326 [2] $auto$alumacc.cc:490:replace_alu$2326 [3] $auto$alumacc.cc:490:replace_alu$2326 [4] $auto$alumacc.cc:490:replace_alu$2326 [5] $auto$alumacc.cc:490:replace_alu$2326 [6] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2251: { $auto$alumacc.cc:490:replace_alu$2249 [0] $auto$alumacc.cc:490:replace_alu$2249 [1] $auto$alumacc.cc:490:replace_alu$2249 [2] $auto$alumacc.cc:490:replace_alu$2249 [3] $auto$alumacc.cc:490:replace_alu$2249 [4] $auto$alumacc.cc:490:replace_alu$2249 [5] $auto$alumacc.cc:490:replace_alu$2249 [6] $auto$alumacc.cc:490:replace_alu$2249 [7] $auto$alumacc.cc:490:replace_alu$2249 [8] $auto$alumacc.cc:490:replace_alu$2249 [9] $auto$alumacc.cc:490:replace_alu$2249 [10] $auto$alumacc.cc:490:replace_alu$2249 [11] $auto$alumacc.cc:490:replace_alu$2249 [12] $auto$alumacc.cc:490:replace_alu$2249 [13] $auto$alumacc.cc:490:replace_alu$2249 [14] $auto$alumacc.cc:490:replace_alu$2249 [15] $auto$alumacc.cc:490:replace_alu$2249 [16] $auto$alumacc.cc:490:replace_alu$2249 [17] $auto$alumacc.cc:490:replace_alu$2249 [18] $auto$alumacc.cc:490:replace_alu$2249 [19] $auto$alumacc.cc:490:replace_alu$2249 [20] $auto$alumacc.cc:490:replace_alu$2249 [21] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2264: { $auto$alumacc.cc:490:replace_alu$2262 [0] $auto$alumacc.cc:490:replace_alu$2262 [1] $auto$alumacc.cc:490:replace_alu$2262 [2] $auto$alumacc.cc:490:replace_alu$2262 [3] $auto$alumacc.cc:490:replace_alu$2262 [4] $auto$alumacc.cc:490:replace_alu$2262 [5] $auto$alumacc.cc:490:replace_alu$2262 [6] $auto$alumacc.cc:490:replace_alu$2262 [7] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2306: { $auto$alumacc.cc:490:replace_alu$2304 [0] $auto$alumacc.cc:490:replace_alu$2304 [1] $auto$alumacc.cc:490:replace_alu$2304 [2] $auto$alumacc.cc:490:replace_alu$2304 [3] $auto$alumacc.cc:490:replace_alu$2304 [4] $auto$alumacc.cc:490:replace_alu$2304 [5] $auto$alumacc.cc:490:replace_alu$2304 [6] $auto$alumacc.cc:490:replace_alu$2304 [7] $auto$alumacc.cc:490:replace_alu$2304 [8] $auto$alumacc.cc:490:replace_alu$2304 [9] $auto$alumacc.cc:490:replace_alu$2304 [10] $auto$alumacc.cc:490:replace_alu$2304 [11] $auto$alumacc.cc:490:replace_alu$2304 [12] $auto$alumacc.cc:490:replace_alu$2304 [13] $auto$alumacc.cc:490:replace_alu$2304 [14] $auto$alumacc.cc:490:replace_alu$2304 [15] $auto$alumacc.cc:490:replace_alu$2304 [16] $auto$alumacc.cc:490:replace_alu$2304 [17] $auto$alumacc.cc:490:replace_alu$2304 [18] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2317: { $auto$alumacc.cc:490:replace_alu$2315 [0] $auto$alumacc.cc:490:replace_alu$2315 [1] $auto$alumacc.cc:490:replace_alu$2315 [2] $auto$alumacc.cc:490:replace_alu$2315 [3] $auto$alumacc.cc:490:replace_alu$2315 [4] $auto$alumacc.cc:490:replace_alu$2315 [5] $auto$alumacc.cc:490:replace_alu$2315 [6] $auto$alumacc.cc:490:replace_alu$2315 [7] $auto$alumacc.cc:490:replace_alu$2315 [8] }
  Optimizing cells in module \module5.
  Optimizing cells in module \module63.
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2384: { $auto$alumacc.cc:490:replace_alu$2378 [0] $auto$alumacc.cc:490:replace_alu$2378 [1] $auto$alumacc.cc:490:replace_alu$2378 [2] $auto$alumacc.cc:490:replace_alu$2378 [3] $auto$alumacc.cc:490:replace_alu$2378 [4] $auto$alumacc.cc:490:replace_alu$2378 [5] $auto$alumacc.cc:490:replace_alu$2378 [6] $auto$alumacc.cc:490:replace_alu$2378 [7] $auto$alumacc.cc:490:replace_alu$2378 [8] $auto$alumacc.cc:490:replace_alu$2378 [9] $auto$alumacc.cc:490:replace_alu$2378 [10] $auto$alumacc.cc:490:replace_alu$2378 [11] $auto$alumacc.cc:490:replace_alu$2378 [12] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2391: { $auto$alumacc.cc:490:replace_alu$2389 [0] $auto$alumacc.cc:490:replace_alu$2389 [1] $auto$alumacc.cc:490:replace_alu$2389 [2] $auto$alumacc.cc:490:replace_alu$2389 [3] $auto$alumacc.cc:490:replace_alu$2389 [4] $auto$alumacc.cc:490:replace_alu$2389 [5] $auto$alumacc.cc:490:replace_alu$2389 [6] $auto$alumacc.cc:490:replace_alu$2389 [7] $auto$alumacc.cc:490:replace_alu$2389 [8] $auto$alumacc.cc:490:replace_alu$2389 [9] $auto$alumacc.cc:490:replace_alu$2389 [10] $auto$alumacc.cc:490:replace_alu$2389 [11] $auto$alumacc.cc:490:replace_alu$2389 [12] $auto$alumacc.cc:490:replace_alu$2389 [13] $auto$alumacc.cc:490:replace_alu$2389 [14] $auto$alumacc.cc:490:replace_alu$2389 [15] $auto$alumacc.cc:490:replace_alu$2389 [16] $auto$alumacc.cc:490:replace_alu$2389 [17] $auto$alumacc.cc:490:replace_alu$2389 [18] $auto$alumacc.cc:490:replace_alu$2389 [19] $auto$alumacc.cc:490:replace_alu$2389 [20] }
  Optimizing cells in module \module63.
  Optimizing cells in module \module98.
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$2428: { $auto$rtlil.cc:1832:Not$2427 $auto$rtlil.cc:1835:ReduceAnd$2421 }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2420: { $auto$alumacc.cc:490:replace_alu$2418 [0] $auto$alumacc.cc:490:replace_alu$2418 [1] $auto$alumacc.cc:490:replace_alu$2418 [2] $auto$alumacc.cc:490:replace_alu$2418 [3] $auto$alumacc.cc:490:replace_alu$2418 [4] $auto$alumacc.cc:490:replace_alu$2418 [5] $auto$alumacc.cc:490:replace_alu$2418 [6] $auto$alumacc.cc:490:replace_alu$2418 [7] $auto$alumacc.cc:490:replace_alu$2418 [8] $auto$alumacc.cc:490:replace_alu$2418 [9] $auto$alumacc.cc:490:replace_alu$2418 [10] $auto$alumacc.cc:490:replace_alu$2418 [11] $auto$alumacc.cc:490:replace_alu$2418 [12] $auto$alumacc.cc:490:replace_alu$2418 [13] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2438: { $auto$alumacc.cc:490:replace_alu$2436 [0] $auto$alumacc.cc:490:replace_alu$2436 [1] $auto$alumacc.cc:490:replace_alu$2436 [2] $auto$alumacc.cc:490:replace_alu$2436 [3] $auto$alumacc.cc:490:replace_alu$2436 [4] $auto$alumacc.cc:490:replace_alu$2436 [5] $auto$alumacc.cc:490:replace_alu$2436 [6] }
  Optimizing cells in module \module98.
  Optimizing cells in module \top.
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2477: { $auto$alumacc.cc:490:replace_alu$2475 [0] $auto$alumacc.cc:490:replace_alu$2475 [1] $auto$alumacc.cc:490:replace_alu$2475 [2] $auto$alumacc.cc:490:replace_alu$2475 [3] $auto$alumacc.cc:490:replace_alu$2475 [4] $auto$alumacc.cc:490:replace_alu$2475 [5] $auto$alumacc.cc:490:replace_alu$2475 [6] $auto$alumacc.cc:490:replace_alu$2475 [7] $auto$alumacc.cc:490:replace_alu$2475 [8] $auto$alumacc.cc:490:replace_alu$2475 [9] }
  Optimizing cells in module \top.
Performed a total of 22 changes.

2.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module133'.
Finding identical cells in module `\module172'.
Finding identical cells in module `\module5'.
Finding identical cells in module `\module63'.
Finding identical cells in module `\module98'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.13.6. Executing OPT_RMDFF pass (remove dff with constant values).

2.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module133..
Finding unused cells or wires in module \module172..
Finding unused cells or wires in module \module5..
Finding unused cells or wires in module \module63..
Finding unused cells or wires in module \module98..
Finding unused cells or wires in module \top..
Removed 11 unused cells and 61 unused wires.
<suppressed ~17 debug messages>

2.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module module133.
Optimizing module module172.
Optimizing module module5.
Optimizing module module63.
Optimizing module module98.
Optimizing module top.

2.13.9. Rerunning OPT passes. (Maybe there is more to do..)

2.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module133..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module172..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module63..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module98..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~134 debug messages>

2.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module133.
  Optimizing cells in module \module172.
  Optimizing cells in module \module5.
  Optimizing cells in module \module63.
  Optimizing cells in module \module98.
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module133'.
Finding identical cells in module `\module172'.
Finding identical cells in module `\module5'.
Finding identical cells in module `\module63'.
Finding identical cells in module `\module98'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.13.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module133..
Finding unused cells or wires in module \module172..
Finding unused cells or wires in module \module5..
Finding unused cells or wires in module \module63..
Finding unused cells or wires in module \module98..
Finding unused cells or wires in module \top..

2.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module module133.
Optimizing module module172.
Optimizing module module5.
Optimizing module module63.
Optimizing module module98.
Optimizing module top.

2.13.16. Finished OPT passes. (There is nothing left to do.)

2.14. Executing FSM pass (extract and optimize FSM).

2.14.1. Executing FSM_DETECT pass (finding FSMs in design).

2.14.2. Executing FSM_EXTRACT pass (extracting FSM from design).

2.14.3. Executing FSM_OPT pass (simple optimizations of FSMs).

2.14.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module133..
Finding unused cells or wires in module \module172..
Finding unused cells or wires in module \module5..
Finding unused cells or wires in module \module63..
Finding unused cells or wires in module \module98..
Finding unused cells or wires in module \top..

2.14.5. Executing FSM_OPT pass (simple optimizations of FSMs).

2.14.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

2.14.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

2.14.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

2.15. Executing OPT pass (performing simple optimizations).

2.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module module133.
Optimizing module module172.
Optimizing module module5.
Optimizing module module63.
Optimizing module module98.
Optimizing module top.

2.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module133'.
Finding identical cells in module `\module172'.
Finding identical cells in module `\module5'.
Finding identical cells in module `\module63'.
Finding identical cells in module `\module98'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.15.3. Executing OPT_RMDFF pass (remove dff with constant values).

2.15.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module133..
Finding unused cells or wires in module \module172..
Finding unused cells or wires in module \module5..
Finding unused cells or wires in module \module63..
Finding unused cells or wires in module \module98..
Finding unused cells or wires in module \top..

2.15.5. Finished fast OPT passes.

2.16. Executing MEMORY pass.

2.16.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

2.16.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module133..
Finding unused cells or wires in module \module172..
Finding unused cells or wires in module \module5..
Finding unused cells or wires in module \module63..
Finding unused cells or wires in module \module98..
Finding unused cells or wires in module \top..

2.16.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

2.16.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module133..
Finding unused cells or wires in module \module172..
Finding unused cells or wires in module \module5..
Finding unused cells or wires in module \module63..
Finding unused cells or wires in module \module98..
Finding unused cells or wires in module \top..

2.16.5. Executing MEMORY_COLLECT pass (generating $mem cells).

2.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module133..
Finding unused cells or wires in module \module172..
Finding unused cells or wires in module \module5..
Finding unused cells or wires in module \module63..
Finding unused cells or wires in module \module98..
Finding unused cells or wires in module \top..

2.18. Executing OPT pass (performing simple optimizations).

2.18.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module module133.
<suppressed ~13 debug messages>
Optimizing module module172.
<suppressed ~65 debug messages>
Optimizing module module5.
<suppressed ~139 debug messages>
Optimizing module module63.
<suppressed ~19 debug messages>
Optimizing module module98.
<suppressed ~48 debug messages>
Optimizing module top.
<suppressed ~33 debug messages>

2.18.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module133'.
Finding identical cells in module `\module172'.
Finding identical cells in module `\module5'.
<suppressed ~3 debug messages>
Finding identical cells in module `\module63'.
Finding identical cells in module `\module98'.
Finding identical cells in module `\top'.
Removed a total of 1 cells.

2.18.3. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $procdff$1987 ($dff) from module module172.
Replaced 1 DFF cells.

2.18.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module133..
Finding unused cells or wires in module \module172..
Finding unused cells or wires in module \module5..
Finding unused cells or wires in module \module63..
Finding unused cells or wires in module \module98..
Finding unused cells or wires in module \top..
Removed 5 unused cells and 87 unused wires.
<suppressed ~13 debug messages>

2.18.5. Rerunning OPT passes. (Removed registers in this run.)

2.18.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module module133.
Optimizing module module172.
<suppressed ~2 debug messages>
Optimizing module module5.
Optimizing module module63.
Optimizing module module98.
Optimizing module top.

2.18.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module133'.
Finding identical cells in module `\module172'.
Finding identical cells in module `\module5'.
Finding identical cells in module `\module63'.
Finding identical cells in module `\module98'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.18.8. Executing OPT_RMDFF pass (remove dff with constant values).

2.18.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module133..
Finding unused cells or wires in module \module172..
Finding unused cells or wires in module \module5..
Finding unused cells or wires in module \module63..
Finding unused cells or wires in module \module98..
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

2.18.10. Finished fast OPT passes.

2.19. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

2.20. Executing OPT pass (performing simple optimizations).

2.20.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module module133.
Optimizing module module172.
Optimizing module module5.
Optimizing module module63.
Optimizing module module98.
Optimizing module top.

2.20.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module133'.
Finding identical cells in module `\module172'.
Finding identical cells in module `\module5'.
Finding identical cells in module `\module63'.
Finding identical cells in module `\module98'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.20.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module133..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module172..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module63..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module98..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~133 debug messages>

2.20.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module133.
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1095$1055:
      Old ports: A={ 2'00 $auto$wreduce.cc:455:run$1993 [0] }, B=3'000, Y=$ternary$rtl.v:1095$1055_Y
      New ports: A=$auto$wreduce.cc:455:run$1993 [0], B=1'0, Y=$ternary$rtl.v:1095$1055_Y [0]
      New connections: $ternary$rtl.v:1095$1055_Y [2:1] = 2'00
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1096$1059:
      Old ports: A={ 11'00000000000 \wire137 }, B={ $auto$opt_expr.cc:189:group_cell_inputs$2501 [15] $auto$opt_expr.cc:189:group_cell_inputs$2501 [15] $auto$opt_expr.cc:189:group_cell_inputs$2501 [15] $auto$opt_expr.cc:189:group_cell_inputs$2501 [15] $auto$opt_expr.cc:189:group_cell_inputs$2501 [15] $auto$opt_expr.cc:189:group_cell_inputs$2501 $auto$opt_expr.cc:189:group_cell_inputs$2499 }, Y=$ternary$rtl.v:1096$1059_Y
      New ports: A={ 6'000000 \wire137 }, B={ $auto$opt_expr.cc:189:group_cell_inputs$2501 $auto$opt_expr.cc:189:group_cell_inputs$2499 }, Y=$ternary$rtl.v:1096$1059_Y [16:0]
      New connections: $ternary$rtl.v:1096$1059_Y [21:17] = { $ternary$rtl.v:1096$1059_Y [16] $ternary$rtl.v:1096$1059_Y [16] $ternary$rtl.v:1096$1059_Y [16] $ternary$rtl.v:1096$1059_Y [16] $ternary$rtl.v:1096$1059_Y [16] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1102$1076:
      Old ports: A={ 5'11111 $auto$opt_expr.cc:189:group_cell_inputs$2503 }, B={ 5'00000 $auto$wreduce.cc:455:run$1997 [0] }, Y=\wire144
      New ports: A={ 1'1 $auto$opt_expr.cc:189:group_cell_inputs$2503 }, B={ 1'0 $auto$wreduce.cc:455:run$1997 [0] }, Y=\wire144 [1:0]
      New connections: \wire144 [5:2] = { \wire144 [1] \wire144 [1] \wire144 [1] \wire144 [1] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1108$1092:
      Old ports: A={ 11'00000000000 \wire135 [10:8] }, B={ 7'0000000 $auto$wreduce.cc:455:run$1995 [6:0] }, Y=$ternary$rtl.v:1108$1092_Y
      New ports: A={ 4'0000 \wire135 [10:8] }, B=$auto$wreduce.cc:455:run$1995 [6:0], Y=$ternary$rtl.v:1108$1092_Y [6:0]
      New connections: $ternary$rtl.v:1108$1092_Y [13:7] = 7'0000000
  Optimizing cells in module \module133.
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1108$1095:
      Old ports: A={ 13'0000000000000 $auto$wreduce.cc:455:run$1996 [0] }, B=$ternary$rtl.v:1108$1092_Y, Y=$ternary$rtl.v:1108$1095_Y
      New ports: A={ 6'000000 $auto$wreduce.cc:455:run$1996 [0] }, B=$ternary$rtl.v:1108$1092_Y [6:0], Y=$ternary$rtl.v:1108$1095_Y [6:0]
      New connections: $ternary$rtl.v:1108$1095_Y [13:7] = 7'0000000
  Optimizing cells in module \module133.
  Optimizing cells in module \module172.
    Consolidated identical input bits for $mux cell $ternary$rtl.v:265$98:
      Old ports: A={ 24'111110111011000000000000 \wire177 [0] }, B=25'0000000000000000010100001, Y=$ternary$rtl.v:265$98_Y
      New ports: A={ 2'10 \wire177 [0] }, B=3'011, Y={ $ternary$rtl.v:265$98_Y [13] $ternary$rtl.v:265$98_Y [5] $ternary$rtl.v:265$98_Y [0] }
      New connections: { $ternary$rtl.v:265$98_Y [24:14] $ternary$rtl.v:265$98_Y [12:6] $ternary$rtl.v:265$98_Y [4:1] } = { $ternary$rtl.v:265$98_Y [13] $ternary$rtl.v:265$98_Y [13] $ternary$rtl.v:265$98_Y [13] $ternary$rtl.v:265$98_Y [13] $ternary$rtl.v:265$98_Y [13] 1'0 $ternary$rtl.v:265$98_Y [13] $ternary$rtl.v:265$98_Y [13] $ternary$rtl.v:265$98_Y [13] 1'0 $ternary$rtl.v:265$98_Y [13] 5'00000 $ternary$rtl.v:265$98_Y [5] 5'00000 }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:349$200:
      Old ports: A={ 1'0 \wire182 }, B={ 14'00000000000000 $ternary$rtl.v:348$194_Y }, Y=\wire204
      New ports: A=\wire182, B={ 13'0000000000000 $ternary$rtl.v:348$194_Y }, Y=\wire204 [13:0]
      New connections: \wire204 [14] = 1'0
    Consolidated identical input bits for $mux cell $ternary$rtl.v:457$316:
      Old ports: A=17'00000000000000000, B={ 9'000000000 \reg186 [7:0] }, Y=$ternary$rtl.v:457$316_Y
      New ports: A=8'00000000, B=\reg186 [7:0], Y=$ternary$rtl.v:457$316_Y [7:0]
      New connections: $ternary$rtl.v:457$316_Y [16:8] = 9'000000000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:462$330:
      Old ports: A={ 34'0000000000000000000000000000000000 $eq$rtl.v:462$329_Y }, B={ 6'000000 $auto$wreduce.cc:455:run$2016 [7:0] 21'000000000000000000000 }, Y=$ternary$rtl.v:462$330_Y
      New ports: A={ 8'00000000 $eq$rtl.v:462$329_Y }, B={ $auto$wreduce.cc:455:run$2016 [7:0] 1'0 }, Y={ $ternary$rtl.v:462$330_Y [28:21] $ternary$rtl.v:462$330_Y [0] }
      New connections: { $ternary$rtl.v:462$330_Y [34:29] $ternary$rtl.v:462$330_Y [20:1] } = 26'00000000000000000000000000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:464$335:
      Old ports: A=7'0101101, B={ 2'00 $auto$wreduce.cc:455:run$2017 [4:0] }, Y=$0\reg227[6:0]
      New ports: A=6'101101, B={ 1'0 $auto$wreduce.cc:455:run$2017 [4:0] }, Y=$0\reg227[6:0] [5:0]
      New connections: $0\reg227[6:0] [6] = 1'0
    Consolidated identical input bits for $mux cell $ternary$rtl.v:553$440:
      Old ports: A=9'000000000, B={ \reg219 [2] \reg219 [2] \reg219 [2] \reg219 [2] \reg219 [2] \reg219 [2] \reg219 }, Y=$ternary$rtl.v:553$440_Y
      New ports: A=3'000, B=\reg219, Y=$ternary$rtl.v:553$440_Y [2:0]
      New connections: $ternary$rtl.v:553$440_Y [8:3] = { $ternary$rtl.v:553$440_Y [2] $ternary$rtl.v:553$440_Y [2] $ternary$rtl.v:553$440_Y [2] $ternary$rtl.v:553$440_Y [2] $ternary$rtl.v:553$440_Y [2] $ternary$rtl.v:553$440_Y [2] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:554$444:
      Old ports: A={ 5'00000 \reg229 [0] }, B=6'111101, Y=$ternary$rtl.v:554$444_Y
      New ports: A={ 1'0 \reg229 [0] }, B=2'11, Y={ $ternary$rtl.v:554$444_Y [2] $ternary$rtl.v:554$444_Y [0] }
      New connections: { $ternary$rtl.v:554$444_Y [5:3] $ternary$rtl.v:554$444_Y [1] } = { $ternary$rtl.v:554$444_Y [2] $ternary$rtl.v:554$444_Y [2] $ternary$rtl.v:554$444_Y [2] 1'0 }
  Optimizing cells in module \module172.
    New input vector for $reduce_or cell $reduce_or$rtl.v:553$441: { $ternary$rtl.v:553$440_Y [0] $ternary$rtl.v:553$440_Y [1] $ternary$rtl.v:553$440_Y [2] }
  Optimizing cells in module \module172.
  Optimizing cells in module \module5.
    New input vector for $reduce_and cell $reduce_and$rtl.v:945$855: { \reg23 [9] \reg23 [10] \reg23 [11] \reg23 [12] \reg23 [13] \reg23 [14] \reg23 [15] \reg23 [16] \reg23 [17] \reg23 [18] \reg23 [19] \reg23 [20] $auto$opt_expr.cc:189:group_cell_inputs$2576 [0] $auto$opt_expr.cc:189:group_cell_inputs$2576 [1] $auto$opt_expr.cc:189:group_cell_inputs$2576 [2] $auto$opt_expr.cc:189:group_cell_inputs$2576 [3] $auto$opt_expr.cc:189:group_cell_inputs$2576 [4] $auto$opt_expr.cc:189:group_cell_inputs$2576 [5] $auto$opt_expr.cc:189:group_cell_inputs$2576 [6] $auto$opt_expr.cc:189:group_cell_inputs$2576 [7] $auto$opt_expr.cc:189:group_cell_inputs$2576 [8] }
    Consolidated identical input bits for $mux cell $procmux$1385:
      Old ports: A={ 5'00000 $logic_and$rtl.v:893$778_Y [0] }, B=6'000000, Y=$auto$wreduce.cc:455:run$2046 [5:0]
      New ports: A=$logic_and$rtl.v:893$778_Y [0], B=1'0, Y=$auto$wreduce.cc:455:run$2046 [0]
      New connections: $auto$wreduce.cc:455:run$2046 [5:1] = 5'00000
    Consolidated identical input bits for $mux cell $procmux$1390:
      Old ports: A={ 11'00000000000 \reg13 [8:1] }, B={ \reg46 [4] \reg46 [4] \reg46 [4] \reg46 [4] \reg46 [4] \reg46 [4] \reg46 [4] \reg46 [4] \reg46 [4] \reg46 [4] \reg46 [4] \reg46 [4] \reg46 [4] \reg46 [4] \reg46 [4] \reg46 [4:1] }, Y=$procmux$1390_Y
      New ports: A={ 1'0 \reg13 [8:1] }, B={ \reg46 [4] \reg46 [4] \reg46 [4] \reg46 [4] \reg46 [4] \reg46 [4:1] }, Y=$procmux$1390_Y [8:0]
      New connections: $procmux$1390_Y [18:9] = { $procmux$1390_Y [8] $procmux$1390_Y [8] $procmux$1390_Y [8] $procmux$1390_Y [8] $procmux$1390_Y [8] $procmux$1390_Y [8] $procmux$1390_Y [8] $procmux$1390_Y [8] $procmux$1390_Y [8] $procmux$1390_Y [8] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1002$919:
      Old ports: A=8'10110000, B={ 3'000 \reg39 }, Y=$ternary$rtl.v:1002$919_Y [7:0]
      New ports: A=6'110000, B={ 1'0 \reg39 }, Y=$ternary$rtl.v:1002$919_Y [5:0]
      New connections: $ternary$rtl.v:1002$919_Y [7:6] = { $ternary$rtl.v:1002$919_Y [5] 1'0 }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1004$923:
      Old ports: A={ \reg50 [11] \reg50 [11] \reg50 [11] \reg50 [11] \reg50 }, B=16'0000000000000000, Y=$ternary$rtl.v:1004$923_Y
      New ports: A=\reg50, B=12'000000000000, Y=$ternary$rtl.v:1004$923_Y [11:0]
      New connections: $ternary$rtl.v:1004$923_Y [15:12] = { $ternary$rtl.v:1004$923_Y [11] $ternary$rtl.v:1004$923_Y [11] $ternary$rtl.v:1004$923_Y [11] $ternary$rtl.v:1004$923_Y [11] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1005$925:
      Old ports: A={ 5'00000 \reg91 }, B=8'10110010, Y=$ternary$rtl.v:1005$925_Y [7:0]
      New ports: A={ 1'0 \reg91 }, B=4'1010, Y={ $ternary$rtl.v:1005$925_Y [4] $ternary$rtl.v:1005$925_Y [2:0] }
      New connections: { $ternary$rtl.v:1005$925_Y [7:5] $ternary$rtl.v:1005$925_Y [3] } = { $ternary$rtl.v:1005$925_Y [4] 1'0 $ternary$rtl.v:1005$925_Y [4] 1'0 }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:805$620:
      Old ports: A={ 5'11111 $auto$opt_expr.cc:189:group_cell_inputs$2534 $auto$opt_expr.cc:189:group_cell_inputs$2532 }, B={ 5'00000 \reg19 [6:1] }, Y=$ternary$rtl.v:805$620_Y
      New ports: A={ 1'1 $auto$opt_expr.cc:189:group_cell_inputs$2534 $auto$opt_expr.cc:189:group_cell_inputs$2532 }, B={ 1'0 \reg19 [6:1] }, Y=$ternary$rtl.v:805$620_Y [6:0]
      New connections: $ternary$rtl.v:805$620_Y [10:7] = { $ternary$rtl.v:805$620_Y [6] $ternary$rtl.v:805$620_Y [6] $ternary$rtl.v:805$620_Y [6] $ternary$rtl.v:805$620_Y [6] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:809$627:
      Old ports: A={ 3'000 \wire9 }, B=12'111001000000, Y=$auto$wreduce.cc:455:run$2053 [11:0]
      New ports: A={ 1'0 \wire9 }, B=10'1001000000, Y=$auto$wreduce.cc:455:run$2053 [9:0]
      New connections: $auto$wreduce.cc:455:run$2053 [11:10] = { $auto$wreduce.cc:455:run$2053 [9] $auto$wreduce.cc:455:run$2053 [9] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:810$632:
      Old ports: A={ \reg33 [1] \reg33 [1] \reg33 [1] \reg33 [1] \reg33 [1] \reg33 [1] \reg33 [1] \reg33 [1] \reg33 [1] \reg33 [1] \reg33 [1] \reg33 [1:0] }, B={ 12'000000000000 $auto$rtlil.cc:1832:Not$2313 }, Y=$auto$wreduce.cc:455:run$2054 [12:0]
      New ports: A=\reg33 [1:0], B={ 1'0 $auto$rtlil.cc:1832:Not$2313 }, Y=$auto$wreduce.cc:455:run$2054 [1:0]
      New connections: $auto$wreduce.cc:455:run$2054 [12:2] = { $auto$wreduce.cc:455:run$2054 [1] $auto$wreduce.cc:455:run$2054 [1] $auto$wreduce.cc:455:run$2054 [1] $auto$wreduce.cc:455:run$2054 [1] $auto$wreduce.cc:455:run$2054 [1] $auto$wreduce.cc:455:run$2054 [1] $auto$wreduce.cc:455:run$2054 [1] $auto$wreduce.cc:455:run$2054 [1] $auto$wreduce.cc:455:run$2054 [1] $auto$wreduce.cc:455:run$2054 [1] $auto$wreduce.cc:455:run$2054 [1] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:819$658:
      Old ports: A={ $logic_or$rtl.v:816$656_Y 4'0000 \reg13 }, B={ 13'0000000000000 \wire6 }, Y=$ternary$rtl.v:819$658_Y
      New ports: A={ $logic_or$rtl.v:816$656_Y \reg13 }, B={ 9'000000000 \wire6 }, Y={ $ternary$rtl.v:819$658_Y [21] $ternary$rtl.v:819$658_Y [16:0] }
      New connections: $ternary$rtl.v:819$658_Y [20:17] = 4'0000
    Consolidated identical input bits for $mux cell $ternary$rtl.v:873$734:
      Old ports: A={ \reg33 [1] \reg33 [1] \reg33 [1] \reg33 [1] \reg33 [1] \reg33 [1] \reg33 [1] \reg33 [1] \reg33 [1] \reg33 [1] \reg33 [1] \reg33 [1] \reg33 [1] \reg33 [1] \reg33 [1] \reg33 [1] \reg33 [1] \reg33 [1:0] }, B={ 2'00 \reg13 }, Y=$ternary$rtl.v:873$734_Y
      New ports: A={ \reg33 [1] \reg33 [1] \reg33 [1] \reg33 [1] \reg33 [1] \reg33 [1] \reg33 [1] \reg33 [1] \reg33 [1] \reg33 [1] \reg33 [1] \reg33 [1] \reg33 [1] \reg33 [1] \reg33 [1] \reg33 [1] \reg33 [1:0] }, B={ 1'0 \reg13 }, Y=$ternary$rtl.v:873$734_Y [17:0]
      New connections: $ternary$rtl.v:873$734_Y [18] = $ternary$rtl.v:873$734_Y [17]
    Consolidated identical input bits for $mux cell $ternary$rtl.v:903$790:
      Old ports: A={ 18'000000000000000000 $reduce_and$rtl.v:903$788_Y [0] }, B={ \reg33 [1] \reg33 [1] \reg33 [1] \reg33 [1] \reg33 [1] \reg33 [1] \reg33 [1] \reg33 [1] \reg33 [1] \reg33 [1] \reg33 [1] \reg33 [1] \reg33 [1] \reg33 [1] \reg33 [1] \reg33 [1] \reg33 [1] \reg33 [1:0] }, Y=$ternary$rtl.v:903$790_Y
      New ports: A={ 1'0 $reduce_and$rtl.v:903$788_Y [0] }, B=\reg33 [1:0], Y=$ternary$rtl.v:903$790_Y [1:0]
      New connections: $ternary$rtl.v:903$790_Y [18:2] = { $ternary$rtl.v:903$790_Y [1] $ternary$rtl.v:903$790_Y [1] $ternary$rtl.v:903$790_Y [1] $ternary$rtl.v:903$790_Y [1] $ternary$rtl.v:903$790_Y [1] $ternary$rtl.v:903$790_Y [1] $ternary$rtl.v:903$790_Y [1] $ternary$rtl.v:903$790_Y [1] $ternary$rtl.v:903$790_Y [1] $ternary$rtl.v:903$790_Y [1] $ternary$rtl.v:903$790_Y [1] $ternary$rtl.v:903$790_Y [1] $ternary$rtl.v:903$790_Y [1] $ternary$rtl.v:903$790_Y [1] $ternary$rtl.v:903$790_Y [1] $ternary$rtl.v:903$790_Y [1] $ternary$rtl.v:903$790_Y [1] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:919$811:
      Old ports: A=8'10100011, B={ 7'0000000 $reduce_xnor$rtl.v:919$809_Y [0] }, Y=$ternary$rtl.v:919$811_Y
      New ports: A=2'11, B={ 1'0 $reduce_xnor$rtl.v:919$809_Y [0] }, Y=$ternary$rtl.v:919$811_Y [1:0]
      New connections: $ternary$rtl.v:919$811_Y [7:2] = { $ternary$rtl.v:919$811_Y [1] 1'0 $ternary$rtl.v:919$811_Y [1] 3'000 }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:933$838:
      Old ports: A={ 9'000000000 \reg45 [9:0] }, B={ $logic_not$rtl.v:932$837_Y $logic_not$rtl.v:932$837_Y $logic_not$rtl.v:932$837_Y $logic_not$rtl.v:932$837_Y $logic_not$rtl.v:932$837_Y $logic_not$rtl.v:932$837_Y $logic_not$rtl.v:932$837_Y $logic_not$rtl.v:932$837_Y $logic_not$rtl.v:932$837_Y $logic_not$rtl.v:932$837_Y $logic_not$rtl.v:932$837_Y $logic_not$rtl.v:932$837_Y $logic_not$rtl.v:932$837_Y $logic_not$rtl.v:932$837_Y $logic_not$rtl.v:932$837_Y $logic_not$rtl.v:932$837_Y $logic_not$rtl.v:932$837_Y $logic_not$rtl.v:932$837_Y $logic_not$rtl.v:932$837_Y }, Y=$0\reg54[18:0]
      New ports: A={ 1'0 \reg45 [9:0] }, B={ $logic_not$rtl.v:932$837_Y $logic_not$rtl.v:932$837_Y $logic_not$rtl.v:932$837_Y $logic_not$rtl.v:932$837_Y $logic_not$rtl.v:932$837_Y $logic_not$rtl.v:932$837_Y $logic_not$rtl.v:932$837_Y $logic_not$rtl.v:932$837_Y $logic_not$rtl.v:932$837_Y $logic_not$rtl.v:932$837_Y $logic_not$rtl.v:932$837_Y }, Y=$0\reg54[18:0] [10:0]
      New connections: $0\reg54[18:0] [18:11] = { $0\reg54[18:0] [10] $0\reg54[18:0] [10] $0\reg54[18:0] [10] $0\reg54[18:0] [10] $0\reg54[18:0] [10] $0\reg54[18:0] [10] $0\reg54[18:0] [10] $0\reg54[18:0] [10] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:947$862:
      Old ports: A={ 1'0 $xor$rtl.v:947$861_Y [14:0] }, B=16'0000000000000000, Y=$ternary$rtl.v:947$862_Y [15:0]
      New ports: A=$xor$rtl.v:947$861_Y [14:0], B=15'000000000000000, Y=$ternary$rtl.v:947$862_Y [14:0]
      New connections: $ternary$rtl.v:947$862_Y [15] = 1'0
  Optimizing cells in module \module5.
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1005$928:
      Old ports: A=8'10011101, B=$ternary$rtl.v:1005$925_Y [7:0], Y=$ternary$rtl.v:1005$928_Y [7:0]
      New ports: A=6'011101, B={ $ternary$rtl.v:1005$925_Y [4] $ternary$rtl.v:1005$925_Y [4] 1'0 $ternary$rtl.v:1005$925_Y [2:0] }, Y=$ternary$rtl.v:1005$928_Y [5:0]
      New connections: $ternary$rtl.v:1005$928_Y [7:6] = { $ternary$rtl.v:1005$928_Y [4] 1'0 }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:810$634:
      Old ports: A=$auto$wreduce.cc:455:run$2054 [12:0], B={ 1'0 $auto$wreduce.cc:455:run$2053 [11:0] }, Y=$auto$wreduce.cc:455:run$2044 [12:0]
      New ports: A={ $auto$wreduce.cc:455:run$2054 [1] $auto$wreduce.cc:455:run$2054 [1] $auto$wreduce.cc:455:run$2054 [1] $auto$wreduce.cc:455:run$2054 [1] $auto$wreduce.cc:455:run$2054 [1] $auto$wreduce.cc:455:run$2054 [1] $auto$wreduce.cc:455:run$2054 [1] $auto$wreduce.cc:455:run$2054 [1] $auto$wreduce.cc:455:run$2054 [1] $auto$wreduce.cc:455:run$2054 [1:0] }, B={ 1'0 $auto$wreduce.cc:455:run$2053 [9:0] }, Y={ $auto$wreduce.cc:455:run$2044 [12] $auto$wreduce.cc:455:run$2044 [9:0] }
      New connections: $auto$wreduce.cc:455:run$2044 [11:10] = { $auto$wreduce.cc:455:run$2044 [9] $auto$wreduce.cc:455:run$2044 [9] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:873$740:
      Old ports: A=19'0000000000000000000, B=$ternary$rtl.v:873$734_Y, Y=$ternary$rtl.v:873$740_Y
      New ports: A=18'000000000000000000, B=$ternary$rtl.v:873$734_Y [17:0], Y=$ternary$rtl.v:873$740_Y [17:0]
      New connections: $ternary$rtl.v:873$740_Y [18] = $ternary$rtl.v:873$740_Y [17]
  Optimizing cells in module \module5.
    Consolidated identical input bits for $mux cell $ternary$rtl.v:810$637:
      Old ports: A=13'0000000000000, B=$auto$wreduce.cc:455:run$2044 [12:0], Y={ $auto$wreduce.cc:455:run$2025 [12:7] $0\reg32[12:0] }
      New ports: A=11'00000000000, B={ $auto$wreduce.cc:455:run$2044 [12] $auto$wreduce.cc:455:run$2044 [9:0] }, Y={ $auto$wreduce.cc:455:run$2025 [12] $auto$wreduce.cc:455:run$2025 [9:7] $0\reg32[12:0] }
      New connections: $auto$wreduce.cc:455:run$2025 [11:10] = { $auto$wreduce.cc:455:run$2025 [9] $auto$wreduce.cc:455:run$2025 [9] }
  Optimizing cells in module \module5.
  Optimizing cells in module \module63.
    New input vector for $reduce_and cell $reduce_and$rtl.v:1310$1302: { \wire65 [4] $auto$opt_expr.cc:189:group_cell_inputs$2600 [0] $auto$opt_expr.cc:189:group_cell_inputs$2600 [1] $auto$opt_expr.cc:189:group_cell_inputs$2600 [2] $auto$opt_expr.cc:189:group_cell_inputs$2600 [3] $auto$opt_expr.cc:189:group_cell_inputs$2600 [4] $auto$opt_expr.cc:189:group_cell_inputs$2600 [5] $auto$opt_expr.cc:189:group_cell_inputs$2600 [6] $auto$opt_expr.cc:189:group_cell_inputs$2600 [7] $auto$opt_expr.cc:189:group_cell_inputs$2600 [8] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1303$1287:
      Old ports: A={ \wire65 [4] \wire65 [4] \wire65 [4] \wire65 $add$rtl.v:1303$1284_Y }, B={ 18'000000000000000000 \wire68 [7] }, Y=\wire71
      New ports: A={ \wire65 $add$rtl.v:1303$1284_Y }, B={ 15'000000000000000 \wire68 [7] }, Y=\wire71 [15:0]
      New connections: \wire71 [18:16] = { \wire71 [15] \wire71 [15] \wire71 [15] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1314$1310:
      Old ports: A={ $auto$rtlil.cc:1836:ReduceOr$2402 10'0000000000 }, B={ 9'000000101 \y [107:106] }, Y=$ternary$rtl.v:1314$1310_Y
      New ports: A={ $auto$rtlil.cc:1836:ReduceOr$2402 3'000 }, B={ 2'01 \y [107:106] }, Y={ $ternary$rtl.v:1314$1310_Y [10] $ternary$rtl.v:1314$1310_Y [2:0] }
      New connections: $ternary$rtl.v:1314$1310_Y [9:3] = { 5'00000 $ternary$rtl.v:1314$1310_Y [2] 1'0 }
  Optimizing cells in module \module63.
  Optimizing cells in module \module98.
    Consolidated identical input bits for $mux cell $procmux$1339:
      Old ports: A={ 8'11111111 $auto$opt_expr.cc:189:group_cell_inputs$2621 $auto$opt_expr.cc:189:group_cell_inputs$2619 }, B={ \wire101 [12] \wire101 [12] \wire101 [12] \wire101 [12] \wire101 }, Y=$0\reg107[16:0]
      New ports: A={ 4'1111 $auto$opt_expr.cc:189:group_cell_inputs$2621 $auto$opt_expr.cc:189:group_cell_inputs$2619 }, B=\wire101, Y=$0\reg107[16:0] [12:0]
      New connections: $0\reg107[16:0] [16:13] = { $0\reg107[16:0] [12] $0\reg107[16:0] [12] $0\reg107[16:0] [12] $0\reg107[16:0] [12] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1221$1195:
      Old ports: A=8'10100110, B={ 5'00000 \wire101 [10] \wire101 [10:9] }, Y=$ternary$rtl.v:1221$1195_Y
      New ports: A=3'110, B={ 1'0 \wire101 [10:9] }, Y={ $ternary$rtl.v:1221$1195_Y [5] $ternary$rtl.v:1221$1195_Y [1:0] }
      New connections: { $ternary$rtl.v:1221$1195_Y [7:6] $ternary$rtl.v:1221$1195_Y [4:2] } = { $ternary$rtl.v:1221$1195_Y [5] 3'000 $ternary$rtl.v:1221$1195_Y [1] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:1258$1273:
      Old ports: A={ $logic_not$rtl.v:1257$1271_Y 1'0 \wire121 [1:0] }, B={ 3'000 $auto$rtlil.cc:1836:ReduceOr$2429 }, Y=\wire124 [3:0]
      New ports: A={ $logic_not$rtl.v:1257$1271_Y \wire121 [1:0] }, B={ 2'00 $auto$rtlil.cc:1836:ReduceOr$2429 }, Y={ \wire124 [3] \wire124 [1:0] }
      New connections: \wire124 [2] = 1'0
  Optimizing cells in module \module98.
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $ternary$rtl.v:70$15:
      Old ports: A=2'00, B=2'10, Y=$auto$wreduce.cc:455:run$2108 [1:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$2108 [1]
      New connections: $auto$wreduce.cc:455:run$2108 [0] = 1'0
    Consolidated identical input bits for $mux cell $ternary$rtl.v:74$31:
      Old ports: A=8'10110011, B=8'01000100, Y=$ternary$rtl.v:74$31_Y
      New ports: A=2'01, B=2'10, Y={ $ternary$rtl.v:74$31_Y [2] $ternary$rtl.v:74$31_Y [0] }
      New connections: { $ternary$rtl.v:74$31_Y [7:3] $ternary$rtl.v:74$31_Y [1] } = { $ternary$rtl.v:74$31_Y [0] $ternary$rtl.v:74$31_Y [2] $ternary$rtl.v:74$31_Y [0] $ternary$rtl.v:74$31_Y [0] 1'0 $ternary$rtl.v:74$31_Y [0] }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:78$39:
      Old ports: A=8'10111011, B={ 7'0000000 $reduce_or$rtl.v:78$36_Y }, Y=$auto$wreduce.cc:455:run$2112 [7:0]
      New ports: A=2'11, B={ 1'0 $reduce_or$rtl.v:78$36_Y }, Y=$auto$wreduce.cc:455:run$2112 [1:0]
      New connections: $auto$wreduce.cc:455:run$2112 [7:2] = { $auto$wreduce.cc:455:run$2112 [1] 1'0 $auto$wreduce.cc:455:run$2112 [1] $auto$wreduce.cc:455:run$2112 [1] $auto$wreduce.cc:455:run$2112 [1] 1'0 }
    Consolidated identical input bits for $mux cell $ternary$rtl.v:86$56:
      Old ports: A={ 2'00 \wire159 [8:3] }, B=8'10011111, Y=$ternary$rtl.v:86$56_Y
      New ports: A={ 1'0 \wire159 [8:3] }, B=7'1011111, Y={ $ternary$rtl.v:86$56_Y [7] $ternary$rtl.v:86$56_Y [5:0] }
      New connections: $ternary$rtl.v:86$56_Y [6] = 1'0
  Optimizing cells in module \top.
Performed a total of 42 changes.

2.20.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module133'.
Finding identical cells in module `\module172'.
Finding identical cells in module `\module5'.
Finding identical cells in module `\module63'.
Finding identical cells in module `\module98'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.20.6. Executing OPT_RMDFF pass (remove dff with constant values).

2.20.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module133..
Finding unused cells or wires in module \module172..
Finding unused cells or wires in module \module5..
Finding unused cells or wires in module \module63..
Finding unused cells or wires in module \module98..
Finding unused cells or wires in module \top..

2.20.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module module133.
<suppressed ~1 debug messages>
Optimizing module module172.
<suppressed ~12 debug messages>
Optimizing module module5.
<suppressed ~1 debug messages>
Optimizing module module63.
<suppressed ~1 debug messages>
Optimizing module module98.
<suppressed ~1 debug messages>
Optimizing module top.
<suppressed ~1 debug messages>

2.20.9. Rerunning OPT passes. (Maybe there is more to do..)

2.20.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \module133..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module172..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module63..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \module98..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~132 debug messages>

2.20.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \module133.
  Optimizing cells in module \module172.
  Optimizing cells in module \module5.
  Optimizing cells in module \module63.
  Optimizing cells in module \module98.
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.20.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module133'.
Finding identical cells in module `\module172'.
Finding identical cells in module `\module5'.
Finding identical cells in module `\module63'.
Finding identical cells in module `\module98'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.20.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.20.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module133..
Finding unused cells or wires in module \module172..
Finding unused cells or wires in module \module5..
Finding unused cells or wires in module \module63..
Finding unused cells or wires in module \module98..
Finding unused cells or wires in module \top..
Removed 0 unused cells and 5 unused wires.
<suppressed ~3 debug messages>

2.20.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module module133.
Optimizing module module172.
Optimizing module module5.
Optimizing module module63.
Optimizing module module98.
Optimizing module top.

2.20.16. Finished OPT passes. (There is nothing left to do.)

2.21. Executing TECHMAP pass (map to technology primitives).

2.21.1. Executing Verilog-2005 frontend: <techmap.v>
Parsing Verilog input from `<techmap.v>' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

2.21.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $xnor.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_or.
Using template $paramod$constmap:ec2e54bd98c7f12bf670ffca7357cf8cc3782da4$paramod$1155e1a7305c0055d5944d1c01e7d7bf37df17a3\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $reduce_xnor.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod$constmap:3c730603a8b494dade48f68c326e4348f5bc6eae$paramod$7d05d1a5bb769a472cc7efbe979c60a2ffed4856\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:5752f920eacfd99d2d6170a6f584a4ddadff1f44$paramod$594ca3ba3db102fc1f8130ee3ef38275f60794fa\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:6ae8f48287b6c804568b54bd03a6642a3d50a1b6$paramod$38f885d344fd2551d0aed640137ef3d1106a26b5\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using extmapper simplemap for cells of type $reduce_xor.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=19\B_WIDTH=1\Y_WIDTH=19 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=19\Y_WIDTH=19 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=17\B_WIDTH=21\Y_WIDTH=21 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=7\B_WIDTH=10\Y_WIDTH=10 for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=8 for cells of type $lcu.
Using extmapper simplemap for cells of type $and.
Using template $paramod\_90_lcu\WIDTH=21 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=19 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=10 for cells of type $lcu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=11\Y_WIDTH=11 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=21\B_WIDTH=19\Y_WIDTH=21 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=19\B_WIDTH=23\Y_WIDTH=23 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=9\Y_WIDTH=9 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=6\B_WIDTH=1\Y_WIDTH=6 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=1\Y_WIDTH=1 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=9\B_WIDTH=1\Y_WIDTH=15 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=14\B_WIDTH=19\Y_WIDTH=19 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=22\Y_WIDTH=22 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=7\Y_WIDTH=7 for cells of type $alu.
Using template $paramod$constmap:50b0a89e67c8840a389efe1405069308f210ffc4$paramod$c35afca5b7c43d3f8ce949f87415d2054423b146\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$constmap:053ae545cd6018bfffccad2ff62baccd36dc8921$paramod$65cd197a9a2909b6b9a923a08d9cd6a4d73ccd26\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using extmapper simplemap for cells of type $logic_or.
Using template $paramod$constmap:216adac0ff90268b237a4f66fefd2a90c7690993$paramod$cb0ea1851ff14b6a7407125c1831739bbf77f2ee\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using extmapper maccmap for cells of type $macc.
  add 8'10110101 * \reg31 [0] (8x1 bits, unsigned)
  add \wire6 * 8'10110001 (9x8 bits, unsigned)
Using template $paramod$constmap:5fbecaf45e900532f77069ef75b9913560387152$paramod$f8628903b17e1c983d5262ba98f83e1c62ab93e0\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using template $paramod$constmap:21b97f18a7a8fb07933d5d4e99acd67f5d4533c6$paramod$9bba62a7e53c0a8b4eef06704bdb6ff95c20ca0c\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:d9716dfef83c844aca263c1ac1881af49645511f$paramod$2a90225c587bf1857a4bb84a715dcdde3d952e81\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:6626c8eb9d61d6934cc87c198c53aa935452e69d$paramod$3f0e5652e4d750a2d90bd66f7436c164af65d00e\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:8a2a8430d2aa09d0d7ebff06f32207770da580fc$paramod$8c729d2db4b41a5799b94dbef780e496f87371ac\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:247264eb1bebdc0cf86039e547107353f844bc41$paramod$5eb769813b628ce84e73c15c81d538a0750ec49c\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=9\B_WIDTH=9\Y_WIDTH=9 for cells of type $alu.
Using template $paramod$constmap:9195dcb50bc8125726b1c5e8e7ec5af53e560b43$paramod$3dd343356b0fb4c5ebd88b5c30a6d0247b534775\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using template $paramod$constmap:178aab15d582a01c73c7675558f35b42835f3e83$paramod$c11a52ff08e1e65565f4cb227ff17c8f492c4920\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
  add { \reg32 [12:1] $auto$opt_expr.cc:189:group_cell_inputs$2580 } * 8'10110001 (13x8 bits, unsigned)
Using template $paramod\_90_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=3\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=6\Y_WIDTH=14 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=1\Y_WIDTH=11 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=8\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=13\Y_WIDTH=13 for cells of type $alu.
Using extmapper simplemap for cells of type $dff.
Using template $paramod\_90_lcu\WIDTH=11 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=23 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=9 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=6 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=1 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=15 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=22 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=7 for cells of type $lcu.
Using template $paramod\_90_fa\WIDTH=9 for cells of type $fa.
Using template $paramod\_90_fa\WIDTH=12 for cells of type $fa.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=12\B_WIDTH=12\Y_WIDTH=12 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=14 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=17 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=13 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=12 for cells of type $lcu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=12\Y_WIDTH=12 for cells of type $alu.
Using template $paramod$constmap:90b7001eebaf3147c774a1d24ed8228f0e306b2a$paramod$372169c28885a7665ca5ad3ea4640faa126acc44\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:c52b078010fc673dfeab41be921eb1d1f9ad7c3a$paramod$61eb6ee4b0c42d43967a2f873a784ef737768f10\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshl.
Using template $paramod$constmap:095c6daaae54377e7f041fa960d05a1078ea4ef2$paramod$42f504b202e19ddb9b300581b925f30f0ea25975\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:d78fcb3c0082931a8aac22b1a5f063a539c4f296$paramod$db28abfb269648972fe079733da1414c4ef82421\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=5\Y_WIDTH=5 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=25\Y_WIDTH=25 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=1\B_WIDTH=9\Y_WIDTH=10 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=6\Y_WIDTH=6 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=14\Y_WIDTH=14 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=5 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=25 for cells of type $lcu.
Using template $paramod\_90_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=6\B_WIDTH=21\Y_WIDTH=21 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=11\Y_WIDTH=11 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=9\Y_WIDTH=19 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=6\B_WIDTH=13\Y_WIDTH=13 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=14\B_WIDTH=2\Y_WIDTH=14 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=7\B_WIDTH=20\Y_WIDTH=20 for cells of type $alu.
Using template $paramod$constmap:9f16731f96e1058a4cff993ea34c8cc767d22f56$paramod$6e649e7931b27eba8539e4b316df63e670a74bdd\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod\_90_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=7\B_WIDTH=5\Y_WIDTH=13 for cells of type $alu.
Using template $paramod$constmap:ff3de8a1899518ae52109170835ae1e1a6e3f509$paramod$51ef3ec18dc14c6970b55df45b3f700fc11eb42c\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=17\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=14\Y_WIDTH=14 for cells of type $alu.
  sub \wire117 (13 bits, unsigned)
Using template $paramod$constmap:9e4fdcb0a66bbfb989de4b540b6b7d1348ed8ef7$paramod$01ebd0f1525e0cb292c764ac608dc38996a81e34\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:610867bf7a0f0975b12bb8042fe3a7f8249d6713$paramod$30dd767e14d37db45dfc6575c3d84e4bfaf31109\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:59f1bd0582e7c4c8997df07743098126be50f6ab$paramod$937899ee683cd00eec349e8e78cc0368cf9a7d7c\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=2\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=12\Y_WIDTH=12 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=20 for cells of type $lcu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=13\B_WIDTH=13\Y_WIDTH=13 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
  add { \wire144 [5] \wire144 [5] \wire144 [5] \wire144 [5] \wire144 [5] \wire144 [0] } * \reg139 [0] (6x1 bits, unsigned)
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=22\Y_WIDTH=22 for cells of type $alu.
Using template $paramod$constmap:1739b6b4035e09c0cccdba51d946aeaa9956892c$paramod$78d59311b34799c709c1a914130ce894b403eb20\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=1\Y_WIDTH=22 for cells of type $alu.
No more expansions possible.
<suppressed ~11319 debug messages>

2.22. Executing OPT pass (performing simple optimizations).

2.22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module module133.
<suppressed ~522 debug messages>
Optimizing module module172.
<suppressed ~702 debug messages>
Optimizing module module5.
<suppressed ~2266 debug messages>
Optimizing module module63.
<suppressed ~429 debug messages>
Optimizing module module98.
<suppressed ~887 debug messages>
Optimizing module top.
<suppressed ~405 debug messages>

2.22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module133'.
<suppressed ~243 debug messages>
Finding identical cells in module `\module172'.
<suppressed ~501 debug messages>
Finding identical cells in module `\module5'.
<suppressed ~792 debug messages>
Finding identical cells in module `\module63'.
<suppressed ~129 debug messages>
Finding identical cells in module `\module98'.
<suppressed ~330 debug messages>
Finding identical cells in module `\top'.
<suppressed ~195 debug messages>
Removed a total of 730 cells.

2.22.3. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$15323 ($_DFF_P_) from module module172.
Removing $auto$simplemap.cc:420:simplemap_dff$10319 ($_DFF_P_) from module module5.
Replaced 2 DFF cells.

2.22.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module133..
Finding unused cells or wires in module \module172..
Finding unused cells or wires in module \module5..
Finding unused cells or wires in module \module63..
Finding unused cells or wires in module \module98..
Finding unused cells or wires in module \top..
Removed 828 unused cells and 3551 unused wires.
<suppressed ~834 debug messages>

2.22.5. Rerunning OPT passes. (Removed registers in this run.)

2.22.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module module133.
<suppressed ~9 debug messages>
Optimizing module module172.
<suppressed ~26 debug messages>
Optimizing module module5.
<suppressed ~35 debug messages>
Optimizing module module63.
<suppressed ~3 debug messages>
Optimizing module module98.
<suppressed ~8 debug messages>
Optimizing module top.

2.22.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module133'.
Finding identical cells in module `\module172'.
<suppressed ~3 debug messages>
Finding identical cells in module `\module5'.
<suppressed ~3 debug messages>
Finding identical cells in module `\module63'.
Finding identical cells in module `\module98'.
<suppressed ~6 debug messages>
Finding identical cells in module `\top'.
Removed a total of 4 cells.

2.22.8. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$15267 ($_DFF_P_) from module module172.
Replaced 1 DFF cells.

2.22.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module133..
Finding unused cells or wires in module \module172..
Finding unused cells or wires in module \module5..
Finding unused cells or wires in module \module63..
Finding unused cells or wires in module \module98..
Finding unused cells or wires in module \top..
Removed 0 unused cells and 36 unused wires.
<suppressed ~4 debug messages>

2.22.10. Rerunning OPT passes. (Removed registers in this run.)

2.22.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module module133.
Optimizing module module172.
Optimizing module module5.
Optimizing module module63.
Optimizing module module98.
Optimizing module top.

2.22.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module133'.
Finding identical cells in module `\module172'.
Finding identical cells in module `\module5'.
Finding identical cells in module `\module63'.
Finding identical cells in module `\module98'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.22.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.22.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module133..
Finding unused cells or wires in module \module172..
Finding unused cells or wires in module \module5..
Finding unused cells or wires in module \module63..
Finding unused cells or wires in module \module98..
Finding unused cells or wires in module \top..

2.22.15. Finished fast OPT passes.

2.23. Executing ABC pass (technology mapping using ABC).

2.23.1. Extracting gate netlist of module `\module133' to `<abc-temp-dir>/input.blif'..
Extracted 307 gates and 374 wires to a netlist network with 65 inputs and 9 outputs.

2.23.1.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.1.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        4
ABC RESULTS:            ANDNOT cells:       14
ABC RESULTS:              AOI3 cells:        7
ABC RESULTS:              AOI4 cells:        1
ABC RESULTS:               MUX cells:       43
ABC RESULTS:              NAND cells:       13
ABC RESULTS:               NOR cells:        3
ABC RESULTS:               NOT cells:       14
ABC RESULTS:              OAI3 cells:        3
ABC RESULTS:              OAI4 cells:        1
ABC RESULTS:                OR cells:       82
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:              XNOR cells:       12
ABC RESULTS:               XOR cells:       40
ABC RESULTS:        internal signals:      300
ABC RESULTS:           input signals:       65
ABC RESULTS:          output signals:        9
Removing temp directory.

2.23.2. Extracting gate netlist of module `\module172' to `<abc-temp-dir>/input.blif'..
Extracted 251 gates and 330 wires to a netlist network with 77 inputs and 50 outputs.

2.23.2.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.2.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       24
ABC RESULTS:            ANDNOT cells:       23
ABC RESULTS:              AOI3 cells:        5
ABC RESULTS:               MUX cells:       12
ABC RESULTS:              NAND cells:       10
ABC RESULTS:               NOR cells:        7
ABC RESULTS:               NOT cells:       14
ABC RESULTS:              OAI3 cells:        2
ABC RESULTS:              OAI4 cells:        1
ABC RESULTS:                OR cells:       44
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:              XNOR cells:        3
ABC RESULTS:               XOR cells:       18
ABC RESULTS:              ZERO cells:        1
ABC RESULTS:        internal signals:      203
ABC RESULTS:           input signals:       77
ABC RESULTS:          output signals:       50
Removing temp directory.

2.23.3. Extracting gate netlist of module `\module5' to `<abc-temp-dir>/input.blif'..
Extracted 2983 gates and 3525 wires to a netlist network with 540 inputs and 520 outputs.

2.23.3.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.3.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      105
ABC RESULTS:            ANDNOT cells:      387
ABC RESULTS:              AOI3 cells:      135
ABC RESULTS:              AOI4 cells:        1
ABC RESULTS:               MUX cells:      456
ABC RESULTS:              NAND cells:      112
ABC RESULTS:               NOR cells:       81
ABC RESULTS:               NOT cells:      192
ABC RESULTS:              OAI3 cells:       79
ABC RESULTS:              OAI4 cells:        8
ABC RESULTS:                OR cells:      546
ABC RESULTS:             ORNOT cells:       46
ABC RESULTS:              XNOR cells:       84
ABC RESULTS:               XOR cells:      258
ABC RESULTS:              ZERO cells:        1
ABC RESULTS:        internal signals:     2465
ABC RESULTS:           input signals:      540
ABC RESULTS:          output signals:      520
Removing temp directory.

2.23.4. Extracting gate netlist of module `\module63' to `<abc-temp-dir>/input.blif'..
Extracted 275 gates and 325 wires to a netlist network with 48 inputs and 38 outputs.

2.23.4.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.4.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        2
ABC RESULTS:            ANDNOT cells:       37
ABC RESULTS:              AOI3 cells:        8
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               MUX cells:        3
ABC RESULTS:              NAND cells:        9
ABC RESULTS:               NOR cells:       12
ABC RESULTS:               NOT cells:       13
ABC RESULTS:              OAI3 cells:       10
ABC RESULTS:              OAI4 cells:        3
ABC RESULTS:                OR cells:       52
ABC RESULTS:             ORNOT cells:        5
ABC RESULTS:              XNOR cells:       11
ABC RESULTS:               XOR cells:       23
ABC RESULTS:        internal signals:      239
ABC RESULTS:           input signals:       48
ABC RESULTS:          output signals:       38
Removing temp directory.

2.23.5. Extracting gate netlist of module `\module98' to `<abc-temp-dir>/input.blif'..
Extracted 1504 gates and 1645 wires to a netlist network with 139 inputs and 133 outputs.

2.23.5.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.5.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       25
ABC RESULTS:            ANDNOT cells:      206
ABC RESULTS:              AOI3 cells:       41
ABC RESULTS:               MUX cells:      229
ABC RESULTS:              NAND cells:       79
ABC RESULTS:               NOR cells:       66
ABC RESULTS:               NOT cells:       97
ABC RESULTS:              OAI3 cells:       23
ABC RESULTS:              OAI4 cells:        1
ABC RESULTS:                OR cells:      364
ABC RESULTS:             ORNOT cells:       26
ABC RESULTS:              XNOR cells:       27
ABC RESULTS:               XOR cells:      113
ABC RESULTS:        internal signals:     1373
ABC RESULTS:           input signals:      139
ABC RESULTS:          output signals:      133
Removing temp directory.

2.23.6. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 770 gates and 864 wires to a netlist network with 92 inputs and 79 outputs.

2.23.6.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

2.23.6.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       21
ABC RESULTS:            ANDNOT cells:       81
ABC RESULTS:              AOI3 cells:       27
ABC RESULTS:              AOI4 cells:        1
ABC RESULTS:               MUX cells:       81
ABC RESULTS:              NAND cells:       17
ABC RESULTS:               NOR cells:       40
ABC RESULTS:               NOT cells:       47
ABC RESULTS:              OAI3 cells:       24
ABC RESULTS:                OR cells:      178
ABC RESULTS:             ORNOT cells:       26
ABC RESULTS:              XNOR cells:       29
ABC RESULTS:               XOR cells:       69
ABC RESULTS:        internal signals:      693
ABC RESULTS:           input signals:       92
ABC RESULTS:          output signals:       79
Removing temp directory.

2.24. Executing OPT pass (performing simple optimizations).

2.24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module module133.
Optimizing module module172.
<suppressed ~2 debug messages>
Optimizing module module5.
<suppressed ~36 debug messages>
Optimizing module module63.
Optimizing module module98.
<suppressed ~77 debug messages>
Optimizing module top.

2.24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module133'.
Finding identical cells in module `\module172'.
<suppressed ~9 debug messages>
Finding identical cells in module `\module5'.
<suppressed ~246 debug messages>
Finding identical cells in module `\module63'.
<suppressed ~12 debug messages>
Finding identical cells in module `\module98'.
<suppressed ~63 debug messages>
Finding identical cells in module `\top'.
<suppressed ~9 debug messages>
Removed a total of 113 cells.

2.24.3. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$15307 ($_DFF_P_) from module module172.
Removing $auto$simplemap.cc:420:simplemap_dff$10333 ($_DFF_P_) from module module5.
Replaced 2 DFF cells.

2.24.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module133..
Finding unused cells or wires in module \module172..
Finding unused cells or wires in module \module5..
Finding unused cells or wires in module \module63..
Finding unused cells or wires in module \module98..
Finding unused cells or wires in module \top..
Removed 1 unused cells and 3456 unused wires.
<suppressed ~7 debug messages>

2.24.5. Rerunning OPT passes. (Removed registers in this run.)

2.24.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module module133.
Optimizing module module172.
Optimizing module module5.
<suppressed ~11 debug messages>
Optimizing module module63.
Optimizing module module98.
<suppressed ~1 debug messages>
Optimizing module top.

2.24.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module133'.
Finding identical cells in module `\module172'.
Finding identical cells in module `\module5'.
<suppressed ~3 debug messages>
Finding identical cells in module `\module63'.
Finding identical cells in module `\module98'.
<suppressed ~6 debug messages>
Finding identical cells in module `\top'.
Removed a total of 3 cells.

2.24.8. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$9991 ($_DFF_P_) from module module5.
Replaced 1 DFF cells.

2.24.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module133..
Finding unused cells or wires in module \module172..
Finding unused cells or wires in module \module5..
Finding unused cells or wires in module \module63..
Finding unused cells or wires in module \module98..
Finding unused cells or wires in module \top..
Removed 0 unused cells and 15 unused wires.
<suppressed ~2 debug messages>

2.24.10. Rerunning OPT passes. (Removed registers in this run.)

2.24.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module module133.
Optimizing module module172.
Optimizing module module5.
Optimizing module module63.
Optimizing module module98.
<suppressed ~1 debug messages>
Optimizing module top.

2.24.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\module133'.
Finding identical cells in module `\module172'.
Finding identical cells in module `\module5'.
Finding identical cells in module `\module63'.
Finding identical cells in module `\module98'.
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.24.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.24.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \module133..
Finding unused cells or wires in module \module172..
Finding unused cells or wires in module \module5..
Finding unused cells or wires in module \module63..
Finding unused cells or wires in module \module98..
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

2.24.15. Finished fast OPT passes.

2.25. Executing HIERARCHY pass (managing design hierarchy).

2.26. Printing statistics.

=== module133 ===

   Number of wires:                251
   Number of wire bits:            583
   Number of public wires:          18
   Number of public wire bits:     350
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                242
     $_ANDNOT_                      14
     $_AND_                          4
     $_AOI3_                         7
     $_AOI4_                         1
     $_DFF_P_                        3
     $_MUX_                         43
     $_NAND_                        13
     $_NOR_                          3
     $_NOT_                         14
     $_OAI3_                         3
     $_OAI4_                         1
     $_ORNOT_                        2
     $_OR_                          82
     $_XNOR_                        12
     $_XOR_                         40

=== module172 ===

   Number of wires:                194
   Number of wire bits:           1727
   Number of public wires:          71
   Number of public wire bits:    1552
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                215
     $_ANDNOT_                      23
     $_AND_                         24
     $_AOI3_                         5
     $_DFF_P_                       53
     $_MUX_                         12
     $_NAND_                        10
     $_NOR_                          6
     $_NOT_                         14
     $_OAI3_                         2
     $_OAI4_                         1
     $_ORNOT_                        2
     $_OR_                          42
     $_XNOR_                         3
     $_XOR_                         18

=== module5 ===

   Number of wires:               2034
   Number of wire bits:           4690
   Number of public wires:          77
   Number of public wire bits:    1824
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2948
     $_ANDNOT_                     376
     $_AND_                        105
     $_AOI3_                       131
     $_AOI4_                         1
     $_DFF_P_                      538
     $_MUX_                        453
     $_NAND_                       100
     $_NOR_                         72
     $_NOT_                        188
     $_OAI3_                        76
     $_OAI4_                         8
     $_ORNOT_                       43
     $_OR_                         521
     $_XNOR_                        78
     $_XOR_                        256
     module63                        1
     module98                        1

=== module63 ===

   Number of wires:                168
   Number of wire bits:            469
   Number of public wires:          18
   Number of public wire bits:     319
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                184
     $_ANDNOT_                      37
     $_AND_                          2
     $_AOI3_                         8
     $_MUX_                          3
     $_NAND_                         9
     $_NOR_                         11
     $_NOT_                         10
     $_OAI3_                        10
     $_OAI4_                         3
     $_ORNOT_                        5
     $_OR_                          52
     $_XNOR_                        11
     $_XOR_                         23

=== module98 ===

   Number of wires:               1180
   Number of wire bits:           1864
   Number of public wires:          29
   Number of public wire bits:     633
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1355
     $_ANDNOT_                     196
     $_AND_                         23
     $_AOI3_                        41
     $_DFF_P_                       83
     $_MUX_                        229
     $_NAND_                        77
     $_NOR_                         64
     $_NOT_                         97
     $_OAI3_                        23
     $_OAI4_                         1
     $_ORNOT_                       26
     $_OR_                         356
     $_XNOR_                        27
     $_XOR_                        112

=== top ===

   Number of wires:                591
   Number of wire bits:           3440
   Number of public wires:          29
   Number of public wire bits:     559
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                641
     $_ANDNOT_                      81
     $_AND_                         21
     $_AOI3_                        27
     $_AOI4_                         1
     $_MUX_                         81
     $_NAND_                        17
     $_NOR_                         40
     $_NOT_                         47
     $_OAI3_                        24
     $_ORNOT_                       26
     $_OR_                         175
     $_XNOR_                        29
     $_XOR_                         69
     module172                       2
     module5                         1

2.27. Executing CHECK pass (checking for obvious problems).
checking module module133..
checking module module172..
checking module module5..
checking module module63..
checking module module98..
checking module top..
found and reported 0 problems.

3. Executing Verilog backend.
Dumping module `\module133'.
Dumping module `\module172'.
Dumping module `\module5'.
Dumping module `\module63'.
Dumping module `\module98'.
Dumping module `\top'.

Warnings: 25 unique messages, 25 total
End of script. Logfile hash: 64c2ab2113
CPU: user 8.44s system 0.00s, MEM: 75.60 MB total, 67.62 MB resident
Yosys 0.9 (git sha1 1979e0b)
Time spent: 18% 44x opt_clean (1 sec), 16% 45x proc (1 sec), ...
